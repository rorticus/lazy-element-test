{"version":3,"sources":["webpack:///./src/theme/default/checkbox.m.css","webpack:///./src/theme/default/checkbox-group.m.css","webpack:///./src/label/index.tsx","webpack:///./src/checkbox/index.tsx","webpack:///./src/checkbox-group/middleware.tsx","webpack:///./src/checkbox-group/index.tsx","webpack:///./src/middleware/theme.tsx","webpack:///./src/common/util.ts","webpack:///./src/common/styles/base.m.css","webpack:///./src/theme/default/label.m.css"],"names":["module","exports"," _key","root","input","inputWrapper","checked","disabled","focused","readonly","required","background","invalid","valid","legend","__webpack_require__","r","__webpack_exports__","d","Label","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_0__","_common_styles_base_m_css__WEBPACK_IMPORTED_MODULE_1__","_middleware_theme__WEBPACK_IMPORTED_MODULE_2__","_theme_default_label_m_css__WEBPACK_IMPORTED_MODULE_3__","_common_util__WEBPACK_IMPORTED_MODULE_4__","Object","theme","properties","factory","id","children","middleware","aria","active","forId","hidden","readOnly","secondary","widgetId","themeCss","classes","assign","variant","for","Checkbox","_dojo_framework_core_middleware_focus__WEBPACK_IMPORTED_MODULE_0__","_dojo_framework_core_middleware_theme__WEBPACK_IMPORTED_MODULE_1__","_dojo_framework_core_util__WEBPACK_IMPORTED_MODULE_2__","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_3__","_label_index__WEBPACK_IMPORTED_MODULE_5__","_theme_default_checkbox_m_css__WEBPACK_IMPORTED_MODULE_6__","focus","_uuid","labelHidden","name","onBlur","onFocus","onValue","onOut","onOver","themeProp","value","label","key","isFocused","shouldFocus","aria-invalid","aria-readonly","type","onblur","onchange","event","stopPropagation","checkbox","target","onfocus","onpointerenter","onpointerleave","middleware_icache","icache","middleware_checkboxGroup","vdom","initialValue","undefined","existingInitialValue","get","JSON","stringify","set","reduce","existing","values","getOrSet","[object Object]","currentValues","keys","push","getAllValues","CheckboxGroup","checkboxGroup","middleware_theme","checkbox_group_factory","options","checkboxes","checkbox_group_m","map","src_checkbox","coreTheme","uppercaseFirstChar","charAt","toUpperCase","slice","isThemeWithVariant","hasOwnProperty","compose","baseCss","css","prefix","baseKey","variantKey","virtualCss","virtualTheme","variantTheme","baseTheme","prefixedCss","prefixCss","indexOf","classKey","toLowerCase","lowercaseFirstChar","replace","trim","variants","constructedTheme","variantComposesClass","Keys","formatAriaProperties","a","visuallyHidden","focusable"],"mappings":";;;;;;;;oJACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,KAAA,0BAAAC,MAAA,2BAAAC,aAAA,kCAAAC,QAAA,6BAAAC,SAAA,8BAAAC,QAAA,6BAAAC,SAAA,8BAAAC,SAAA,8BAAAC,WAAA,gCAAAC,QAAA,6BAAAC,MAAA,iDCAlBb,EAAAC,QAAA,CAAkBC,QAAA,+BAAAC,KAAA,gCAAAW,OAAA,oECDlBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAgCA,MAEaI,EAFGM,OAAAL,EAAA,EAAAK,CAAO,CAAEC,MAAAJ,EAAA,IAASK,YAEbC,CAAQ,UAAeD,WAAEA,EAAUE,GAAEA,EAAEC,SAAEA,EAAUC,YAAYL,MAAEA,KACrF,MAAMM,KACLA,EAAO,GAAEC,OACTA,EAAM1B,SACNA,EAAQC,QACRA,EAAO0B,MACPA,EAAKC,OACLA,EAAMC,SACNA,EAAQ1B,SACRA,EAAQ2B,UACRA,EAASxB,MACTA,EAAKyB,SACLA,WAAoBT,KACjBF,IAEEY,EAAWb,EAAMc,QAAQjB,GAE/B,OACCE,OAAAL,EAAA,EADM,CACN,QAAAK,OAAAgB,OAAA,GACKhB,OAAAD,EAAA,EAAAC,CAAqBO,GAAK,CAC9BH,GAAIS,EACJE,QAAS,CACRd,EAAMgB,UACNH,EAASpC,KACTI,EAAWgC,EAAShC,SAAW,KAC/BC,EAAU+B,EAAS/B,QAAU,MACnB,IAAVK,EAAiB0B,EAAS1B,MAAQ,MACxB,IAAVA,EAAkB0B,EAAS3B,QAAU,KACrCwB,EAAWG,EAAS9B,SAAW,KAC/BC,EAAW6B,EAAS7B,SAAW,KAC/B2B,EAAYE,EAASF,UAAY,KACjCJ,EAASM,EAASN,OAAS,KAC3BE,EAASd,EAAA,eAAyB,MAEnCsB,IAAKT,IAEJJ,OAKWb,EAAA,2CC1EfF,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAA2B,IAAA,IAAAC,EAAA9B,EAAA,IAAA+B,EAAA/B,EAAA,IAAAgC,EAAAhC,EAAA,IAAAiC,EAAAjC,EAAA,GAAAS,EAAAT,EAAA,IAAAkC,EAAAlC,EAAA,IAAAmC,EAAAnC,EAAA,KA0CA,MAIa6B,EAJGnB,OAAAuB,EAAA,EAAAvB,CAAO,CAAEC,MAAAoB,EAAA,EAAOK,MAAAN,EAAA,IAC9BlB,aACAG,UAEsBF,CAAQ,UAAkBE,SACjDA,EAAQH,WACRA,EACAI,YAAYL,MAAEA,EAAKyB,MAAEA,KAErB,MAAMC,EAAQ3B,OAAAsB,EAAA,EAAAtB,IACRO,KACLA,EAAO,GAAE1B,QACTA,GAAU,EAAKkC,QACfA,EAAOjC,SACPA,EAAQ8C,YACRA,EAAWC,KACXA,EAAIC,OACJA,EAAMC,QACNA,EAAOC,QACPA,EAAOC,MACPA,EAAKC,OACLA,EAAMvB,SACNA,EAAQ1B,SACRA,EACAgB,MAAOkC,EAAS/C,MAChBA,EAAKgD,MACLA,EAAKvB,SACLA,EAAWc,GACRzB,KAEGmC,GAAShC,IACVS,EAAWb,EAAMc,QAAQU,GAE/B,OACCzB,OAAAuB,EAAA,EADM,CACN,OACCe,IAAI,OACJvB,QAAS,CACRd,EAAMgB,UACNH,EAASpC,KACTG,EAAUiC,EAASjC,QAAU,KAC7BC,EAAWgC,EAAShC,SAAW,KAC/B4C,EAAMa,UAAU,QAAUzB,EAAS/B,QAAU,MACnC,IAAVK,EAAkB0B,EAAS3B,QAAU,MAC3B,IAAVC,EAAiB0B,EAAS1B,MAAQ,KAClCuB,EAAWG,EAAS9B,SAAW,KAC/BC,EAAW6B,EAAS7B,SAAW,OAGhCe,OAAAuB,EAAA,EAAAvB,CAAA,OAAKe,QAASD,EAASlC,cACtBoB,OAAAuB,EAAA,EAAAvB,CAAA,QAAAA,OAAAgB,OAAA,CACCZ,GAAIS,GACAb,OAAAD,EAAA,EAAAC,CAAqBO,GAAK,CAC9BQ,QAASD,EAASnC,MAClBE,QAASA,EACTC,SAAUA,EACV4C,MAAOA,EAAMc,cAAaC,gBACF,IAAVrD,EAAkB,OAAS,KACzCyC,KAAMA,EACN7C,SAAU2B,EAAQ+B,iBACU,IAAb/B,EAAoB,OAAS,KAC5C1B,SAAUA,EACV0D,KAAK,WACLP,MAAOA,EACPQ,OAAQ,IAAMd,GAAUA,IACxBe,SAAWC,IACVA,EAAMC,kBACN,MAAMC,EAAWF,EAAMG,OACvBjB,EAAQgB,EAASnE,UAElBqE,QAAS,IAAMnB,GAAWA,IAC1BoB,eAAgB,IAAMjB,GAAUA,IAChCkB,eAAgB,IAAMnB,GAASA,OAEhCjC,OAAAuB,EAAA,EAAAvB,CAAA,OAAKe,QAASD,EAAS5B,cAEvBmD,GACArC,OAAAuB,EAAA,EADS,CACRC,EAAA,QAAK,CACLc,IAAI,QACJvB,QAASA,EACTd,MAAOkC,EACPrD,SAAUA,EACVC,QAAS2C,EAAMa,UAAU,QACzBnD,MAAOA,EACPuB,SAAUA,EACV1B,SAAUA,EACVyB,OAAQkB,EACRnB,MAAOI,EACPD,WAAW,GAEVyB,MAOS7C,EAAA,qECjIf,MAAM6D,EAASrD,OAAAsD,EAAA,EAAAtD,GAGFuD,EAFGvD,OAAAwD,EAAA,EAAAxD,CAAO,CAAEsD,OAAMD,GAEFlD,CAAQ,EAAGG,YAAcgD,aAC9C,CAACtB,EAAoCyB,EAAyB,GAAIrB,KACxE,QAAcsB,IAAVtB,EAAqB,CACxB,MAAMuB,EAAuBL,EAAOM,IAAI,WACpCC,KAAKC,UAAUH,KAA0BE,KAAKC,UAAUL,KAC3DH,EAAOS,IACN,SACAN,EAAaO,OAAO,CAACC,EAAe7B,KACnC6B,EAAS7B,IAAS,EACX6B,GACL,KAEJX,EAAOS,IAAI,UAAWN,SAGvBH,EAAOS,IACN,SACA3B,EAAM4B,OAAO,CAACC,EAAe7B,KAC5B6B,EAAS7B,IAAS,EACX6B,GACL,KAgBL,OAAQ3B,IAcP,MAAO,CACNzD,QAZD,SAAiBA,GAChB,MAAMqF,EAASZ,EAAOa,SAAS,SAAU,IAEzC,QAAgBT,IAAZ7E,EACH,QAASqF,EAAO5B,GACN4B,EAAO5B,KAASzD,IAC1ByE,EAAOS,IAAI,SAAQ/D,OAAAgB,OAAA,GAAOkD,EAAM,CAAEE,CAAC9B,GAAMzD,KACzCmD,EAtBH,WACC,MAAMqC,EAAgBf,EAAOM,IAAI,WAAa,GAG9C,OAFa5D,OAAOsE,KAAKD,GAEbL,OAAO,CAACE,EAAkB5B,KACjC+B,EAAc/B,IACjB4B,EAAOK,KAAKjC,GAEN4B,GACL,IAaOM,uCC3DblF,EAAAG,EAAAD,EAAA,kCAAAiF,IAgCA,MAIaA,EAJGzE,OAAAwD,EAAA,EAAAxD,CAAO,CAAE0E,cAAAnB,EAAetD,MAAA0E,EAAA,IACtCzE,aACAG,UAE2BuE,CAAQ,UAASvE,SAC7CA,EAAQH,WACRA,EACAI,YAAYoE,cAAEA,EAAazE,MAAEA,KAE7B,MAAM4B,KAAEA,EAAIgD,QAAEA,EAAO7C,QAAEA,EAAOyB,aAAEA,EAAYrB,MAAEA,GAAUlC,MACjD4E,WAAEA,EAAUzC,MAAEA,GAAU,CAAEyC,gBAAYpB,EAAWrB,WAAOqB,IAAerD,IAExE2C,EAAW0B,EAAc1C,EAASyB,EAAcrB,IAChD1D,KAAEA,EAAIW,OAAEA,GAAWY,EAAMc,QAAQgE,GAgBvC,OACC/E,OAAAwD,EAAA,EADM,CACN,YAAUlB,IAAI,OAAOvB,QAAS,CAACd,EAAMgB,UAAWvC,GAAOmD,KAAMA,GAC3DQ,GAASrC,OAAAwD,EAAA,EAAAxD,CAAA,UAAQe,QAAS1B,GAASgD,GAfjCyC,EACIA,EAAWjD,EAAMmB,EAAU6B,GAE5BA,EAAQG,IAAI,EAAG5C,QAAOC,YAC5B,MAAMxD,QAAEA,GAAYmE,EAASZ,GAC7B,OACCpC,OAAAwD,EAAA,EADM,CACLyB,EAAA,SAAQ,CAACpD,KAAMA,EAAMO,MAAOA,EAAOvD,QAASA,IAAWmD,QAASnD,GAC/DwD,GAASD,QAcA5C,EAAA,2CCrEfF,EAAAG,EAAAD,EAAA,sBAAAS,IAAA,IAAAN,EAAAL,EAAA,GAAA+B,EAAA/B,EAAA,IAOA,MAAMa,EAAUH,OAAAL,EAAA,EAAAK,CAAO,CAAEkF,UAAA7D,EAAA,IAGzB,SAAS8D,EAAmB/C,GAC3B,SAAUA,EAAMgD,OAAO,GAAGC,gBAAgBjD,EAAMkD,MAAM,KAOvD,SAASC,EAAmBtF,GAC3B,OAAOA,GAASA,EAAMuF,eAAe,WAK/B,MAAMvF,EAAQE,EAAQ,UAAWG,YAAY4E,UAAEA,GAAWhF,WAAEA,IAClE,OAAAF,OAAAgB,OAAA,CACCyE,QAAS,CACRC,EACAC,EACAC,KAEA,MAAM3F,EAAQC,IAAaD,MACrB4F,EAAUH,EAxBM,SAyBhBI,EAAaH,EAzBG,SA0BhBI,EAAa/F,OAAOsE,KAAKoB,GAAS1B,OACvC,CAAC+B,EAAYzD,IA3BQ,UA4BhBA,EACIyD,GAEJH,IAAWG,KAAcH,IAAST,EAAmB7C,QACxDyD,KAAcH,IAAST,EAAmB7C,MAAU,KAEhDqD,EAAIrD,KACRyD,EAAWzD,GAAO,KAEZyD,GAER,CAAEtH,QAAaqH,IAEVE,EAAed,EAAUnE,QAAQgF,GACjCE,EAAef,EAAUnE,QAAQ4E,GACvC,IAAIO,EAAYhB,EAAUnE,QAAQ2E,GAClC,GAAIE,EAAQ,CACX,MAAMO,EAAcnG,OAAOsE,KAAItE,OAAAgB,OAAA,GAAMgF,EAAiBC,IAAgBjC,OACrE,CAACoC,EAAW9D,KACX,GAA4B,IAAxBA,EAAI+D,QAAQT,IAAiBtD,IAAQsD,EAAQ,CAChD,MAAMU,EA1Cb,SAA4BlE,GAC3B,SAAUA,EAAMgD,OAAO,GAAGmB,gBAAgBnE,EAAMkD,MAAM,KAyC/BkB,CAAmBlE,EAAImE,QAAQb,EAAQ,MAEtDK,EAAa3D,IACd0D,EAAa1D,IACb0D,EAAa1D,GAAKoE,SAElBN,EAAUE,MAAeJ,EAAUI,MAAaN,EAC/C1D,GACCoE,UAECT,EAAa3D,KAChB8D,EAAUE,GAAYL,EAAa3D,IAGrC,OAAO8D,GAER,IAID,OAFAF,EAASlG,OAAAgB,OAAA,GAAQkF,EAAcC,GAE3BZ,EAAmBtF,GACf,CACNA,MAAO,CACNA,MAAKD,OAAAgB,OAAA,GACDf,EAAMA,MAAMA,MAAK,CACpBmE,CAACyB,GAAUK,IAEZS,SAAU1G,EAAMA,MAAM0G,UAEvB1F,QAAShB,EAAMgB,SAIjBjB,OAAAgB,OAAA,GACIf,EAAK,CACRmE,CAACyB,GAAUK,IAIb,MAAMU,EAAmB5G,OAAOsE,KAAK4B,GAAWlC,OAC/C,CAAC/D,EAAOqC,KACP,GAzFoB,UAyFhBA,EACH,OAAOrC,EAER,MAAM4G,EAAuBZ,EAAa3D,IAAQ2D,EAAa3D,GAAKoE,OAMpE,OALIT,EAAa3D,GAChBrC,EAAMqC,GAAOuE,EACHb,EAAa1D,IAAQ0D,EAAa1D,GAAKoE,SACjDzG,EAAMqC,MAAUrC,EAAMqC,MAAQ0D,EAAa1D,GAAKoE,UAE1CzG,GAERD,OAAAgB,OAAA,GAAKkF,IAGN,OAAIX,EAAmBtF,GACf,CACNA,MAAO,CACNA,MAAKD,OAAAgB,OAAA,GACDf,EAAMA,MAAMA,MAAK,CACpBmE,CAACyB,GAAUe,IAEZD,SAAU1G,EAAMA,MAAM0G,UAEvB1F,QAAShB,EAAMgB,SAIjBjB,OAAAgB,OAAA,GACIf,EAAK,CACRmE,CAACyB,GAAUe,MAGV1B,KAIU1F,EAAA,qCCjIf,IAAYsH,EAeL,SAASC,EAAqBxG,GAKpC,OAJsBP,OAAOsE,KAAK/D,GAAMyD,OAAO,CAACgD,EAAuB1E,KACtE0E,UAAU1E,EAAIiE,iBAAmBhG,EAAK+B,GAC/B0E,GACL,IAnBJ1H,EAAAG,EAAAD,EAAA,sBAAAsH,IAAAxH,EAAAG,EAAAD,EAAA,sBAAAuH,IAAA,SAAYD,GACXA,IAAA,gBACAA,IAAA,cACAA,IAAA,kBACAA,IAAA,oBACAA,IAAA,gBACAA,IAAA,gBACAA,IAAA,wBACAA,IAAA,oBACAA,IAAA,kBACAA,IAAA,kBACAA,IAAA,aACAA,IAAA,YAZD,CAAYA,MAAI,yBCHhBvI,EAAAC,QAAA,CAAkBC,QAAA,qBAAAwI,eAAA,gCAAAC,UAAA,2BAAAxG,OAAA,6CCAlBnC,EAAAC,QAAA,CAAkBC,QAAA,sBAAAC,KAAA,uBAAAM,SAAA,2BAAAG,QAAA,0BAAAC,MAAA,wBAAAH,SAAA,2BAAAH,SAAA,2BAAAC,QAAA,0BAAA6B,UAAA,4BAAAJ,OAAA","file":"20-7.0.0-pre.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/checkbox\",\"root\":\"checkbox-m__root__1pxWQ\",\"input\":\"checkbox-m__input__CZJkF\",\"inputWrapper\":\"checkbox-m__inputWrapper__efIfT\",\"checked\":\"checkbox-m__checked__2e35U\",\"disabled\":\"checkbox-m__disabled__2pxrv\",\"focused\":\"checkbox-m__focused__1qMiJ\",\"readonly\":\"checkbox-m__readonly__3tnli\",\"required\":\"checkbox-m__required__1we1M\",\"background\":\"checkbox-m__background__1mGXN\",\"invalid\":\"checkbox-m__invalid__3ISg0\",\"valid\":\"checkbox-m__valid__2whfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/checkbox-group\",\"root\":\"checkbox-group-m__root__2iA5u\",\"legend\":\"checkbox-group-m__legend__2fbir\"};","import { create, tsx } from '@dojo/framework/core/vdom';\n\nimport * as baseCss from '../common/styles/base.m.css';\nimport theme from '../middleware/theme';\nimport * as css from '../theme/default/label.m.css';\nimport { formatAriaProperties } from '../common/util';\n\nexport interface LabelProperties {\n\t/** Custom aria attributes */\n\taria?: { [key: string]: string | null };\n\t/** If the label should be disabled */\n\tdisabled?: boolean;\n\t/** If the label is focused */\n\tfocused?: boolean;\n\t/** ID to explicitly associate the label with an input element */\n\tforId?: string;\n\t/** If the label should be invisible (it will remain accessible to screen readers) */\n\thidden?: boolean;\n\t/** If the label is read only */\n\treadOnly?: boolean;\n\t/** If the label is required */\n\trequired?: boolean;\n\t/** If the label should use the secondary styling */\n\tsecondary?: boolean;\n\t/** If the label is valid */\n\tvalid?: boolean;\n\t/** ID of the underlying label element */\n\twidgetId?: string;\n\t/** Indicates that the label or it's control are active, will add extra style class */\n\tactive?: boolean;\n}\n\nconst factory = create({ theme }).properties<LabelProperties>();\n\nexport const Label = factory(function Label({ properties, id, children, middleware: { theme } }) {\n\tconst {\n\t\taria = {},\n\t\tactive,\n\t\tdisabled,\n\t\tfocused,\n\t\tforId,\n\t\thidden,\n\t\treadOnly,\n\t\trequired,\n\t\tsecondary,\n\t\tvalid,\n\t\twidgetId = `label-${id}`\n\t} = properties();\n\n\tconst themeCss = theme.classes(css);\n\n\treturn (\n\t\t<label\n\t\t\t{...formatAriaProperties(aria)}\n\t\t\tid={widgetId}\n\t\t\tclasses={[\n\t\t\t\ttheme.variant(),\n\t\t\t\tthemeCss.root,\n\t\t\t\tdisabled ? themeCss.disabled : null,\n\t\t\t\tfocused ? themeCss.focused : null,\n\t\t\t\tvalid === true ? themeCss.valid : null,\n\t\t\t\tvalid === false ? themeCss.invalid : null,\n\t\t\t\treadOnly ? themeCss.readonly : null,\n\t\t\t\trequired ? themeCss.required : null,\n\t\t\t\tsecondary ? themeCss.secondary : null,\n\t\t\t\tactive ? themeCss.active : null,\n\t\t\t\thidden ? baseCss.visuallyHidden : null\n\t\t\t]}\n\t\t\tfor={forId}\n\t\t>\n\t\t\t{children()}\n\t\t</label>\n\t);\n});\n\nexport default Label;\n","import { RenderResult } from '@dojo/framework/core/interfaces';\nimport focus from '@dojo/framework/core/middleware/focus';\nimport theme from '@dojo/framework/core/middleware/theme';\nimport { uuid } from '@dojo/framework/core/util';\nimport { tsx, create } from '@dojo/framework/core/vdom';\n\nimport { formatAriaProperties } from '../common/util';\nimport Label from '../label/index';\nimport * as css from '../theme/default/checkbox.m.css';\n\nexport interface CheckboxProperties {\n\t/** Custom aria attributes */\n\taria?: { [key: string]: string | null };\n\t/**  Checked/unchecked property of the control */\n\tchecked: boolean;\n\t/** Set the disabled property of the control */\n\tdisabled?: boolean;\n\t/** Hides the label from view while still remaining accessible for screen readers */\n\tlabelHidden?: boolean;\n\t/** The name of the checkbox */\n\tname?: string;\n\t/** Handler for when the element is blurred */\n\tonBlur?(): void;\n\t/** Handler for when the element is focused */\n\tonFocus?(): void;\n\t/** Handler for when the pointer moves out of the element */\n\tonOut?(): void;\n\t/** Handler for when the pointer moves over the element */\n\tonOver?(): void;\n\t/** Handler for when the value of the widget changes */\n\tonValue(checked: boolean): void;\n\t/** Makes the checkbox readonly (it may be focused but not changed) */\n\treadOnly?: boolean;\n\t/** Sets the checkbox input as required to complete the form */\n\trequired?: boolean;\n\t/** Toggles the invalid/valid states of the Checkbox affecting how it is displayed */\n\tvalid?: boolean;\n\t/** The current value */\n\tvalue?: string;\n\t/** The id used for the form input element */\n\twidgetId?: string;\n}\n\nconst factory = create({ theme, focus })\n\t.properties<CheckboxProperties>()\n\t.children<RenderResult | undefined>();\n\nexport const Checkbox = factory(function Checkbox({\n\tchildren,\n\tproperties,\n\tmiddleware: { theme, focus }\n}) {\n\tconst _uuid = uuid();\n\tconst {\n\t\taria = {},\n\t\tchecked = false,\n\t\tclasses,\n\t\tdisabled,\n\t\tlabelHidden,\n\t\tname,\n\t\tonBlur,\n\t\tonFocus,\n\t\tonValue,\n\t\tonOut,\n\t\tonOver,\n\t\treadOnly,\n\t\trequired,\n\t\ttheme: themeProp,\n\t\tvalid,\n\t\tvalue,\n\t\twidgetId = _uuid\n\t} = properties();\n\n\tconst [label] = children();\n\tconst themeCss = theme.classes(css);\n\n\treturn (\n\t\t<div\n\t\t\tkey=\"root\"\n\t\t\tclasses={[\n\t\t\t\ttheme.variant(),\n\t\t\t\tthemeCss.root,\n\t\t\t\tchecked ? themeCss.checked : null,\n\t\t\t\tdisabled ? themeCss.disabled : null,\n\t\t\t\tfocus.isFocused('root') ? themeCss.focused : null,\n\t\t\t\tvalid === false ? themeCss.invalid : null,\n\t\t\t\tvalid === true ? themeCss.valid : null,\n\t\t\t\treadOnly ? themeCss.readonly : null,\n\t\t\t\trequired ? themeCss.required : null\n\t\t\t]}\n\t\t>\n\t\t\t<div classes={themeCss.inputWrapper}>\n\t\t\t\t<input\n\t\t\t\t\tid={widgetId}\n\t\t\t\t\t{...formatAriaProperties(aria)}\n\t\t\t\t\tclasses={themeCss.input}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tfocus={focus.shouldFocus()}\n\t\t\t\t\taria-invalid={valid === false ? 'true' : null}\n\t\t\t\t\tname={name}\n\t\t\t\t\treadonly={readOnly}\n\t\t\t\t\taria-readonly={readOnly === true ? 'true' : null}\n\t\t\t\t\trequired={required}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonblur={() => onBlur && onBlur()}\n\t\t\t\t\tonchange={(event: Event) => {\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tconst checkbox = event.target as HTMLInputElement;\n\t\t\t\t\t\tonValue(checkbox.checked);\n\t\t\t\t\t}}\n\t\t\t\t\tonfocus={() => onFocus && onFocus()}\n\t\t\t\t\tonpointerenter={() => onOver && onOver()}\n\t\t\t\t\tonpointerleave={() => onOut && onOut()}\n\t\t\t\t/>\n\t\t\t\t<div classes={themeCss.background} />\n\t\t\t</div>\n\t\t\t{label && (\n\t\t\t\t<Label\n\t\t\t\t\tkey=\"label\"\n\t\t\t\t\tclasses={classes}\n\t\t\t\t\ttheme={themeProp}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tfocused={focus.isFocused('root')}\n\t\t\t\t\tvalid={valid}\n\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\trequired={required}\n\t\t\t\t\thidden={labelHidden}\n\t\t\t\t\tforId={widgetId}\n\t\t\t\t\tsecondary={true}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</Label>\n\t\t\t)}\n\t\t</div>\n\t);\n});\n\nexport default Checkbox;\n","import { create } from '@dojo/framework/core/vdom';\nimport { createICacheMiddleware } from '@dojo/framework/core/middleware/icache';\n\ninterface CheckboxGroupICache {\n\tvalues: {\n\t\t[key: string]: boolean;\n\t};\n\tinitial: string[];\n}\n\nconst icache = createICacheMiddleware<CheckboxGroupICache>();\nconst factory = create({ icache });\n\nexport const checkboxGroup = factory(({ middleware: { icache } }) => {\n\treturn (onValue: (value: string[]) => void, initialValue: string[] = [], value?: string[]) => {\n\t\tif (value === undefined) {\n\t\t\tconst existingInitialValue = icache.get('initial');\n\t\t\tif (JSON.stringify(existingInitialValue) !== JSON.stringify(initialValue)) {\n\t\t\t\ticache.set(\n\t\t\t\t\t'values',\n\t\t\t\t\tinitialValue.reduce((existing: any, value) => {\n\t\t\t\t\t\texisting[value] = true;\n\t\t\t\t\t\treturn existing;\n\t\t\t\t\t}, {})\n\t\t\t\t);\n\t\t\t\ticache.set('initial', initialValue);\n\t\t\t}\n\t\t} else {\n\t\t\ticache.set(\n\t\t\t\t'values',\n\t\t\t\tvalue.reduce((existing: any, value) => {\n\t\t\t\t\texisting[value] = true;\n\t\t\t\t\treturn existing;\n\t\t\t\t}, {})\n\t\t\t);\n\t\t}\n\n\t\tfunction getAllValues() {\n\t\t\tconst currentValues = icache.get('values') || {};\n\t\t\tconst keys = Object.keys(currentValues);\n\n\t\t\treturn keys.reduce((values: string[], key: string) => {\n\t\t\t\tif (currentValues[key]) {\n\t\t\t\t\tvalues.push(key);\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}, []);\n\t\t}\n\n\t\treturn (key: string) => {\n\t\t\tfunction checked(): boolean;\n\t\t\tfunction checked(checked: boolean): void;\n\t\t\tfunction checked(checked?: boolean): boolean | void {\n\t\t\t\tconst values = icache.getOrSet('values', {});\n\n\t\t\t\tif (checked === undefined) {\n\t\t\t\t\treturn !!values[key];\n\t\t\t\t} else if (values[key] !== checked) {\n\t\t\t\t\ticache.set('values', { ...values, [key]: checked });\n\t\t\t\t\tonValue(getAllValues());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tchecked\n\t\t\t};\n\t\t};\n\t};\n});\n","import { create, tsx } from '@dojo/framework/core/vdom';\nimport { checkboxGroup } from './middleware';\nimport { Checkbox } from '../checkbox/index';\nimport { RenderResult } from '@dojo/framework/core/interfaces';\nimport theme from '@dojo/framework/core/middleware/theme';\nimport * as css from '../theme/default/checkbox-group.m.css';\n\ntype CheckboxOptions = { value: string; label?: string }[];\n\nexport interface CheckboxGroupProperties {\n\t/** The name attribute for this form group */\n\tname: string;\n\t/** Object containing the values / labels to create checkboxes for */\n\toptions: CheckboxOptions;\n\t/** Callback for the current value */\n\tonValue(value: string[]): void;\n\t/** Initial value of the checkbox group */\n\tinitialValue?: string[];\n\t/** A controlled value for the checkbox group */\n\tvalue?: string[];\n}\n\nexport interface CheckboxGroupChildren {\n\t/** Custom renderer for the checkboxes, receives the checkbox group middleware and options */\n\tcheckboxes?(\n\t\tname: string,\n\t\tmiddleware: ReturnType<ReturnType<typeof checkboxGroup>['api']>,\n\t\toptions: CheckboxOptions\n\t): RenderResult;\n\tlabel?: RenderResult;\n}\n\nconst factory = create({ checkboxGroup, theme })\n\t.properties<CheckboxGroupProperties>()\n\t.children<CheckboxGroupChildren | undefined>();\n\nexport const CheckboxGroup = factory(function({\n\tchildren,\n\tproperties,\n\tmiddleware: { checkboxGroup, theme }\n}) {\n\tconst { name, options, onValue, initialValue, value } = properties();\n\tconst [{ checkboxes, label } = { checkboxes: undefined, label: undefined }] = children();\n\n\tconst checkbox = checkboxGroup(onValue, initialValue, value);\n\tconst { root, legend } = theme.classes(css);\n\n\tfunction renderCheckboxes() {\n\t\tif (checkboxes) {\n\t\t\treturn checkboxes(name, checkbox, options);\n\t\t}\n\t\treturn options.map(({ value, label }) => {\n\t\t\tconst { checked } = checkbox(value);\n\t\t\treturn (\n\t\t\t\t<Checkbox name={name} value={value} checked={checked()} onValue={checked}>\n\t\t\t\t\t{label || value}\n\t\t\t\t</Checkbox>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<fieldset key=\"root\" classes={[theme.variant(), root]} name={name}>\n\t\t\t{label && <legend classes={legend}>{label}</legend>}\n\t\t\t{renderCheckboxes()}\n\t\t</fieldset>\n\t);\n});\n\nexport default CheckboxGroup;\n","import { create } from '@dojo/framework/core/vdom';\nimport coreTheme, {\n\tThemeProperties as CoreThemeProperties\n} from '@dojo/framework/core/middleware/theme';\nimport { ClassNames, Theme } from '@dojo/framework/core/mixins/Themed';\nimport { ThemeWithVariant } from '@dojo/framework/core/interfaces';\n\nconst factory = create({ coreTheme });\nexport const THEME_KEY = ' _key';\n\nfunction uppercaseFirstChar(value: string) {\n\treturn `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n}\n\nfunction lowercaseFirstChar(value: string) {\n\treturn `${value.charAt(0).toLowerCase()}${value.slice(1)}`;\n}\n\nfunction isThemeWithVariant(theme: any): theme is ThemeWithVariant {\n\treturn theme && theme.hasOwnProperty('variant');\n}\n\nexport interface ThemeProperties extends CoreThemeProperties {}\n\nexport const theme = factory(function({ middleware: { coreTheme }, properties }) {\n\treturn {\n\t\tcompose: <T extends ClassNames, B extends ClassNames>(\n\t\t\tbaseCss: B,\n\t\t\tcss: T,\n\t\t\tprefix?: string\n\t\t): Theme | ThemeWithVariant => {\n\t\t\tconst theme = properties().theme;\n\t\t\tconst baseKey = baseCss[THEME_KEY];\n\t\t\tconst variantKey = css[THEME_KEY];\n\t\t\tconst virtualCss = Object.keys(baseCss).reduce(\n\t\t\t\t(virtualCss, key) => {\n\t\t\t\t\tif (key === THEME_KEY) {\n\t\t\t\t\t\treturn virtualCss;\n\t\t\t\t\t}\n\t\t\t\t\tif (prefix && !virtualCss[`${prefix}${uppercaseFirstChar(key)}`]) {\n\t\t\t\t\t\tvirtualCss[`${prefix}${uppercaseFirstChar(key)}`] = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tif (!css[key]) {\n\t\t\t\t\t\tvirtualCss[key] = ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn virtualCss;\n\t\t\t\t},\n\t\t\t\t{ [THEME_KEY]: variantKey } as ClassNames\n\t\t\t);\n\t\t\tconst virtualTheme = coreTheme.classes(virtualCss);\n\t\t\tconst variantTheme = coreTheme.classes(css);\n\t\t\tlet baseTheme = coreTheme.classes(baseCss);\n\t\t\tif (prefix) {\n\t\t\t\tconst prefixedCss = Object.keys({ ...virtualTheme, ...variantTheme }).reduce(\n\t\t\t\t\t(prefixCss, key) => {\n\t\t\t\t\t\tif (key.indexOf(prefix) === 0 && key !== prefix) {\n\t\t\t\t\t\t\tconst classKey = lowercaseFirstChar(key.replace(prefix, ''));\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!variantTheme[key] &&\n\t\t\t\t\t\t\t\tvirtualTheme[key] &&\n\t\t\t\t\t\t\t\tvirtualTheme[key].trim()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tprefixCss[classKey] = `${baseTheme[classKey]} ${virtualTheme[\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t].trim()}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (variantTheme[key]) {\n\t\t\t\t\t\t\t\tprefixCss[classKey] = variantTheme[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prefixCss;\n\t\t\t\t\t},\n\t\t\t\t\t{} as ClassNames\n\t\t\t\t);\n\t\t\t\tbaseTheme = { ...baseTheme, ...prefixedCss };\n\n\t\t\t\tif (isThemeWithVariant(theme)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\t\t...theme.theme.theme,\n\t\t\t\t\t\t\t\t[baseKey]: baseTheme\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvariants: theme.theme.variants\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvariant: theme.variant\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...theme,\n\t\t\t\t\t[baseKey]: baseTheme\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst constructedTheme = Object.keys(baseTheme).reduce(\n\t\t\t\t(theme, key) => {\n\t\t\t\t\tif (key === THEME_KEY) {\n\t\t\t\t\t\treturn theme;\n\t\t\t\t\t}\n\t\t\t\t\tconst variantComposesClass = variantTheme[key] && variantTheme[key].trim();\n\t\t\t\t\tif (variantTheme[key]) {\n\t\t\t\t\t\ttheme[key] = variantComposesClass;\n\t\t\t\t\t} else if (virtualTheme[key] && virtualTheme[key].trim()) {\n\t\t\t\t\t\ttheme[key] = `${theme[key]} ${virtualTheme[key].trim()}`;\n\t\t\t\t\t}\n\t\t\t\t\treturn theme;\n\t\t\t\t},\n\t\t\t\t{ ...baseTheme } as ClassNames\n\t\t\t);\n\n\t\t\tif (isThemeWithVariant(theme)) {\n\t\t\t\treturn {\n\t\t\t\t\ttheme: {\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\t...theme.theme.theme,\n\t\t\t\t\t\t\t[baseKey]: constructedTheme\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvariants: theme.theme.variants\n\t\t\t\t\t},\n\t\t\t\t\tvariant: theme.variant\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...theme,\n\t\t\t\t[baseKey]: constructedTheme\n\t\t\t};\n\t\t},\n\t\t...coreTheme\n\t};\n});\n\nexport default theme;\n","interface AriaPropertyObject {\n\t[key: string]: string | null;\n}\n\nexport enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function formatAriaProperties(aria: AriaPropertyObject): AriaPropertyObject {\n\tconst formattedAria = Object.keys(aria).reduce((a: AriaPropertyObject, key: string) => {\n\t\ta[`aria-${key.toLowerCase()}`] = aria[key];\n\t\treturn a;\n\t}, {});\n\treturn formattedAria;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/base\",\"visuallyHidden\":\"base-m__visuallyHidden__1AeWe\",\"focusable\":\"base-m__focusable__1_qAN\",\"hidden\":\"base-m__hidden__3QddU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/label\",\"root\":\"label-m__root__3Kk7r\",\"readonly\":\"label-m__readonly__2pxUq\",\"invalid\":\"label-m__invalid__1CZyi\",\"valid\":\"label-m__valid__2hdFV\",\"required\":\"label-m__required__2WVo7\",\"disabled\":\"label-m__disabled__34MEb\",\"focused\":\"label-m__focused__ISy0H\",\"secondary\":\"label-m__secondary__37QWK\",\"active\":\"label-m__active__3MoIi\"};"],"sourceRoot":""}