{"version":3,"sources":["webpack:///./src/theme/default/dialog.m.css","webpack:///./src/dialog/styles/dialog.m.css","webpack:///./node_modules/@dojo/framework/shim/inert.mjs","webpack:///./node_modules/wicg-inert/dist/inert.js","webpack:///./src/icon/index.tsx","webpack:///./src/global-event/index.tsx","webpack:///./node_modules/@dojo/framework/core/middleware/inert.mjs","webpack:///./src/dialog/index.tsx","webpack:///./src/middleware/theme.tsx","webpack:///./src/common/util.ts","webpack:///./src/common/styles/base.m.css","webpack:///./src/theme/default/icon.m.css","webpack:///./src/middleware/bodyScroll.tsx","webpack:///./src/common/nls/common.ts"],"names":["module","exports"," _key","root","open","main","title","close","closeIcon","content","underlayVisible","enter","underlayEnter","fadeIn","exit","underlayExit","fadeOut","actions","underlay","__webpack_require__","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","slice","Array","matches","Element","msMatchesSelector","_focusableElementsString","join","InertRoot","rootElement","inertManager","this","_inertManager","_rootElement","_managedNodes","Set","hasAttribute","_savedAriaHidden","getAttribute","setAttribute","_makeSubtreeUnfocusable","_observer","MutationObserver","_onMutation","bind","observe","attributes","childList","subtree","value","disconnect","removeAttribute","forEach","inertNode","_unmanageNode","node","startNode","_this2","composedTreeWalk","_visitNode","activeElement","document","body","contains","undefined","nodeType","Node","DOCUMENT_FRAGMENT_NODE","parentNode","blur","focus","ELEMENT_NODE","element","_adoptInertRoot","call","_manageNode","register","add","deregister","_this3","inertSubroot","getInertRoot","setInert","managedNodes","savedInertNode","records","self","record","type","addedNodes","removedNodes","_unmanageSubtree","attributeName","managedNode","get","set","ariaHidden","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_savedTabIndex","_destroyed","ensureUntabbable","_throwIfDestroyed","destroyed","Error","tabIndex","hasSavedTabIndex","size","destructor","callback","shadowRootAncestor","shadowRoot","localName","distributedNodes","getDistributedNodes","slot","_distributedNodes","assignedNodes","flatten","_i","child","firstChild","nextSibling","addInertStyle","querySelector","style","createElement","textContent","appendChild","InertManager","_document","Map","_watchForInert","head","documentElement","readyState","addEventListener","_onDocumentLoaded","inert","has","parent","_inertRoot","addInertRoot","removeInertRoot","inertElements","querySelectorAll","inertElement","_this","unshift","hasOwnProperty","factory","r","__webpack_exports__","d","Icon","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_0__","_middleware_theme__WEBPACK_IMPORTED_MODULE_1__","_common_util__WEBPACK_IMPORTED_MODULE_2__","_theme_default_icon_m_css__WEBPACK_IMPORTED_MODULE_3__","_common_styles_base_m_css__WEBPACK_IMPORTED_MODULE_4__","theme","properties","middleware","aria","hidden","altText","classes","assign","variant","icon","global_event","vdom","destroy","diffProperty","icache","middleware_icache","children","registerListeners","previousListeners","newListeners","currentListeners","getOrSet","window","registeredListeners","keys","eventName","newListener","global","removeEventListener","previous","next","changed","diff","removeAllRegisteredListeners","middleware_inert","inert_factory","inertInvertedNodeMap","nodes","clear","[object Object]","enable","invert","domNode","inertNodes","array","indexOf","push","delete","dialog_Dialog","middleware_theme","i18n","middleware_i18n","bodyScroll","middleware_bodyScroll","dialog_factory","themeCss","dialog_m","role","closeable","closeText","modal","messages","localize","common","wasOpen","titleId","util","contentId","onRequestClose","onOpen","callFocus","keyup","event","stopPropagation","which","common_util","Escape","styles_dialog_m","enterAnimation","exitAnimation","onclick","aria-labelledby","aria-modal","aria-describedby","id","_dojo_framework_core_middleware_theme__WEBPACK_IMPORTED_MODULE_1__","coreTheme","uppercaseFirstChar","charAt","toUpperCase","isThemeWithVariant","compose","baseCss","css","prefix","baseKey","variantKey","virtualCss","reduce","virtualTheme","variantTheme","baseTheme","prefixedCss","prefixCss","classKey","toLowerCase","lowercaseFirstChar","replace","trim","variants","constructedTheme","variantComposesClass","Keys","formatAriaProperties","a","visuallyHidden","focusable","clockIcon","downIcon","leftIcon","rightIcon","plusIcon","minusIcon","checkIcon","upIcon","upAltIcon","downAltIcon","searchIcon","barsIcon","settingsIcon","alertIcon","helpIcon","infoIcon","cancelIcon","checkedBoxIcon","phoneIcon","editIcon","dateIcon","linkIcon","locationIcon","secureIcon","mailIcon","eyeIcon","eyeSlashIcon","starIcon","_dojo_framework_shim_global__WEBPACK_IMPORTED_MODULE_1__","bodyStyle","disabled","previousOverflow","enableScroll","setProperty","removeProperty","getPropertyValue","locales","sunShort","monShort","tueShort","wedShort","thuShort","friShort","satShort","sunday","monday","tuesday","wednesday","thursday","friday","saturday","janShort","febShort","marShort","aprShort","mayShort","junShort","julShort","augShort","sepShort","octShort","novShort","decShort","january","february","march","april","may","june","july","august","september","october","november","december"],"mappings":"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","file":"11-7.0.0-pre.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/dialog\",\"root\":\"dialog-m__root__1r-MQ\",\"open\":\"dialog-m__open__2wIrh\",\"main\":\"dialog-m__main__zoSrb\",\"title\":\"dialog-m__title__3OoKa\",\"close\":\"dialog-m__close__vgHJ4\",\"closeIcon\":\"dialog-m__closeIcon__2iIGg\",\"content\":\"dialog-m__content__rGaMa\",\"underlayVisible\":\"dialog-m__underlayVisible__3oO4N\",\"enter\":\"dialog-m__enter__1JkwT\",\"underlayEnter\":\"dialog-m__underlayEnter__1bV_d\",\"fadeIn\":\"dialog-m__fadeIn__hoWkt\",\"exit\":\"dialog-m__exit__1SMNx\",\"underlayExit\":\"dialog-m__underlayExit__2YUYy\",\"fadeOut\":\"dialog-m__fadeOut__iCdtJ\",\"actions\":\"dialog-m__actions__1W84H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/dialog\",\"underlay\":\"dialog-m__underlay__2-349\"};","\"use strict\";\n// !has('build-elide')\nrequire('wicg-inert/dist/inert');","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define('inert', factory) :\n  (factory());\n}(this, (function () { 'use strict';\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  /**\n   * This work is licensed under the W3C Software and Document License\n   * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n   */\n\n  // Convenience function for converting NodeLists.\n  /** @type {typeof Array.prototype.slice} */\n  var slice = Array.prototype.slice;\n\n  /**\n   * IE has a non-standard name for \"matches\".\n   * @type {typeof Element.prototype.matches}\n   */\n  var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n  /** @type {string} */\n  var _focusableElementsString = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'iframe', 'object', 'embed', '[contenteditable]'].join(',');\n\n  /**\n   * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n   * attribute.\n   *\n   * Its main functions are:\n   *\n   * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n   *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n   *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n   *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n   *   instance exists for each focusable node which has at least one inert root as an ancestor.\n   *\n   * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n   *   attribute is removed from the root node). This is handled in the destructor, which calls the\n   *   `deregister` method on `InertManager` for each managed inert node.\n   */\n\n  var InertRoot = function () {\n    /**\n     * @param {!Element} rootElement The Element at the root of the inert subtree.\n     * @param {!InertManager} inertManager The global singleton InertManager object.\n     */\n    function InertRoot(rootElement, inertManager) {\n      _classCallCheck(this, InertRoot);\n\n      /** @type {!InertManager} */\n      this._inertManager = inertManager;\n\n      /** @type {!Element} */\n      this._rootElement = rootElement;\n\n      /**\n       * @type {!Set<!InertNode>}\n       * All managed focusable nodes in this InertRoot's subtree.\n       */\n      this._managedNodes = new Set();\n\n      // Make the subtree hidden from assistive technology\n      if (this._rootElement.hasAttribute('aria-hidden')) {\n        /** @type {?string} */\n        this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n      } else {\n        this._savedAriaHidden = null;\n      }\n      this._rootElement.setAttribute('aria-hidden', 'true');\n\n      // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n      this._makeSubtreeUnfocusable(this._rootElement);\n\n      // Watch for:\n      // - any additions in the subtree: make them unfocusable too\n      // - any removals from the subtree: remove them from this inert root's managed nodes\n      // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n      //   element, make that node a managed node.\n      this._observer = new MutationObserver(this._onMutation.bind(this));\n      this._observer.observe(this._rootElement, { attributes: true, childList: true, subtree: true });\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n     * stored in this object and updates the state of all of the managed nodes.\n     */\n\n\n    _createClass(InertRoot, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._observer.disconnect();\n\n        if (this._rootElement) {\n          if (this._savedAriaHidden !== null) {\n            this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n          } else {\n            this._rootElement.removeAttribute('aria-hidden');\n          }\n        }\n\n        this._managedNodes.forEach(function (inertNode) {\n          this._unmanageNode(inertNode.node);\n        }, this);\n\n        // Note we cast the nulls to the ANY type here because:\n        // 1) We want the class properties to be declared as non-null, or else we\n        //    need even more casts throughout this code. All bets are off if an\n        //    instance has been destroyed and a method is called.\n        // 2) We don't want to cast \"this\", because we want type-aware optimizations\n        //    to know which properties we're setting.\n        this._observer = /** @type {?} */null;\n        this._rootElement = /** @type {?} */null;\n        this._managedNodes = /** @type {?} */null;\n        this._inertManager = /** @type {?} */null;\n      }\n\n      /**\n       * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n       */\n\n    }, {\n      key: '_makeSubtreeUnfocusable',\n\n\n      /**\n       * @param {!Node} startNode\n       */\n      value: function _makeSubtreeUnfocusable(startNode) {\n        var _this2 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this2._visitNode(node);\n        });\n\n        var activeElement = document.activeElement;\n\n        if (!document.body.contains(startNode)) {\n          // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n          var node = startNode;\n          /** @type {!ShadowRoot|undefined} */\n          var root = undefined;\n          while (node) {\n            if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n              root = /** @type {!ShadowRoot} */node;\n              break;\n            }\n            node = node.parentNode;\n          }\n          if (root) {\n            activeElement = root.activeElement;\n          }\n        }\n        if (startNode.contains(activeElement)) {\n          activeElement.blur();\n          // In IE11, if an element is already focused, and then set to tabindex=-1\n          // calling blur() will not actually move the focus.\n          // To work around this we call focus() on the body instead.\n          if (activeElement === document.activeElement) {\n            document.body.focus();\n          }\n        }\n      }\n\n      /**\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_visitNode',\n      value: function _visitNode(node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!Element} */node;\n\n        // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n        // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n        if (element !== this._rootElement && element.hasAttribute('inert')) {\n          this._adoptInertRoot(element);\n        }\n\n        if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n          this._manageNode(element);\n        }\n      }\n\n      /**\n       * Register the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_manageNode',\n      value: function _manageNode(node) {\n        var inertNode = this._inertManager.register(node, this);\n        this._managedNodes.add(inertNode);\n      }\n\n      /**\n       * Unregister the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_unmanageNode',\n      value: function _unmanageNode(node) {\n        var inertNode = this._inertManager.deregister(node, this);\n        if (inertNode) {\n          this._managedNodes['delete'](inertNode);\n        }\n      }\n\n      /**\n       * Unregister the entire subtree starting at `startNode`.\n       * @param {!Node} startNode\n       */\n\n    }, {\n      key: '_unmanageSubtree',\n      value: function _unmanageSubtree(startNode) {\n        var _this3 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this3._unmanageNode(node);\n        });\n      }\n\n      /**\n       * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n       * @param {!Element} node\n       */\n\n    }, {\n      key: '_adoptInertRoot',\n      value: function _adoptInertRoot(node) {\n        var inertSubroot = this._inertManager.getInertRoot(node);\n\n        // During initialisation this inert root may not have been registered yet,\n        // so register it now if need be.\n        if (!inertSubroot) {\n          this._inertManager.setInert(node, true);\n          inertSubroot = this._inertManager.getInertRoot(node);\n        }\n\n        inertSubroot.managedNodes.forEach(function (savedInertNode) {\n          this._manageNode(savedInertNode.node);\n        }, this);\n      }\n\n      /**\n       * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_onMutation',\n      value: function _onMutation(records, self) {\n        records.forEach(function (record) {\n          var target = /** @type {!Element} */record.target;\n          if (record.type === 'childList') {\n            // Manage added nodes\n            slice.call(record.addedNodes).forEach(function (node) {\n              this._makeSubtreeUnfocusable(node);\n            }, this);\n\n            // Un-manage removed nodes\n            slice.call(record.removedNodes).forEach(function (node) {\n              this._unmanageSubtree(node);\n            }, this);\n          } else if (record.type === 'attributes') {\n            if (record.attributeName === 'tabindex') {\n              // Re-initialise inert node if tabindex changes\n              this._manageNode(target);\n            } else if (target !== this._rootElement && record.attributeName === 'inert' && target.hasAttribute('inert')) {\n              // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n              // already managed nodes from this inert subroot.\n              this._adoptInertRoot(target);\n              var inertSubroot = this._inertManager.getInertRoot(target);\n              this._managedNodes.forEach(function (managedNode) {\n                if (target.contains(managedNode.node)) {\n                  inertSubroot._manageNode(managedNode.node);\n                }\n              });\n            }\n          }\n        }, this);\n      }\n    }, {\n      key: 'managedNodes',\n      get: function get() {\n        return new Set(this._managedNodes);\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'hasSavedAriaHidden',\n      get: function get() {\n        return this._savedAriaHidden !== null;\n      }\n\n      /** @param {?string} ariaHidden */\n\n    }, {\n      key: 'savedAriaHidden',\n      set: function set(ariaHidden) {\n        this._savedAriaHidden = ariaHidden;\n      }\n\n      /** @return {?string} */\n      ,\n      get: function get() {\n        return this._savedAriaHidden;\n      }\n    }]);\n\n    return InertRoot;\n  }();\n\n  /**\n   * `InertNode` initialises and manages a single inert node.\n   * A node is inert if it is a descendant of one or more inert root elements.\n   *\n   * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n   * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n   * is intrinsically focusable or not.\n   *\n   * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n   * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n   * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n   * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n   * or removes the `tabindex` attribute if the element is intrinsically focusable.\n   */\n\n\n  var InertNode = function () {\n    /**\n     * @param {!Node} node A focusable element to be made inert.\n     * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n     */\n    function InertNode(node, inertRoot) {\n      _classCallCheck(this, InertNode);\n\n      /** @type {!Node} */\n      this._node = node;\n\n      /** @type {boolean} */\n      this._overrodeFocusMethod = false;\n\n      /**\n       * @type {!Set<!InertRoot>} The set of descendant inert roots.\n       *    If and only if this set becomes empty, this node is no longer inert.\n       */\n      this._inertRoots = new Set([inertRoot]);\n\n      /** @type {?number} */\n      this._savedTabIndex = null;\n\n      /** @type {boolean} */\n      this._destroyed = false;\n\n      // Save any prior tabindex info and make this node untabbable\n      this.ensureUntabbable();\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.\n     * This makes the managed node focusable again and deletes all of the previously stored state.\n     */\n\n\n    _createClass(InertNode, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._throwIfDestroyed();\n\n        if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n          var element = /** @type {!Element} */this._node;\n          if (this._savedTabIndex !== null) {\n            element.setAttribute('tabindex', this._savedTabIndex);\n          } else {\n            element.removeAttribute('tabindex');\n          }\n\n          // Use `delete` to restore native focus method.\n          if (this._overrodeFocusMethod) {\n            delete element.focus;\n          }\n        }\n\n        // See note in InertRoot.destructor for why we cast these nulls to ANY.\n        this._node = /** @type {?} */null;\n        this._inertRoots = /** @type {?} */null;\n        this._destroyed = true;\n      }\n\n      /**\n       * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n       * If the object has been destroyed, any attempt to access it will cause an exception.\n       */\n\n    }, {\n      key: '_throwIfDestroyed',\n\n\n      /**\n       * Throw if user tries to access destroyed InertNode.\n       */\n      value: function _throwIfDestroyed() {\n        if (this.destroyed) {\n          throw new Error('Trying to access destroyed InertNode');\n        }\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'ensureUntabbable',\n\n\n      /** Save the existing tabindex value and make the node untabbable and unfocusable */\n      value: function ensureUntabbable() {\n        if (this.node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!Element} */this.node;\n        if (matches.call(element, _focusableElementsString)) {\n          if ( /** @type {!HTMLElement} */element.tabIndex === -1 && this.hasSavedTabIndex) {\n            return;\n          }\n\n          if (element.hasAttribute('tabindex')) {\n            this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          }\n          element.setAttribute('tabindex', '-1');\n          if (element.nodeType === Node.ELEMENT_NODE) {\n            element.focus = function () {};\n            this._overrodeFocusMethod = true;\n          }\n        } else if (element.hasAttribute('tabindex')) {\n          this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          element.removeAttribute('tabindex');\n        }\n      }\n\n      /**\n       * Add another inert root to this inert node's set of managing inert roots.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'addInertRoot',\n      value: function addInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots.add(inertRoot);\n      }\n\n      /**\n       * Remove the given inert root from this inert node's set of managing inert roots.\n       * If the set of managing inert roots becomes empty, this node is no longer inert,\n       * so the object should be destroyed.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'removeInertRoot',\n      value: function removeInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots['delete'](inertRoot);\n        if (this._inertRoots.size === 0) {\n          this.destructor();\n        }\n      }\n    }, {\n      key: 'destroyed',\n      get: function get() {\n        return (/** @type {!InertNode} */this._destroyed\n        );\n      }\n    }, {\n      key: 'hasSavedTabIndex',\n      get: function get() {\n        return this._savedTabIndex !== null;\n      }\n\n      /** @return {!Node} */\n\n    }, {\n      key: 'node',\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._node;\n      }\n\n      /** @param {?number} tabIndex */\n\n    }, {\n      key: 'savedTabIndex',\n      set: function set(tabIndex) {\n        this._throwIfDestroyed();\n        this._savedTabIndex = tabIndex;\n      }\n\n      /** @return {?number} */\n      ,\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._savedTabIndex;\n      }\n    }]);\n\n    return InertNode;\n  }();\n\n  /**\n   * InertManager is a per-document singleton object which manages all inert roots and nodes.\n   *\n   * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n   * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n   * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n   * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n   * is created for each such node, via the `_managedNodes` map.\n   */\n\n\n  var InertManager = function () {\n    /**\n     * @param {!Document} document\n     */\n    function InertManager(document) {\n      _classCallCheck(this, InertManager);\n\n      if (!document) {\n        throw new Error('Missing required argument; InertManager needs to wrap a document.');\n      }\n\n      /** @type {!Document} */\n      this._document = document;\n\n      /**\n       * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertNode>}\n       */\n      this._managedNodes = new Map();\n\n      /**\n       * All inert roots known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertRoot>}\n       */\n      this._inertRoots = new Map();\n\n      /**\n       * Observer for mutations on `document.body`.\n       * @type {!MutationObserver}\n       */\n      this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n      // Add inert style.\n      addInertStyle(document.head || document.body || document.documentElement);\n\n      // Wait for document to be loaded.\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n      } else {\n        this._onDocumentLoaded();\n      }\n    }\n\n    /**\n     * Set whether the given element should be an inert root or not.\n     * @param {!Element} root\n     * @param {boolean} inert\n     */\n\n\n    _createClass(InertManager, [{\n      key: 'setInert',\n      value: function setInert(root, inert) {\n        if (inert) {\n          if (this._inertRoots.has(root)) {\n            // element is already inert\n            return;\n          }\n\n          var inertRoot = new InertRoot(root, this);\n          root.setAttribute('inert', '');\n          this._inertRoots.set(root, inertRoot);\n          // If not contained in the document, it must be in a shadowRoot.\n          // Ensure inert styles are added there.\n          if (!this._document.body.contains(root)) {\n            var parent = root.parentNode;\n            while (parent) {\n              if (parent.nodeType === 11) {\n                addInertStyle(parent);\n              }\n              parent = parent.parentNode;\n            }\n          }\n        } else {\n          if (!this._inertRoots.has(root)) {\n            // element is already non-inert\n            return;\n          }\n\n          var _inertRoot = this._inertRoots.get(root);\n          _inertRoot.destructor();\n          this._inertRoots['delete'](root);\n          root.removeAttribute('inert');\n        }\n      }\n\n      /**\n       * Get the InertRoot object corresponding to the given inert root element, if any.\n       * @param {!Node} element\n       * @return {!InertRoot|undefined}\n       */\n\n    }, {\n      key: 'getInertRoot',\n      value: function getInertRoot(element) {\n        return this._inertRoots.get(element);\n      }\n\n      /**\n       * Register the given InertRoot as managing the given node.\n       * In the case where the node has a previously existing inert root, this inert root will\n       * be added to its set of inert roots.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {!InertNode} inertNode\n       */\n\n    }, {\n      key: 'register',\n      value: function register(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (inertNode !== undefined) {\n          // node was already in an inert subtree\n          inertNode.addInertRoot(inertRoot);\n        } else {\n          inertNode = new InertNode(node, inertRoot);\n        }\n\n        this._managedNodes.set(node, inertNode);\n\n        return inertNode;\n      }\n\n      /**\n       * De-register the given InertRoot as managing the given inert node.\n       * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n       * node from the InertManager's set of managed nodes if it is destroyed.\n       * If the node is not currently managed, this is essentially a no-op.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n       */\n\n    }, {\n      key: 'deregister',\n      value: function deregister(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (!inertNode) {\n          return null;\n        }\n\n        inertNode.removeInertRoot(inertRoot);\n        if (inertNode.destroyed) {\n          this._managedNodes['delete'](node);\n        }\n\n        return inertNode;\n      }\n\n      /**\n       * Callback used when document has finished loading.\n       */\n\n    }, {\n      key: '_onDocumentLoaded',\n      value: function _onDocumentLoaded() {\n        // Find all inert roots in document and make them actually inert.\n        var inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n        inertElements.forEach(function (inertElement) {\n          this.setInert(inertElement, true);\n        }, this);\n\n        // Comment this out to use programmatic API only.\n        this._observer.observe(this._document.body, { attributes: true, subtree: true, childList: true });\n      }\n\n      /**\n       * Callback used when mutation observer detects attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_watchForInert',\n      value: function _watchForInert(records, self) {\n        var _this = this;\n        records.forEach(function (record) {\n          switch (record.type) {\n            case 'childList':\n              slice.call(record.addedNodes).forEach(function (node) {\n                if (node.nodeType !== Node.ELEMENT_NODE) {\n                  return;\n                }\n                var inertElements = slice.call(node.querySelectorAll('[inert]'));\n                if (matches.call(node, '[inert]')) {\n                  inertElements.unshift(node);\n                }\n                inertElements.forEach(function (inertElement) {\n                  this.setInert(inertElement, true);\n                }, _this);\n              }, _this);\n              break;\n            case 'attributes':\n              if (record.attributeName !== 'inert') {\n                return;\n              }\n              var target = /** @type {!Element} */record.target;\n              var inert = target.hasAttribute('inert');\n              _this.setInert(target, inert);\n              break;\n          }\n        }, this);\n      }\n    }]);\n\n    return InertManager;\n  }();\n\n  /**\n   * Recursively walk the composed tree from |node|.\n   * @param {!Node} node\n   * @param {(function (!Element))=} callback Callback to be called for each element traversed,\n   *     before descending into child nodes.\n   * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n   */\n\n\n  function composedTreeWalk(node, callback, shadowRootAncestor) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      var element = /** @type {!Element} */node;\n      if (callback) {\n        callback(element);\n      }\n\n      // Descend into node:\n      // If it has a ShadowRoot, ignore all child elements - these will be picked\n      // up by the <content> or <shadow> elements. Descend straight into the\n      // ShadowRoot.\n      var shadowRoot = /** @type {!HTMLElement} */element.shadowRoot;\n      if (shadowRoot) {\n        composedTreeWalk(shadowRoot, callback, shadowRoot);\n        return;\n      }\n\n      // If it is a <content> element, descend into distributed elements - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'content') {\n        var content = /** @type {!HTMLContentElement} */element;\n        // Verifies if ShadowDom v0 is supported.\n        var distributedNodes = content.getDistributedNodes ? content.getDistributedNodes() : [];\n        for (var i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n\n      // If it is a <slot> element, descend into assigned nodes - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'slot') {\n        var slot = /** @type {!HTMLSlotElement} */element;\n        // Verify if ShadowDom v1 is supported.\n        var _distributedNodes = slot.assignedNodes ? slot.assignedNodes({ flatten: true }) : [];\n        for (var _i = 0; _i < _distributedNodes.length; _i++) {\n          composedTreeWalk(_distributedNodes[_i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n    }\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n    // element, nor a <shadow> element recurse normally.\n    var child = node.firstChild;\n    while (child != null) {\n      composedTreeWalk(child, callback, shadowRootAncestor);\n      child = child.nextSibling;\n    }\n  }\n\n  /**\n   * Adds a style element to the node containing the inert specific styles\n   * @param {!Node} node\n   */\n  function addInertStyle(node) {\n    if (node.querySelector('style#inert-style')) {\n      return;\n    }\n    var style = document.createElement('style');\n    style.setAttribute('id', 'inert-style');\n    style.textContent = '\\n' + '[inert] {\\n' + '  pointer-events: none;\\n' + '  cursor: default;\\n' + '}\\n' + '\\n' + '[inert], [inert] * {\\n' + '  user-select: none;\\n' + '  -webkit-user-select: none;\\n' + '  -moz-user-select: none;\\n' + '  -ms-user-select: none;\\n' + '}\\n';\n    node.appendChild(style);\n  }\n\n  /** @type {!InertManager} */\n  var inertManager = new InertManager(document);\n\n  if (!Element.prototype.hasOwnProperty('inert')) {\n    Object.defineProperty(Element.prototype, 'inert', {\n      enumerable: true,\n      /** @this {!Element} */\n      get: function get() {\n        return this.hasAttribute('inert');\n      },\n      /** @this {!Element} */\n      set: function set(inert) {\n        inertManager.setInert(this, inert);\n      }\n    });\n  }\n\n})));\n","import { create, tsx } from '@dojo/framework/core/vdom';\nimport theme from '../middleware/theme';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/default/icon.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\n\nexport type IconType = keyof typeof css;\n\nexport interface IconProperties {\n\t/** An optional, visually hidden label for the icon */\n\taltText?: string;\n\t/** Custom aria attributes */\n\taria?: { [key: string]: string | null };\n\t/** Icon type, e.g. downIcon, searchIcon, etc. */\n\ttype: IconType;\n}\n\nconst factory = create({ theme }).properties<IconProperties>();\n\nexport const Icon = factory(function Icon({ properties, middleware: { theme } }) {\n\tconst {\n\t\taria = {\n\t\t\thidden: 'true'\n\t\t},\n\t\ttype,\n\t\taltText\n\t} = properties();\n\n\tconst classes = theme.classes(css);\n\n\treturn (\n\t\t<virtual>\n\t\t\t<i\n\t\t\t\tclasses={[theme.variant(), classes.icon, classes[type]]}\n\t\t\t\t{...formatAriaProperties(aria)}\n\t\t\t/>\n\t\t\t{altText ? <span classes={baseCss.visuallyHidden}>{altText}</span> : null}\n\t\t</virtual>\n\t);\n});\n\nexport default Icon;\n","import global from '@dojo/framework/shim/global';\nimport { create, destroy, diffProperty } from '@dojo/framework/core/vdom';\nimport { shallow } from '@dojo/framework/core/diff';\nimport { createICacheMiddleware } from '@dojo/framework/core/middleware/icache';\n\nexport interface ListenerObject {\n\t[index: string]: (event?: any) => void;\n}\n\nexport interface GlobalEventProperties extends Partial<RegisteredListeners> {\n\t/** The global window object */\n\twindow?: ListenerObject;\n\t/** The document for this context */\n\tdocument?: ListenerObject;\n}\n\nexport interface RegisteredListeners {\n\twindow: ListenerObject;\n\tdocument: ListenerObject;\n}\n\ninterface GlobalEventICache {\n\tlisteners: RegisteredListeners;\n}\n\nconst factory = create({\n\tdestroy,\n\tdiffProperty,\n\ticache: createICacheMiddleware<GlobalEventICache>()\n}).properties<GlobalEventProperties>();\n\nexport const GlobalEvent = factory(function({\n\tchildren,\n\tmiddleware: { destroy, diffProperty, icache }\n}) {\n\tconst registerListeners = (\n\t\ttype: 'window' | 'document',\n\t\tpreviousListeners: RegisteredListeners,\n\t\tnewListeners: RegisteredListeners\n\t) => {\n\t\tconst currentListeners = icache.getOrSet('listeners', {\n\t\t\twindow: {},\n\t\t\tdocument: {}\n\t\t});\n\t\tconst registeredListeners: ListenerObject = {};\n\t\tpreviousListeners[type] &&\n\t\t\tObject.keys(previousListeners[type]).forEach((eventName) => {\n\t\t\t\tconst newListener = newListeners[type][eventName];\n\t\t\t\tif (newListener === undefined) {\n\t\t\t\t\tglobal[type].removeEventListener(eventName, currentListeners[type][eventName]);\n\t\t\t\t} else if (previousListeners[type][eventName] !== newListener) {\n\t\t\t\t\tglobal[type].removeEventListener(eventName, currentListeners[type][eventName]);\n\t\t\t\t\tglobal[type].addEventListener(eventName, newListener);\n\t\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t\t} else {\n\t\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t\t}\n\t\t\t});\n\n\t\tnewListeners[type] &&\n\t\t\tObject.keys(newListeners[type]).forEach((eventName) => {\n\t\t\t\tif (\n\t\t\t\t\tpreviousListeners[type] === undefined ||\n\t\t\t\t\tpreviousListeners[type][eventName] === undefined\n\t\t\t\t) {\n\t\t\t\t\tglobal[type].addEventListener(eventName, newListeners[type][eventName]);\n\t\t\t\t\tregisteredListeners[eventName] = newListeners[type][eventName];\n\t\t\t\t}\n\t\t\t});\n\t\tcurrentListeners[type] = registeredListeners;\n\n\t\ticache.set('listeners', currentListeners);\n\t};\n\n\tdiffProperty('window', (previous: RegisteredListeners, next: RegisteredListeners) => {\n\t\tconst { changed } = shallow(previous, next);\n\t\tchanged && registerListeners('window', previous, next);\n\t});\n\tdiffProperty('document', (previous: RegisteredListeners, next: RegisteredListeners) => {\n\t\tconst { changed } = shallow(previous, next);\n\t\tchanged && registerListeners('document', previous, next);\n\t});\n\n\tconst removeAllRegisteredListeners = (type: 'window' | 'document') => {\n\t\tconst currentListeners = icache.getOrSet('listeners', {\n\t\t\twindow: {},\n\t\t\tdocument: {}\n\t\t});\n\t\tObject.keys(currentListeners[type]).forEach((eventName) => {\n\t\t\tglobal[type].removeEventListener(eventName, currentListeners[type][eventName]);\n\t\t});\n\t};\n\n\tdestroy(() => {\n\t\tremoveAllRegisteredListeners('window');\n\t\tremoveAllRegisteredListeners('document');\n\t});\n\n\tif (children().length > 0) {\n\t\treturn children();\n\t}\n\treturn null;\n});\n\nexport default GlobalEvent;\n","import { create, node, destroy } from '../vdom';\nimport { from as arrayFrom } from '../../shim/array';\nimport Map from '../../shim/Map';\nimport '../../shim/inert';\nconst factory = create({ node, destroy });\nexport const inert = factory(({ middleware: { node, destroy } }) => {\n    const inertInvertedNodeMap = new Map();\n    destroy(() => {\n        inertInvertedNodeMap.forEach((nodes) => {\n            nodes.forEach((node) => {\n                node.inert = false;\n            });\n        });\n        inertInvertedNodeMap.clear();\n    });\n    return {\n        set(key, enable, invert = false) {\n            const domNode = node.get(key);\n            if (!domNode) {\n                return;\n            }\n            if (invert) {\n                const inertNodes = inertInvertedNodeMap.get(key) || [];\n                if (enable) {\n                    domNode.inert = false;\n                    if (domNode.parentNode) {\n                        const children = arrayFrom(domNode.parentNode.children);\n                        for (let i = 0; i < children.length; i++) {\n                            if (domNode !== children[i] && inertNodes.indexOf(children[i]) === -1) {\n                                children[i].inert = true;\n                                inertNodes.push(children[i]);\n                            }\n                        }\n                    }\n                    inertInvertedNodeMap.set(key, inertNodes);\n                }\n                else {\n                    if (inertNodes.length) {\n                        inertNodes.forEach((node) => {\n                            node.inert = false;\n                        });\n                        inertInvertedNodeMap.delete(key);\n                    }\n                }\n            }\n            else {\n                domNode.inert = enable;\n            }\n        }\n    };\n});\nexport default inert;\n//# sourceMappingURL=inert.mjs.map","import { DNode } from '@dojo/framework/core/interfaces';\nimport i18n from '@dojo/framework/core/middleware/i18n';\nimport { createICacheMiddleware } from '@dojo/framework/core/middleware/icache';\nimport { uuid } from '@dojo/framework/core/util';\nimport { create, tsx } from '@dojo/framework/core/vdom';\nimport { formatAriaProperties, Keys } from '../common/util';\nimport Icon from '../icon';\nimport theme from '../middleware/theme';\nimport bodyScroll from '../middleware/bodyScroll';\nimport * as css from '../theme/default/dialog.m.css';\nimport * as fixedCss from './styles/dialog.m.css';\nimport commonBundle from '../common/nls/common';\nimport GlobalEvent from '../global-event';\nimport inert from '@dojo/framework/core/middleware/inert';\n\nexport interface DialogPropertiesBase {\n\t/** Custom aria attributes */\n\taria?: { [key: string]: string | null };\n\t/** Determines whether the dialog can be closed */\n\tcloseable?: boolean;\n\t/** Hidden text used by screen readers to display for the close button */\n\tcloseText?: string;\n\t/** Determines whether the dialog is open or closed */\n\topen: boolean;\n\t/** Determines whether a semi-transparent background shows behind the dialog */\n\tunderlay?: boolean;\n\t/** Called when the dialog opens */\n\tonOpen?(): void;\n\t/** Called when the dialog is closed */\n\tonRequestClose(): void;\n}\n\nexport interface DialogPropertiesDialogRole extends DialogPropertiesBase {\n\t/** Role of this dialog for accessibility, either 'alertdialog' or 'dialog' */\n\trole?: 'dialog';\n\t/** Determines whether the dialog can be closed by clicking outside its content. Only applicable when using \"dialog\" role */\n\tmodal?: boolean;\n}\n\nexport interface DialogPropertiesAlertDialogRole extends DialogPropertiesBase {\n\trole: 'alertdialog';\n}\n\nexport type DialogProperties = DialogPropertiesDialogRole | DialogPropertiesAlertDialogRole;\n\nexport interface DialogChild {\n\ttitle?: DNode;\n\tcontent?: DNode;\n\tactions?: DNode;\n}\n\nexport interface DialogState {\n\twasOpen: boolean;\n\tcallFocus: boolean;\n\ttitleId: string;\n\tcontentId: string;\n}\n\nconst factory = create({\n\ttheme,\n\ti18n,\n\ticache: createICacheMiddleware<DialogState>(),\n\tinert,\n\tbodyScroll\n})\n\t.properties<DialogProperties>()\n\t.children<DialogChild>();\nexport const Dialog = factory(function Dialog({\n\tmiddleware: { theme, i18n, icache, inert, bodyScroll },\n\tproperties,\n\tchildren\n}) {\n\tconst themeCss = theme.classes(css);\n\n\tlet { open, aria = {}, underlay, role = 'dialog', closeable = true, closeText } = properties();\n\tconst [{ title, actions, content }] = children();\n\tconst modal = role === 'alertdialog' || (properties() as DialogPropertiesDialogRole).modal;\n\n\tinert.set('dialog', open, true);\n\n\tif (!closeText) {\n\t\tconst { messages } = i18n.localize(commonBundle);\n\t\tcloseText = `${messages.close} ${title || ''}`;\n\t}\n\n\tconst wasOpen = icache.getOrSet('wasOpen', false);\n\tconst titleId = icache.getOrSet('titleId', uuid());\n\tconst contentId = icache.getOrSet('contentId', uuid());\n\n\tconst onOpen = () => {\n\t\tconst { onOpen } = properties();\n\t\ticache.set('callFocus', true);\n\n\t\tonOpen && onOpen();\n\t};\n\n\tconst close = () => {\n\t\tconst { closeable = true, onRequestClose } = properties();\n\n\t\tcloseable && onRequestClose();\n\t};\n\n\topen && !wasOpen && onOpen();\n\tif (wasOpen !== open) {\n\t\ticache.set('wasOpen', open);\n\t}\n\n\tconst callFocus = icache.getOrSet('callFocus', false);\n\tif (callFocus) {\n\t\ticache.set('callFocus', false);\n\t}\n\n\tconst keyup = (event: KeyboardEvent) => {\n\t\tevent.stopPropagation();\n\t\tif (event.which === Keys.Escape) {\n\t\t\tclose();\n\t\t}\n\t};\n\n\tbodyScroll(!open);\n\n\treturn (\n\t\t<body>\n\t\t\t<div\n\t\t\t\tkey=\"dialog\"\n\t\t\t\tclasses={[theme.variant(), themeCss.root, open ? themeCss.open : null]}\n\t\t\t>\n\t\t\t\t{open && (\n\t\t\t\t\t<virtual>\n\t\t\t\t\t\t<GlobalEvent key=\"global\" document={{ keyup }} />\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclasses={[\n\t\t\t\t\t\t\t\tunderlay ? themeCss.underlayVisible : null,\n\t\t\t\t\t\t\t\tfixedCss.underlay\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tenterAnimation={themeCss.underlayEnter}\n\t\t\t\t\t\t\texitAnimation={themeCss.underlayExit}\n\t\t\t\t\t\t\tkey=\"underlay\"\n\t\t\t\t\t\t\tonclick={(event) => {\n\t\t\t\t\t\t\t\tconst { role } = properties();\n\t\t\t\t\t\t\t\tconst modal =\n\t\t\t\t\t\t\t\t\trole === 'alertdialog' ||\n\t\t\t\t\t\t\t\t\t(properties() as DialogPropertiesDialogRole).modal;\n\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t!modal && close();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\taria-labelledby={titleId}\n\t\t\t\t\t\t\taria-modal={modal ? 'true' : 'false'}\n\t\t\t\t\t\t\taria-describedby={role === 'alertdialog' ? contentId : undefined}\n\t\t\t\t\t\t\t{...formatAriaProperties(aria)}\n\t\t\t\t\t\t\tclasses={themeCss.main}\n\t\t\t\t\t\t\tenterAnimation={themeCss.enter}\n\t\t\t\t\t\t\texitAnimation={themeCss.exit}\n\t\t\t\t\t\t\tkey=\"main\"\n\t\t\t\t\t\t\trole={role}\n\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\tfocus={callFocus}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div classes={themeCss.title} key=\"title\" id={titleId}>\n\t\t\t\t\t\t\t\t<div>{title}</div>\n\t\t\t\t\t\t\t\t{closeable && (\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclasses={themeCss.close}\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonclick={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{closeText}\n\t\t\t\t\t\t\t\t\t\t<span classes={themeCss.closeIcon}>\n\t\t\t\t\t\t\t\t\t\t\t<Icon type=\"closeIcon\" />\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div classes={themeCss.content} key=\"content\" id={contentId}>\n\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{actions && (\n\t\t\t\t\t\t\t\t<div classes={themeCss.actions} key=\"actions\">\n\t\t\t\t\t\t\t\t\t{actions}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</virtual>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</body>\n\t);\n});\n\nexport default Dialog;\n","import { create } from '@dojo/framework/core/vdom';\nimport coreTheme, {\n\tThemeProperties as CoreThemeProperties\n} from '@dojo/framework/core/middleware/theme';\nimport { ClassNames, Theme } from '@dojo/framework/core/mixins/Themed';\nimport { ThemeWithVariant } from '@dojo/framework/core/interfaces';\n\nconst factory = create({ coreTheme });\nexport const THEME_KEY = ' _key';\n\nfunction uppercaseFirstChar(value: string) {\n\treturn `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n}\n\nfunction lowercaseFirstChar(value: string) {\n\treturn `${value.charAt(0).toLowerCase()}${value.slice(1)}`;\n}\n\nfunction isThemeWithVariant(theme: any): theme is ThemeWithVariant {\n\treturn theme && theme.hasOwnProperty('variant');\n}\n\nexport interface ThemeProperties extends CoreThemeProperties {}\n\nexport const theme = factory(function({ middleware: { coreTheme }, properties }) {\n\treturn {\n\t\tcompose: <T extends ClassNames, B extends ClassNames>(\n\t\t\tbaseCss: B,\n\t\t\tcss: T,\n\t\t\tprefix?: string\n\t\t): Theme | ThemeWithVariant => {\n\t\t\tconst theme = properties().theme;\n\t\t\tconst baseKey = baseCss[THEME_KEY];\n\t\t\tconst variantKey = css[THEME_KEY];\n\t\t\tconst virtualCss = Object.keys(baseCss).reduce(\n\t\t\t\t(virtualCss, key) => {\n\t\t\t\t\tif (key === THEME_KEY) {\n\t\t\t\t\t\treturn virtualCss;\n\t\t\t\t\t}\n\t\t\t\t\tif (prefix && !virtualCss[`${prefix}${uppercaseFirstChar(key)}`]) {\n\t\t\t\t\t\tvirtualCss[`${prefix}${uppercaseFirstChar(key)}`] = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tif (!css[key]) {\n\t\t\t\t\t\tvirtualCss[key] = ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn virtualCss;\n\t\t\t\t},\n\t\t\t\t{ [THEME_KEY]: variantKey } as ClassNames\n\t\t\t);\n\t\t\tconst virtualTheme = coreTheme.classes(virtualCss);\n\t\t\tconst variantTheme = coreTheme.classes(css);\n\t\t\tlet baseTheme = coreTheme.classes(baseCss);\n\t\t\tif (prefix) {\n\t\t\t\tconst prefixedCss = Object.keys({ ...virtualTheme, ...variantTheme }).reduce(\n\t\t\t\t\t(prefixCss, key) => {\n\t\t\t\t\t\tif (key.indexOf(prefix) === 0 && key !== prefix) {\n\t\t\t\t\t\t\tconst classKey = lowercaseFirstChar(key.replace(prefix, ''));\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!variantTheme[key] &&\n\t\t\t\t\t\t\t\tvirtualTheme[key] &&\n\t\t\t\t\t\t\t\tvirtualTheme[key].trim()\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tprefixCss[classKey] = `${baseTheme[classKey]} ${virtualTheme[\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t].trim()}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (variantTheme[key]) {\n\t\t\t\t\t\t\t\tprefixCss[classKey] = variantTheme[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prefixCss;\n\t\t\t\t\t},\n\t\t\t\t\t{} as ClassNames\n\t\t\t\t);\n\t\t\t\tbaseTheme = { ...baseTheme, ...prefixedCss };\n\n\t\t\t\tif (isThemeWithVariant(theme)) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\t\t...theme.theme.theme,\n\t\t\t\t\t\t\t\t[baseKey]: baseTheme\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvariants: theme.theme.variants\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvariant: theme.variant\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...theme,\n\t\t\t\t\t[baseKey]: baseTheme\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst constructedTheme = Object.keys(baseTheme).reduce(\n\t\t\t\t(theme, key) => {\n\t\t\t\t\tif (key === THEME_KEY) {\n\t\t\t\t\t\treturn theme;\n\t\t\t\t\t}\n\t\t\t\t\tconst variantComposesClass = variantTheme[key] && variantTheme[key].trim();\n\t\t\t\t\tif (variantTheme[key]) {\n\t\t\t\t\t\ttheme[key] = variantComposesClass;\n\t\t\t\t\t} else if (virtualTheme[key] && virtualTheme[key].trim()) {\n\t\t\t\t\t\ttheme[key] = `${theme[key]} ${virtualTheme[key].trim()}`;\n\t\t\t\t\t}\n\t\t\t\t\treturn theme;\n\t\t\t\t},\n\t\t\t\t{ ...baseTheme } as ClassNames\n\t\t\t);\n\n\t\t\tif (isThemeWithVariant(theme)) {\n\t\t\t\treturn {\n\t\t\t\t\ttheme: {\n\t\t\t\t\t\ttheme: {\n\t\t\t\t\t\t\t...theme.theme.theme,\n\t\t\t\t\t\t\t[baseKey]: constructedTheme\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvariants: theme.theme.variants\n\t\t\t\t\t},\n\t\t\t\t\tvariant: theme.variant\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...theme,\n\t\t\t\t[baseKey]: constructedTheme\n\t\t\t};\n\t\t},\n\t\t...coreTheme\n\t};\n});\n\nexport default theme;\n","interface AriaPropertyObject {\n\t[key: string]: string | null;\n}\n\nexport enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function formatAriaProperties(aria: AriaPropertyObject): AriaPropertyObject {\n\tconst formattedAria = Object.keys(aria).reduce((a: AriaPropertyObject, key: string) => {\n\t\ta[`aria-${key.toLowerCase()}`] = aria[key];\n\t\treturn a;\n\t}, {});\n\treturn formattedAria;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/base\",\"visuallyHidden\":\"base-m__visuallyHidden__1AeWe\",\"focusable\":\"base-m__focusable__1_qAN\",\"hidden\":\"base-m__hidden__3QddU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/icon\",\"root\":\"icon-m__root__1eoV_\",\"icon\":\"icon-m__icon__UdYI1\",\"clockIcon\":\"icon-m__clockIcon__3GLpu\",\"downIcon\":\"icon-m__downIcon__2q5lh\",\"leftIcon\":\"icon-m__leftIcon__pBWIt\",\"rightIcon\":\"icon-m__rightIcon__18AW6\",\"closeIcon\":\"icon-m__closeIcon__21KIr\",\"plusIcon\":\"icon-m__plusIcon__2b4l_\",\"minusIcon\":\"icon-m__minusIcon__1DHfu\",\"checkIcon\":\"icon-m__checkIcon__2D3mV\",\"upIcon\":\"icon-m__upIcon__2Whg2\",\"upAltIcon\":\"icon-m__upAltIcon__2GXtu\",\"downAltIcon\":\"icon-m__downAltIcon__hm7FZ\",\"searchIcon\":\"icon-m__searchIcon__2HGOw\",\"barsIcon\":\"icon-m__barsIcon__2e0Qo\",\"settingsIcon\":\"icon-m__settingsIcon__2-UEA\",\"alertIcon\":\"icon-m__alertIcon__WjF2F\",\"helpIcon\":\"icon-m__helpIcon__3c7_4\",\"infoIcon\":\"icon-m__infoIcon__PXtvl\",\"cancelIcon\":\"icon-m__cancelIcon__2ey9p\",\"checkedBoxIcon\":\"icon-m__checkedBoxIcon__TSG-9\",\"phoneIcon\":\"icon-m__phoneIcon__2BO7g\",\"editIcon\":\"icon-m__editIcon__3j9QX\",\"dateIcon\":\"icon-m__dateIcon__3vXGn\",\"linkIcon\":\"icon-m__linkIcon__314xM\",\"locationIcon\":\"icon-m__locationIcon__1uwwo\",\"secureIcon\":\"icon-m__secureIcon__UXrMt\",\"mailIcon\":\"icon-m__mailIcon__3uh6Q\",\"eyeIcon\":\"icon-m__eyeIcon__2Cqqq\",\"eyeSlashIcon\":\"icon-m__eyeSlashIcon__17wRy\",\"starIcon\":\"icon-m__starIcon__r0lYz\"};","import { create, destroy } from '@dojo/framework/core/vdom';\nimport global from '@dojo/framework/shim/global';\n\nconst factory = create({ destroy });\nconst bodyStyle = global.document.body.style;\n\nexport const bodyScroll = factory(function bodyScroll({ middleware: { destroy } }) {\n\tlet disabled = false;\n\tlet previousOverflow: string | undefined = undefined;\n\n\tconst enableScroll = () => {\n\t\tif (!disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (previousOverflow) {\n\t\t\tbodyStyle.setProperty('overflow', previousOverflow);\n\t\t} else {\n\t\t\tbodyStyle.removeProperty('overflow');\n\t\t}\n\t\tdisabled = false;\n\t\tpreviousOverflow = undefined;\n\t};\n\n\tconst disableScroll = () => {\n\t\tif (disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tdisabled = true;\n\t\tpreviousOverflow = bodyStyle.getPropertyValue('overflow');\n\t\tbodyStyle.setProperty('overflow', 'hidden');\n\t};\n\n\tdestroy(() => {\n\t\tdisabled && enableScroll();\n\t});\n\n\treturn (enable: boolean) => {\n\t\tenable ? enableScroll() : disableScroll();\n\t};\n});\n\nexport default bodyScroll;\n","const locales = {};\n\nconst messages = {\n\tsunShort: 'Sun',\n\tmonShort: 'Mon',\n\ttueShort: 'Tue',\n\twedShort: 'Wed',\n\tthuShort: 'Thu',\n\tfriShort: 'Fri',\n\tsatShort: 'Sat',\n\tsunday: 'Sunday',\n\tmonday: 'Monday',\n\ttuesday: 'Tuesday',\n\twednesday: 'Wednesday',\n\tthursday: 'Thursday',\n\tfriday: 'Friday',\n\tsaturday: 'Saturday',\n\tjanShort: 'Jan',\n\tfebShort: 'Feb',\n\tmarShort: 'Mar',\n\taprShort: 'Apr',\n\tmayShort: 'May',\n\tjunShort: 'Jun',\n\tjulShort: 'Jul',\n\taugShort: 'Aug',\n\tsepShort: 'Sep',\n\toctShort: 'Oct',\n\tnovShort: 'Nov',\n\tdecShort: 'Dec',\n\tjanuary: 'January',\n\tfebruary: 'February',\n\tmarch: 'March',\n\tapril: 'April',\n\tmay: 'May',\n\tjune: 'June',\n\tjuly: 'July',\n\taugust: 'August',\n\tseptember: 'September',\n\toctober: 'October',\n\tnovember: 'November',\n\tdecember: 'December',\n\tclear: 'clear',\n\tclose: 'close',\n\topen: 'open'\n};\n\nexport default { locales, messages };\n"],"sourceRoot":""}