{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/core/has.mjs","webpack:///./node_modules/@dojo/framework/core/Registry.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/core/vdom.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./node_modules/@dojo/framework/core/RegistryHandler.mjs","webpack:///./node_modules/css-vars-ponyfill/dist/css-vars-ponyfill.js","webpack:///./node_modules/@dojo/framework/shim/Set.mjs","webpack:///./node_modules/@dojo/framework/core/diff.mjs","webpack:///./node_modules/@dojo/framework/shim/cssVariables.mjs","webpack:///./node_modules/@dojo/framework/core/ThemeInjector.mjs","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/Injector.mjs","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/@dojo/framework/core/registerCustomElement.mjs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","installedCssChunks","1","__webpack_require__","exports","module","l","e","promises","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","Promise","resolve","reject","href","0","fullhref","p","existingLinkTags","document","getElementsByTagName","dataHref","tag","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","appendChild","then","installedChunkData","promise","onScriptComplete","head","script","charset","timeout","nc","setAttribute","jsonpScriptSrc","clearTimeout","chunk","errorType","realSrc","error","undefined","setTimeout","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","s","global","globalObject","navigator","userAgent","indexOf","globalThis","self","__webpack_exports__","Map","_global__WEBPACK_IMPORTED_MODULE_0__","has","_shim_global__WEBPACK_IMPORTED_MODULE_0__","testCache","testFunctions","staticFeatures","DojoHasEnvironment","staticCache","apply","add","feature","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","strict","result","finally","Animation","KeyframeEffect","AbortController","AbortSignal","IntersectionObserver","ResizeObserver","onpointerdown","CSS","supports","Element","WIDGET_BASE_TYPE","isWidgetBaseConstructor","isWidgetFunction","isWNodeFactory","isWidget","Registry","_shim_Promise__WEBPACK_IMPORTED_MODULE_0__","_shim_Map__WEBPACK_IMPORTED_MODULE_1__","_core_Evented__WEBPACK_IMPORTED_MODULE_2__","item","_type","node","isFactory","[object Object]","widgetLabel","this","emit","action","label","_widgetRegistry","toString","set","widgetCtor","emitLoadedEvent","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","default","isWidgetConstructorDefaultExport","hasInjector","WeakMap","isTextNode","isWNode","isVNode","w","v","dom","tsx","widgetInstanceMap","diffProperty","destroy","getRegistry","renderer","_core_has__WEBPACK_IMPORTED_MODULE_1__","_shim_WeakMap__WEBPACK_IMPORTED_MODULE_2__","_shim_Set__WEBPACK_IMPORTED_MODULE_3__","_shim_Map__WEBPACK_IMPORTED_MODULE_4__","_shim_array__WEBPACK_IMPORTED_MODULE_5__","_Registry__WEBPACK_IMPORTED_MODULE_6__","_diff__WEBPACK_IMPORTED_MODULE_7__","_RegistryHandler__WEBPACK_IMPORTED_MODULE_8__","__rest","getOwnPropertySymbols","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","WNODE","VNODE","DOMVNODE","scope","__DOJO_SCOPE","setRendering","rendering","nodeType","isWNodeWrapper","child","isVNodeWrapper","isVirtualWrapper","isBodyWrapper","wrapper","isDomVNode","isElementNode","tagName","widgetConstructorOrNode","properties","children","__children__","assign","widgetConstructor","propertiesOrChildren","deferredPropertiesCallback","Array","isArray","classes","styles","newProperties","_a","nodeClasses","nodeStyles","nodeProperties","attrs","props","on","diffType","onAttach","attributes","events","domNode","text","REGISTRY_ITEM","FromRegistry","__properties__","Infinity","__autoRegistryItem","buildPreviousProperties","current","deferredProperties","keys","forEach","propName","attrName","reduce","same","dnode1","dnode2","widgetConstructor1","registryItem","widgetConstructor2","props1","props2","instance","every","findIndexOfChild","sameAs","start","createClassPropValue","classNames","className","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","arrayFrom","arr","createFactory","callback","middlewares","factory","middlewareName","middleware","returns","widgetMetaMap","requestedDomNodes","wrapperId","metaId","addNodeToMap","id","widgetMeta","nodeMap","delete","destroyHandles","meta","destroyMap","middlewareIds","size","clear","widgetId","split","mountNode","contains","body","propertyName","propertiesOrDiff","diff","customDiffMap","customDiffProperties","propertyDiffMap","originalProperties","propertiesCalled","warn","widgetName","destroyFunction","registryHandler","base","registry","isDeferred","deferRefs","wrapFunctionProperties","propertyNames","args","unwrap","_renderScheduled","parentInvalidate","_appWrapperId","_mountOptions","sync","merge","transition","_invalidationQueue","_processQueue","_deferredProcessQueue","_applicationQueue","_eventMap","_idToWrapperMap","_wrapperSiblingMap","_idToChildrenWrappers","_insertBeforeMap","_nodeToWrapperMap","_deferredRenderCallbacks","_allMergedNodes","_deferredProcessIds","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","removeEventListener","evt","addEventListener","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","resolveRegistryItem","owningNode","instanceData","registryLabel","isLazyDefine","define","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasVirtualParentNode","hasCurrentParentChildren","insertBefore","previousItem","nodes","pop","mapNodeToInstance","renderedItem","order","parentId","exitAnimation","hasAnimations","nextParent","owningId","runDeferredProperties","next","processProperties","findInsertBefore","searchNode","nextSibling","childDomWrapperId","findDomNodeOnParentWrapper","childWrapper","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","styleNames","styleCount","j","styleName","newStyleValue","style","lastIndexOf","_createDeferredRenderCallback","callbacks","_scheduleDeferredRenderCallbacks","run","requestAnimationFrame","previousAttributes","attrNames","attrCount","updateAttributes","_schedule","_runInvalidationQueue","getWNodeWrapper","invalidationQueue","previouslyRendered","sort","a","b","_runProcessQueue","sibling","_updateWidget","_runDomInstructionQueue","_cleanUpMergedNodes","mergedNode","_process","reverse","parentDomNode","parentElement","enterAnimation","enterAnimationActive","enter","owningWrapper","nodeHandler","inserted","currentDomNode","replaceChild","exitAnimationActive","exit","attached","addRoot","onDetach","distinguishableCheck","childNodes","index","wrappers","parentWNodeWrapper","wrapperToCheck","parentName","nodeIdentifier","checkDistinguishable","createKeyMap","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","replace","currentKeys","nextKeys","currentWrapper","domElement","toUpperCase","mergeNodeIndex","splice","_processMergeNodes","_processOne","widget","currentNode","parentWrapper","findParentDomNode","isVirtual","isBody","createTextNode","createElementNS","_createDom","invalidate","Constructor","dirty","__setProperties__","__setChildren__","__render__","ids","resolveMiddleware","results","uniqueId","payload","createWidgetOptions","resolvedMiddleware","_createWidget","currentChildren","_updateDom","remove","bodyIds","wrapperChildren","_removeDom","processResult","_removeWidget","didRender","customProperties","diffMap","runDiffs","ignoreProperties","changed","propertiesDiff","values","childId","mount","mountOptions","renderResult","wrapNodes","siblingId","unmount","cancelAnimationFrame","wrapNative","nativeFunction","Evented","_shim_Map__WEBPACK_IMPORTED_MODULE_0__","_Destroyable__WEBPACK_IMPORTED_MODULE_1__","regexMap","super","arguments","listenersMap","methods","globString","targetString","regex","RegExp","test","isGlobMatch","method","listener","handles","map","_addListener","handle","listeners","isThenable","ShimPromise","onFinally","reason","from","find","findIndex","flat","_support_util__WEBPACK_IMPORTED_MODULE_1__","of","copyWithin","fill","includes","flatMap","_core_Evented__WEBPACK_IMPORTED_MODULE_1__","_Registry__WEBPACK_IMPORTED_MODULE_2__","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","own","baseRegistry","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registeredLabels","_extends","source","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","iterator","_iterableToArray","minLen","constructor","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","getUrls","urls","options","settings","mimeType","onBeforeSend","Function","onSuccess","onError","onComplete","urlArray","urlQueue","x","isValidCss","cssText","isHTML","trim","charAt","xhr","urlIndex","responseText","returnVal","parser","url","String","isIElte9","atob","isIElte9CORS","host","location","isSameProtocol","protocol","xdr","XDomainRequest","open","onprogress","ontimeout","send","concat","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","cssComments","cssImports","rootElement","include","exclude","filter","skipDisabled","useCSSOM","sourceNodes","querySelectorAll","elm","selector","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","cssArray","handleComplete","isComplete","join","handleSuccess","cssIndex","sourceUrl","resolveImports","baseUrl","callbackFn","__errorData","__errorRules","importData","parseImportData","rules","absoluteUrls","responseImportData","rule","absoluteRules","responseArray","importText","resolvedCssText","errorData","ignoreRules","match","getFullUrl","oldUrl","newUrl","linkHref","linkRel","isLink","nodeName","isSkip","disabled","isStyle","textContent","sheet","cssRules","implementation","createHTMLDocument","baseURI","querySelector","balancedMatch","balanced","str","maybeMatch","range","end","pre","post","reg","begs","beg","left","right","ai","bi","parseCss","css","preserveStatic","removeComments","msg","re","exec","close","whitespace","comment","comments","cmnts","declaration","at_rule","comment_regexp","prop","val","ret","declarations","decls","keyframe","vals","at_x","at_fontface","media","at_media","vendor","frame","frames","keyframes","at_keyframes","at_supports","at_document","at_custom_m","at_host","sel","selectors","at_page","at_page_margin_box","hasVarFunc","some","decl","obj","balancedMatch$1","hasVarDecl","core","stylesheet","errors","parseVars","cssData","parseHost","store","onWarning","reVarDeclSelectors","stringifyCss","tree","delim","cb","renderMethods","custom-media","visit","font-face","import","page","page-margin-box","buf","txt","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","transformCss","preserveVars","variables","walkCss","fn","resolvedValue","resolveValue","fixNestedCalc","newVal","__recursiveFallback","valueData","isEmptyVarFunc","fallback","replacement","unresolvedFallback","resolveFunc","isBrowser","isNativeSupport","counters","group","job","defaults","shadowDOM","onlyLegacy","silent","updateDOM","updateURLs","watch","cssKeyframes","cssMediaQueries","cssUrls","cssVarDeclRules","cssVarDecls","cssVarFunc","cssVars","variableStore","user","cssVarsIsRunning","cssVarsObserver","cssVarsSrcNodeCount","debounceTimer","isShadowDOMReady","msgPrefix","handleError","message","sourceNode","handleWarning","handleFinally","hasChanged","getTimeStamp","__benchmark","isStylesheet","MutationObserver","disconnect","mutations","hasValidMutation","mutation","mutationNodes","isValid","addedNodes","isElm","hasAttr","hasAttribute","isStyleWithVars","isOutNode","isSrcNode","dataGroup","orphanNode","resetCssNodes","isValidRemoveMutation","removedNodes","observe","documentElement","attributeFilter","childList","subtree","addMutationObserver","delay","cssVarsDebounced","varObj","reLeadingHyphens","fixVarNames","outNodes","outNode","srcNode","srcNodes","hasVarChange","targetElm","varValue","getComputedStyle","getPropertyValue","setProperty","shadowRoot","nodeArray","responseUrl","responseURL","getFullUrl$1","statusText","errorMsg","cssUrl","fixRelativeCssUrls","currentVars","nodeCSS","cssTree","__cssVars","outCssArray","outNodeArray","hasKeyframesWithVars","outCss","hasCSSVarFunc","outCssNoSpaces","elms","shadowSettings","animationNameProp","allNodes","keyframeNodes","animationName","offsetHeight","_i","_len","nodeStyle","fixKeyframes","JSON","parse","stringify","init","performance","now","Date","getTime","resetNodes","reset","Set","reference","shallow","auto","_Registry__WEBPACK_IMPORTED_MODULE_0__","isObjectOrArray","previousProperty","newProperty","validOldProperty","validNewProperty","previousKeys","newKeys","ignore","cssVariables","css_vars_ponyfill","css_vars_ponyfill_default","isThemeWithVariant","theme","isThemeWithVariants","isThemeInjectorPayloadWithVariant","ThemeInjector_ThemeInjector","ThemeInjector_processCssVariant","_","styleId","processedCssMap","variantStyleElement","applyStyles","variantName","processedCss","temp","variantCss","substring","setUpCssVariantSupport","createThemeInjectorPayload","variant","variants","isVariantModule","root","Injector","Destroyable","noop","destroyed","_handles","_core_Evented__WEBPACK_IMPORTED_MODULE_0__","_payload","_invalidator","g","eval","getOwnPropertyDescriptor","getOwnPropertyNames","is","getOwnPropertyDescriptors","entries","registerCustomElement","useDefault","CustomElementChildType","DomToWidgetWrapper","register","_vdom__WEBPACK_IMPORTED_MODULE_1__","_shim_array__WEBPACK_IMPORTED_MODULE_2__","_shim_global__WEBPACK_IMPORTED_MODULE_3__","_ThemeInjector__WEBPACK_IMPORTED_MODULE_4__","RESERVED_PROPS","wrappedWNode","dispatchEvent","CustomEvent","bubbles","detail","wrappedDomNode","descriptor","widgetFactory","registryFactory","attributeMap","attributeName","HTMLElement","_properties","_children","_eventProperties","_propertiesMap","_initialised","_childType","childType","_waitTillReady","element","_hasBeenParsed","_readyCallback","domProperties","WidgetConstructor","_propertiesWithAttributes","_attributesToProperties","isReservedProp","filteredPropertyName","_getProperty","_setProperty","_getEventProperty","_setEventProperty","defineProperties","childNode","isElement","isDojoChild","DOJO","NODE","_render","_childConnected","widgetProperties","renderChildren","Wrapper","themeContext","themeRegistry","themeInjector","setInvalidator","registerThemeInjector","_getVariant","_getTheme","_renderer","display","dojoce","themes","slots","slotName","slotResult","existingSlotValue","Child","oldValue","parsedValue","observedAttributes","__customElementDescriptor","customElements"],"mappings":"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","file":"bootstrap-7.0.0-pre.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t1: 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"common\"}[chunkId]||chunkId) + \"-7.0.0-pre.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"\" + ({\"0\":\"common\"}[chunkId]||chunkId) + \"-7.0.0-pre.css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"dojoWebpackJsonpdojo_widgets_custom_elements\"] = window[\"dojoWebpackJsonpdojo_widgets_custom_elements\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","const globalObject = (function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof window !== 'undefined' && window.navigator.userAgent.indexOf('jsdom') > -1) {\n        return window;\n    }\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map","var _a;\nvar isArrayLike = undefined, ShimIterator = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let Map = global.Map;\nif (!true) {\n    Map = global.Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;","import global from '../shim/global';\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = global.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in global) {\n    delete global.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures)\n        ? staticFeatures.apply(global)\n        : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n\n/**\n* AMD plugin function.\n*\n* Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n* value(s).\n*\n* @param resourceId The id of the module\n* @param normalize Resolves a relative module id into an absolute module id\n*/\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name of the feature to test.\n */\nexport default function has(feature, strict = false) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (strict) {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\nadd('public-path', undefined);\n/* flag for dojo debug, default to false */\nadd('dojo-debug', false);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', true);\n/* Detects if the environment is \"jsdom\" */\nadd('host-jsdom', true && typeof navigator !== 'undefined' && navigator.userAgent.indexOf('jsdom') !== -1);\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', false);\nadd('fetch', true);\nadd('es6-array', true);\nadd('es6-array-fill', true);\nadd('es7-array', true);\nadd('es2019-array', true);\n/* Map */\nadd('es6-map', true);\nadd('es6-iterator', true);\n/* Math */\nadd('es6-math', true);\nadd('es6-math-imul', true);\n/* Object */\nadd('es6-object', true);\nadd('es2017-object', true);\n/* Observable */\nadd('es-observable', false);\n/* Promise */\nadd('es6-promise', true);\nadd('es2018-promise-finally', () => true && typeof global.Promise.prototype.finally !== 'undefined', true);\n/* Set */\nadd('es6-set', true);\n/* String */\nadd('es6-string', true);\nadd('es6-string-raw', true);\nadd('es2017-string', true);\n/* Symbol */\nadd('es6-symbol', true);\n/* WeakMap */\nadd('es6-weakmap', true);\n/* Miscellaneous features */\nadd('microtasks', true);\nadd('postmessage', true);\nadd('raf', true);\nadd('setimmediate', false);\n/* DOM Features */\nadd('dom-mutationobserver', true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\nadd('abort-controller', () => typeof global.AbortController !== 'undefined');\nadd('abort-signal', () => typeof global.AbortSignal !== 'undefined');\nadd('dom-intersection-observer', () => true && global.IntersectionObserver !== undefined, true);\nadd('dom-resize-observer', () => true && global.ResizeObserver !== undefined, true);\nadd('dom-pointer-events', () => true && global.onpointerdown !== undefined, true);\nadd('dom-css-variables', () => true &&\n    !has('host-jsdom') &&\n    global.window.CSS &&\n    global.window.CSS.supports &&\n    global.window.CSS.supports('(--a: 0)'), true);\nadd('dom-inert', () => true && Element.prototype.hasOwnProperty('inert'), true);\nadd('build-elide', false);\nadd('test', false);\nadd('global-this', () => typeof global.globalThis !== 'undefined');\n//# sourceMappingURL=has.mjs.map","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetFunction(item) {\n    return Boolean(item && item.isWidget);\n}\nexport function isWNodeFactory(node) {\n    if (typeof node === 'function' && node.isFactory) {\n        return true;\n    }\n    return false;\n}\nexport function isWidget(item) {\n    return isWidgetBaseConstructor(item) || isWidgetFunction(item);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        (isWidget(item.default) || isWNodeFactory(item.default)));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidget(item) || isWNodeFactory(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map","import global from './global';\nvar isArrayLike = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = global.WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport global from '../shim/global';\nimport has from '../core/has';\nimport WeakMap from '../shim/WeakMap';\nimport Set from '../shim/Set';\nimport Map from '../shim/Map';\nimport { flat } from '../shim/array';\nimport { Registry, isWidget, isWidgetBaseConstructor, isWidgetFunction, isWNodeFactory } from './Registry';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nconst EMPTY_ARRAY = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nconst WNODE = '__WNODE_TYPE';\nconst VNODE = '__VNODE_TYPE';\nconst DOMVNODE = '__DOMVNODE_TYPE';\n// @ts-ignore\nconst scope = typeof __DOJO_SCOPE === 'string' ? __DOJO_SCOPE : 'dojo_scope';\nif (!global[scope]) {\n    global[scope] = {};\n}\nexport function setRendering(value) {\n    global[scope].rendering = value;\n}\nexport function incrementBlockCount() {\n    const blocksPending = global[scope].blocksPending || 0;\n    global[scope].blocksPending = blocksPending + 1;\n}\nexport function decrementBlockCount() {\n    const blocksPending = global[scope].blocksPending || 0;\n    global[scope].blocksPending = blocksPending - 1;\n}\nexport function isTextNode(item) {\n    return item && item.nodeType === 3;\n}\nfunction isLazyDefine(item) {\n    return Boolean(item && item.label);\n}\nfunction isWNodeWrapper(child) {\n    return child && isWNode(child.node);\n}\nfunction isVNodeWrapper(child) {\n    return !!child && isVNode(child.node);\n}\nfunction isVirtualWrapper(child) {\n    return isVNodeWrapper(child) && child.node.tag === 'virtual';\n}\nfunction isBodyWrapper(wrapper) {\n    return isVNodeWrapper(wrapper) && wrapper.node.tag === 'body';\n}\nfunction isAttachApplication(value) {\n    return !!value.type;\n}\nexport function isWNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\nexport function isVNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\nexport function isDomVNode(child) {\n    return Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nfunction toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        type: VNODE\n    };\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, namespace) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, namespace);\n        }\n    }\n}\nexport function w(widgetConstructorOrNode, properties, children) {\n    if (properties.__children__) {\n        delete properties.__children__;\n    }\n    if (isWNodeFactory(widgetConstructorOrNode)) {\n        return widgetConstructorOrNode(properties, children);\n    }\n    if (isWNode(widgetConstructorOrNode)) {\n        properties = Object.assign({}, widgetConstructorOrNode.properties, properties);\n        children = children ? children : widgetConstructorOrNode.children;\n        widgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n    }\n    return {\n        children: children || [],\n        widgetConstructor: widgetConstructorOrNode,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (typeof tag.tag === 'function') {\n        return tag.tag(properties, children);\n    }\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    if (isVNode(tag)) {\n        let { classes = [], styles = {} } = properties, newProperties = __rest(properties, [\"classes\", \"styles\"]);\n        let _a = tag.properties, { classes: nodeClasses = [], styles: nodeStyles = {} } = _a, nodeProperties = __rest(_a, [\"classes\", \"styles\"]);\n        nodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n        classes = Array.isArray(classes) ? classes : [classes];\n        styles = Object.assign({}, nodeStyles, styles);\n        properties = Object.assign({}, nodeProperties, newProperties, { classes: [...nodeClasses, ...classes], styles });\n        children = children ? children : tag.children;\n        tag = tag.tag;\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType,\n        onAttach\n    };\n}\nexport const REGISTRY_ITEM = '__registry_item';\nexport class FromRegistry {\n    constructor() {\n        /* tslint:disable-next-line:variable-name */\n        this.__properties__ = {};\n    }\n}\nFromRegistry.type = REGISTRY_ITEM;\nexport function fromRegistry(tag) {\n    var _a;\n    return _a = class extends FromRegistry {\n            constructor() {\n                super(...arguments);\n                this.properties = {};\n                this.name = tag;\n            }\n        },\n        _a.type = REGISTRY_ITEM,\n        _a;\n}\nexport function tsx(tag, properties = {}, ...children) {\n    children = flat(children, Infinity);\n    properties = properties === null ? {} : properties;\n    if (typeof tag === 'string') {\n        return v(tag, properties, children);\n    }\n    else if (tag.type === 'registry' && properties.__autoRegistryItem) {\n        const name = properties.__autoRegistryItem;\n        delete properties.__autoRegistryItem;\n        return w(name, properties, children);\n    }\n    else if (tag.type === REGISTRY_ITEM) {\n        const registryItem = new tag();\n        return w(registryItem.name, properties, children);\n    }\n    else {\n        return w(tag, properties, children);\n    }\n}\nexport function propertiesDiff(current, next, invalidator, ignoreProperties) {\n    const propertyNames = [...Object.keys(current), ...Object.keys(next)];\n    for (let i = 0; i < propertyNames.length; i++) {\n        if (ignoreProperties.indexOf(propertyNames[i]) > -1) {\n            continue;\n        }\n        const result = auto(current[propertyNames[i]], next[propertyNames[i]]);\n        if (result.changed) {\n            invalidator();\n            break;\n        }\n        ignoreProperties.push(propertyNames[i]);\n    }\n}\nfunction buildPreviousProperties(domNode, current) {\n    const { node: { diffType, properties, attributes } } = current;\n    if (!diffType || diffType === 'vdom') {\n        return {\n            properties: current.deferredProperties\n                ? Object.assign({}, current.deferredProperties, current.node.properties) : current.node.properties,\n            attributes: current.node.attributes,\n            events: current.node.events\n        };\n    }\n    else if (diffType === 'none') {\n        return {\n            properties: {},\n            attributes: current.node.attributes ? {} : undefined,\n            events: current.node.events\n        };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = current.node.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction checkDistinguishable(wrappers, index, parentWNodeWrapper) {\n    const wrapperToCheck = wrappers[index];\n    if (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n        return;\n    }\n    const { key } = wrapperToCheck.node.properties;\n    let parentName = 'unknown';\n    if (parentWNodeWrapper) {\n        const { node: { widgetConstructor } } = parentWNodeWrapper;\n        parentName = widgetConstructor.name || 'unknown';\n    }\n    if (key === undefined || key === null) {\n        for (let i = 0; i < wrappers.length; i++) {\n            if (i !== index) {\n                const wrapper = wrappers[i];\n                if (same(wrapper, wrapperToCheck)) {\n                    let nodeIdentifier;\n                    if (isWNodeWrapper(wrapper)) {\n                        nodeIdentifier = wrapper.node.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = wrapper.node.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction same(dnode1, dnode2) {\n    if (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n        if (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n            if (dnode1.node.domNode !== dnode2.node.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.node.tag !== dnode2.node.tag) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n        const widgetConstructor1 = dnode1.registryItem || dnode1.node.widgetConstructor;\n        const widgetConstructor2 = dnode2.registryItem || dnode2.node.widgetConstructor;\n        const { node: { properties: props1 } } = dnode1;\n        const { node: { properties: props2 } } = dnode2;\n        if (dnode1.instance === undefined && typeof widgetConstructor2 === 'string') {\n            return false;\n        }\n        if (widgetConstructor1 !== widgetConstructor2) {\n            return false;\n        }\n        if (props1.key !== props2.key) {\n            return false;\n        }\n        if (!(widgetConstructor1.keys || []).every((key) => props1[key] === props2[key])) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction createClassPropValue(classes = []) {\n    let classNames = '';\n    if (Array.isArray(classes)) {\n        for (let i = 0; i < classes.length; i++) {\n            let className = classes[i];\n            if (className && className !== true) {\n                classNames = classNames ? `${classNames} ${className}` : className;\n            }\n        }\n        return classNames;\n    }\n    if (classes && classes !== true) {\n        classNames = classes;\n    }\n    return classNames;\n}\nfunction updateAttribute(domNode, attrName, attrValue, namespace) {\n    if (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction arrayFrom(arr) {\n    return Array.prototype.slice.call(arr);\n}\nfunction createFactory(callback, middlewares, key) {\n    const factory = (properties, children) => {\n        if (properties) {\n            const result = w(callback, properties, children);\n            callback.isWidget = true;\n            callback.middlewares = middlewares;\n            return result;\n        }\n        return {\n            middlewares,\n            callback\n        };\n    };\n    const keys = Object.keys(middlewares).reduce((keys, middlewareName) => {\n        const middleware = middlewares[middlewareName];\n        if (middleware.keys) {\n            keys = [...keys, ...middleware.keys];\n        }\n        return keys;\n    }, key ? [key] : []);\n    callback.keys = keys;\n    factory.keys = keys;\n    factory.isFactory = true;\n    return factory;\n}\nexport function create(middlewares = {}) {\n    function properties() {\n        function returns(callback) {\n            return createFactory(callback, middlewares);\n        }\n        function key(key) {\n            function returns(callback) {\n                return createFactory(callback, middlewares, key);\n            }\n            return returns;\n        }\n        function children() {\n            function returns(callback) {\n                return createFactory(callback, middlewares);\n            }\n            function key(key) {\n                function returns(callback) {\n                    return createFactory(callback, middlewares, key);\n                }\n                return returns;\n            }\n            returns.key = key;\n            return returns;\n        }\n        returns.children = children;\n        returns.key = key;\n        return returns;\n    }\n    function children() {\n        function properties() {\n            function returns(callback) {\n                return createFactory(callback, middlewares);\n            }\n            function key(key) {\n                function returns(callback) {\n                    return createFactory(callback, middlewares, key);\n                }\n                return returns;\n            }\n            returns.key = key;\n            return returns;\n        }\n        function returns(callback) {\n            return createFactory(callback, middlewares);\n        }\n        returns.properties = properties;\n        return returns;\n    }\n    function returns(callback) {\n        return createFactory(callback, middlewares);\n    }\n    returns.children = children;\n    returns.properties = properties;\n    return returns;\n}\nconst factory = create();\nfunction wrapNodes(renderer) {\n    const result = renderer();\n    const isWNodeWrapper = isWNode(result);\n    const callback = () => {\n        return result;\n    };\n    callback.isWNodeWrapper = isWNodeWrapper;\n    return factory(callback);\n}\nexport const widgetInstanceMap = new WeakMap();\nconst widgetMetaMap = new Map();\nconst requestedDomNodes = new Set();\nlet wrapperId = 0;\nlet metaId = 0;\nfunction addNodeToMap(id, key, node) {\n    const widgetMeta = widgetMetaMap.get(id);\n    if (widgetMeta) {\n        widgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n        widgetMeta.nodeMap.set(key, node);\n        if (requestedDomNodes.has(`${id}-${key}`)) {\n            widgetMeta.invalidator();\n            requestedDomNodes.delete(`${id}-${key}`);\n        }\n    }\n}\nfunction destroyHandles(meta) {\n    const { destroyMap, middlewareIds } = meta;\n    if (!destroyMap) {\n        return;\n    }\n    for (let i = 0; i < middlewareIds.length; i++) {\n        const id = middlewareIds[i];\n        const destroy = destroyMap.get(id);\n        destroy && destroy();\n        destroyMap.delete(id);\n        if (destroyMap.size === 0) {\n            break;\n        }\n    }\n    destroyMap.clear();\n}\nfunction runDiffs(meta, current, next) {\n    let customProperties = {};\n    meta.customDiffMap = meta.customDiffMap || new Map();\n    if (meta.customDiffMap.size) {\n        meta.customDiffMap.forEach((diffMap) => {\n            diffMap.forEach((diff, propertyName) => {\n                const result = diff(Object.assign({}, current), Object.assign({}, next));\n                if (result) {\n                    customProperties[propertyName] = result;\n                }\n            });\n        });\n    }\n    return customProperties;\n}\nexport const invalidator = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    return () => {\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            return widgetMeta.invalidator();\n        }\n    };\n});\nexport const node = factory(({ id }) => {\n    return {\n        get(key) {\n            const [widgetId] = id.split('-');\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (widgetMeta) {\n                widgetMeta.nodeMap = widgetMeta.nodeMap || new Map();\n                const mountNode = widgetMeta.mountNode;\n                const node = widgetMeta.nodeMap.get(key);\n                if (node &&\n                    (mountNode.contains(node) ||\n                        (global.document.body !== mountNode && global.document.body.contains(node)))) {\n                    return node;\n                }\n                requestedDomNodes.add(`${widgetId}-${key}`);\n            }\n            return null;\n        }\n    };\n});\nexport const diffProperty = factory(({ id }) => {\n    function callback(propertyName, propertiesOrDiff, diff) {\n        const [widgetId] = id.split('-');\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (!diff) {\n            diff = propertiesOrDiff;\n        }\n        if (widgetMeta) {\n            widgetMeta.customDiffMap = widgetMeta.customDiffMap || new Map();\n            widgetMeta.customDiffProperties = widgetMeta.customDiffProperties || new Set();\n            const propertyDiffMap = widgetMeta.customDiffMap.get(id) || new Map();\n            if (!propertyDiffMap.has(propertyName)) {\n                const result = diff({}, widgetMeta.originalProperties);\n                if (result !== undefined) {\n                    if (has('dojo-debug')) {\n                        if (widgetMeta.propertiesCalled) {\n                            console.warn(`Calling \"propertyDiff\" middleware after accessing properties in \"${widgetMeta.widgetName}\", can result in referencing stale properties.`);\n                        }\n                    }\n                    widgetMeta.properties = Object.assign({}, widgetMeta.properties, { [propertyName]: result });\n                }\n                propertyDiffMap.set(propertyName, diff);\n                widgetMeta.customDiffProperties.add(propertyName);\n            }\n            widgetMeta.customDiffMap.set(id, propertyDiffMap);\n        }\n    }\n    return callback;\n});\nexport const destroy = factory(({ id }) => {\n    return (destroyFunction) => {\n        const [widgetId] = id.split('-');\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            widgetMeta.destroyMap = widgetMeta.destroyMap || new Map();\n            if (!widgetMeta.destroyMap.has(id)) {\n                widgetMeta.destroyMap.set(id, destroyFunction);\n            }\n        }\n    };\n});\nexport const getRegistry = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    return () => {\n        const widgetMeta = widgetMetaMap.get(widgetId);\n        if (widgetMeta) {\n            if (!widgetMeta.registryHandler) {\n                widgetMeta.registryHandler = new RegistryHandler();\n                widgetMeta.registryHandler.base = widgetMeta.registry;\n                widgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n            }\n            widgetMeta.registryHandler = widgetMeta.registryHandler || new RegistryHandler();\n            return widgetMeta.registryHandler;\n        }\n        return null;\n    };\n});\nexport const defer = factory(({ id }) => {\n    const [widgetId] = id.split('-');\n    let isDeferred = false;\n    return {\n        pause() {\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (!isDeferred && widgetMeta) {\n                widgetMeta.deferRefs = widgetMeta.deferRefs + 1;\n                isDeferred = true;\n            }\n        },\n        resume() {\n            const widgetMeta = widgetMetaMap.get(widgetId);\n            if (isDeferred && widgetMeta) {\n                widgetMeta.deferRefs = widgetMeta.deferRefs - 1;\n                isDeferred = false;\n            }\n        }\n    };\n});\nfunction wrapFunctionProperties(id, properties) {\n    const props = {};\n    const propertyNames = Object.keys(properties);\n    for (let i = 0; i < propertyNames.length; i++) {\n        const propertyName = propertyNames[i];\n        if (typeof properties[propertyName] === 'function') {\n            props[propertyName] = function WrappedProperty(...args) {\n                const widgetMeta = widgetMetaMap.get(id);\n                if (widgetMeta) {\n                    return widgetMeta.originalProperties[propertyName](...args);\n                }\n                return properties[propertyName](...args);\n            };\n            props[propertyName].unwrap = () => {\n                const widgetMeta = widgetMetaMap.get(id);\n                if (widgetMeta) {\n                    return widgetMeta.originalProperties[propertyName];\n                }\n                return properties[propertyName];\n            };\n        }\n        else {\n            props[propertyName] = properties[propertyName];\n        }\n    }\n    return props;\n}\nexport function renderer(renderer) {\n    let _mountOptions = {\n        sync: false,\n        merge: true,\n        transition: undefined,\n        domNode: global.document.body,\n        registry: new Registry()\n    };\n    let _invalidationQueue = [];\n    let _processQueue = [];\n    let _deferredProcessQueue = [];\n    let _applicationQueue = [];\n    let _eventMap = new WeakMap();\n    let _idToWrapperMap = new Map();\n    let _wrapperSiblingMap = new WeakMap();\n    let _idToChildrenWrappers = new Map();\n    let _insertBeforeMap = new WeakMap();\n    let _nodeToWrapperMap = new WeakMap();\n    let _renderScheduled;\n    let _deferredRenderCallbacks = [];\n    let parentInvalidate;\n    let _allMergedNodes = [];\n    let _appWrapperId;\n    let _deferredProcessIds = new Map();\n    function nodeOperation(propName, propValue, previousValue, domNode) {\n        let result = propValue && !previousValue;\n        if (typeof propValue === 'function') {\n            result = propValue();\n        }\n        if (result === true) {\n            _deferredRenderCallbacks.push(() => {\n                domNode[propName]();\n            });\n        }\n    }\n    function updateEvent(domNode, eventName, currentValue, previousValue) {\n        if (previousValue) {\n            const previousEvent = _eventMap.get(previousValue);\n            previousEvent && domNode.removeEventListener(eventName, previousEvent);\n        }\n        let callback = currentValue;\n        if (eventName === 'input') {\n            callback = function (evt) {\n                currentValue.call(this, evt);\n                evt.target['oninput-value'] = evt.target.value;\n            };\n        }\n        domNode.addEventListener(eventName, callback);\n        _eventMap.set(currentValue, callback);\n    }\n    function removeOrphanedEvents(domNode, previousProperties, properties, onlyEvents = false) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = _eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n    function resolveRegistryItem(wrapper, instance, id) {\n        if (!isWidget(wrapper.node.widgetConstructor)) {\n            const owningNode = _nodeToWrapperMap.get(wrapper.node);\n            if (owningNode) {\n                if (owningNode.instance) {\n                    instance = owningNode.instance;\n                }\n                else {\n                    id = owningNode.id;\n                }\n            }\n            let registry;\n            if (instance) {\n                const instanceData = widgetInstanceMap.get(instance);\n                if (instanceData) {\n                    registry = instanceData.registry;\n                }\n            }\n            else if (id !== undefined) {\n                const widgetMeta = widgetMetaMap.get(id);\n                if (widgetMeta) {\n                    if (!widgetMeta.registryHandler) {\n                        widgetMeta.registryHandler = new RegistryHandler();\n                        widgetMeta.registryHandler.base = widgetMeta.registry;\n                        widgetMeta.registryHandler.on('invalidate', widgetMeta.invalidator);\n                    }\n                    registry = widgetMeta.registryHandler;\n                }\n            }\n            if (registry) {\n                let registryLabel;\n                if (isLazyDefine(wrapper.node.widgetConstructor)) {\n                    const { label, registryItem } = wrapper.node.widgetConstructor;\n                    if (!registry.has(label)) {\n                        registry.define(label, registryItem);\n                    }\n                    registryLabel = label;\n                }\n                else {\n                    registryLabel = wrapper.node.widgetConstructor;\n                }\n                let item = registry.get(registryLabel);\n                if (isWNodeFactory(item)) {\n                    const node = item(wrapper.node.properties, wrapper.node.children);\n                    if (isWidgetFunction(node.widgetConstructor)) {\n                        wrapper.registryItem = node.widgetConstructor;\n                    }\n                }\n                else {\n                    wrapper.registryItem = item;\n                }\n            }\n        }\n    }\n    function mapNodeToInstance(nodes, wrapper) {\n        while (nodes.length) {\n            let node = nodes.pop();\n            if (isWNode(node) || isVNode(node)) {\n                if (!_nodeToWrapperMap.has(node)) {\n                    _nodeToWrapperMap.set(node, wrapper);\n                    if (node.children && node.children.length) {\n                        nodes = [...nodes, ...node.children];\n                    }\n                }\n            }\n        }\n    }\n    function renderedToWrapper(rendered, parent, currentParent) {\n        const { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n        const wrappedRendered = [];\n        const hasParentWNode = isWNodeWrapper(parent);\n        const hasVirtualParentNode = isVirtualWrapper(parent);\n        const currentParentChildren = (isVNodeWrapper(currentParent) && _idToChildrenWrappers.get(currentParent.id)) || [];\n        const hasCurrentParentChildren = currentParentChildren.length > 0;\n        const insertBefore = ((requiresInsertBefore || hasPreviousSiblings !== false) && (hasParentWNode || hasVirtualParentNode)) ||\n            (hasCurrentParentChildren && rendered.length > 1);\n        let previousItem;\n        if (isWNodeWrapper(parent) && rendered.length) {\n            mapNodeToInstance([...rendered], parent);\n        }\n        for (let i = 0; i < rendered.length; i++) {\n            let renderedItem = rendered[i];\n            if (!renderedItem || renderedItem === true) {\n                continue;\n            }\n            if (typeof renderedItem === 'string') {\n                renderedItem = toTextVNode(renderedItem);\n            }\n            const owningNode = _nodeToWrapperMap.get(renderedItem);\n            const wrapper = {\n                node: renderedItem,\n                depth: depth + 1,\n                order: i,\n                parentId: parent.id,\n                requiresInsertBefore: insertBefore,\n                hasParentWNode,\n                namespace: namespace\n            };\n            if (isVNode(renderedItem)) {\n                if (renderedItem.deferredPropertiesCallback) {\n                    wrapper.deferredProperties = renderedItem.deferredPropertiesCallback(false);\n                }\n                if (renderedItem.properties.exitAnimation) {\n                    parent.hasAnimations = true;\n                    let nextParent = _idToWrapperMap.get(parent.parentId);\n                    while (nextParent) {\n                        if (nextParent.hasAnimations) {\n                            break;\n                        }\n                        nextParent.hasAnimations = true;\n                        nextParent = _idToWrapperMap.get(nextParent.parentId);\n                    }\n                }\n            }\n            if (owningNode) {\n                wrapper.owningId = owningNode.id;\n            }\n            if (isWNode(renderedItem)) {\n                resolveRegistryItem(wrapper, parent.instance, parent.id);\n            }\n            if (previousItem) {\n                _wrapperSiblingMap.set(previousItem, wrapper);\n            }\n            wrappedRendered.push(wrapper);\n            previousItem = wrapper;\n        }\n        return wrappedRendered;\n    }\n    function findParentDomNode(currentNode) {\n        let parentDomNode;\n        let parentWrapper = _idToWrapperMap.get(currentNode.parentId);\n        while (!parentDomNode && parentWrapper) {\n            if (!parentDomNode &&\n                isVNodeWrapper(parentWrapper) &&\n                !isVirtualWrapper(parentWrapper) &&\n                parentWrapper.domNode) {\n                parentDomNode = parentWrapper.domNode;\n            }\n            parentWrapper = _idToWrapperMap.get(parentWrapper.parentId);\n        }\n        return parentDomNode;\n    }\n    function runDeferredProperties(next) {\n        const { deferredPropertiesCallback } = next.node;\n        if (deferredPropertiesCallback) {\n            const properties = next.node.properties;\n            _deferredRenderCallbacks.push(() => {\n                if (_idToWrapperMap.has(next.owningId)) {\n                    const deferredProperties = next.deferredProperties;\n                    next.deferredProperties = deferredPropertiesCallback(true);\n                    processProperties(next, {\n                        properties: Object.assign({}, deferredProperties, properties)\n                    });\n                }\n            });\n        }\n    }\n    function findInsertBefore(next) {\n        let insertBefore = null;\n        let searchNode = next;\n        while (!insertBefore) {\n            const nextSibling = _wrapperSiblingMap.get(searchNode);\n            if (nextSibling) {\n                let domNode = nextSibling.domNode;\n                if (isWNodeWrapper(nextSibling) || isVirtualWrapper(nextSibling)) {\n                    if (!nextSibling.childDomWrapperId) {\n                        nextSibling.childDomWrapperId = findDomNodeOnParentWrapper(nextSibling.id);\n                    }\n                    if (nextSibling.childDomWrapperId) {\n                        const childWrapper = _idToWrapperMap.get(nextSibling.childDomWrapperId);\n                        if (childWrapper && !isBodyWrapper(childWrapper)) {\n                            domNode = childWrapper.domNode;\n                        }\n                    }\n                }\n                if (domNode && domNode.parentNode) {\n                    insertBefore = domNode;\n                    break;\n                }\n                searchNode = nextSibling;\n                continue;\n            }\n            searchNode = searchNode && _idToWrapperMap.get(searchNode.parentId);\n            if (!searchNode || (isVNodeWrapper(searchNode) && !isVirtualWrapper(searchNode))) {\n                break;\n            }\n        }\n        return insertBefore;\n    }\n    function setValue(domNode, propValue, previousValue) {\n        const domValue = domNode.value;\n        const onInputValue = domNode['oninput-value'];\n        const onSelectValue = domNode['select-value'];\n        if (onSelectValue && domValue !== onSelectValue) {\n            domNode.value = onSelectValue;\n            if (domNode.value === onSelectValue) {\n                domNode['select-value'] = undefined;\n            }\n        }\n        else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n            domNode.value = propValue;\n            domNode['oninput-value'] = undefined;\n        }\n    }\n    function setProperties(domNode, currentProperties = {}, nextWrapper, includesEventsAndAttributes = true) {\n        const properties = nextWrapper.deferredProperties\n            ? Object.assign({}, nextWrapper.deferredProperties, nextWrapper.node.properties) : nextWrapper.node.properties;\n        const propNames = Object.keys(properties);\n        const propCount = propNames.length;\n        if (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n            domNode.removeAttribute('class');\n        }\n        includesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, properties);\n        for (let i = 0; i < propCount; i++) {\n            const propName = propNames[i];\n            let propValue = properties[propName];\n            const previousValue = currentProperties[propName];\n            if (propName === 'classes') {\n                const previousClassString = createClassPropValue(previousValue);\n                let currentClassString = createClassPropValue(propValue);\n                if (previousClassString !== currentClassString) {\n                    if (currentClassString) {\n                        if (nextWrapper.merged) {\n                            const domClasses = (domNode.getAttribute('class') || '').split(' ');\n                            for (let i = 0; i < domClasses.length; i++) {\n                                if (currentClassString.indexOf(domClasses[i]) === -1) {\n                                    currentClassString = `${domClasses[i]} ${currentClassString}`;\n                                }\n                            }\n                        }\n                        domNode.setAttribute('class', currentClassString);\n                    }\n                    else {\n                        domNode.removeAttribute('class');\n                    }\n                }\n            }\n            else if (nodeOperations.indexOf(propName) !== -1) {\n                nodeOperation(propName, propValue, previousValue, domNode);\n            }\n            else if (propName === 'styles') {\n                const styleNames = Object.keys(propValue);\n                const styleCount = styleNames.length;\n                for (let j = 0; j < styleCount; j++) {\n                    const styleName = styleNames[j];\n                    const newStyleValue = propValue[styleName];\n                    const oldStyleValue = previousValue && previousValue[styleName];\n                    if (newStyleValue === oldStyleValue) {\n                        continue;\n                    }\n                    domNode.style[styleName] = newStyleValue || '';\n                }\n            }\n            else {\n                if (!propValue && typeof previousValue === 'string') {\n                    propValue = '';\n                }\n                if (propName === 'value') {\n                    if (domNode.tagName === 'SELECT') {\n                        domNode['select-value'] = propValue;\n                    }\n                    setValue(domNode, propValue, previousValue);\n                }\n                else if (propName !== 'key' && propValue !== previousValue) {\n                    const type = typeof propValue;\n                    if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                        updateEvent(domNode, propName.substr(2), propValue, previousValue);\n                    }\n                    else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                        updateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n                    }\n                    else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                        if (domNode[propName] !== propValue) {\n                            domNode[propName] = propValue;\n                        }\n                    }\n                    else {\n                        domNode[propName] = propValue;\n                    }\n                }\n            }\n        }\n    }\n    function _createDeferredRenderCallback() {\n        const callbacks = _deferredRenderCallbacks;\n        _deferredRenderCallbacks = [];\n        if (callbacks.length) {\n            return () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n        }\n    }\n    function _scheduleDeferredRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const run = _createDeferredRenderCallback();\n        if (run) {\n            if (sync) {\n                run();\n            }\n            else {\n                let id;\n                id = global.requestAnimationFrame(() => {\n                    _deferredProcessIds.delete(id);\n                    run();\n                });\n                _deferredProcessIds.set(id, run);\n            }\n        }\n    }\n    function processProperties(next, previousProperties) {\n        if (next.node.attributes && next.node.events) {\n            updateAttributes(next.domNode, previousProperties.attributes || {}, next.node.attributes, next.namespace);\n            setProperties(next.domNode, previousProperties.properties, next, false);\n            const events = next.node.events || {};\n            if (previousProperties.events) {\n                removeOrphanedEvents(next.domNode, previousProperties.events || {}, next.node.events, true);\n            }\n            previousProperties.events = previousProperties.events || {};\n            Object.keys(events).forEach((event) => {\n                updateEvent(next.domNode, event, events[event], previousProperties.events[event]);\n            });\n        }\n        else {\n            setProperties(next.domNode, previousProperties.properties, next);\n        }\n    }\n    function unmount() {\n        _processQueue.push({\n            current: [_idToWrapperMap.get(_appWrapperId)],\n            next: [],\n            meta: {}\n        });\n        if (_renderScheduled) {\n            global.cancelAnimationFrame(_renderScheduled);\n        }\n        _runProcessQueue();\n        _runDomInstructionQueue();\n        _deferredProcessIds.forEach((callback, id) => {\n            global.cancelAnimationFrame(id);\n            callback();\n        });\n        const run = _createDeferredRenderCallback();\n        run && run();\n        _invalidationQueue = [];\n        _processQueue = [];\n        _deferredProcessQueue = [];\n        _applicationQueue = [];\n        _deferredRenderCallbacks = [];\n        _allMergedNodes = [];\n        _eventMap = new WeakMap();\n        _idToWrapperMap.clear();\n        _idToChildrenWrappers.clear();\n        _wrapperSiblingMap = new WeakMap();\n        _nodeToWrapperMap = new WeakMap();\n        _insertBeforeMap = undefined;\n    }\n    function mount(mountOptions = {}) {\n        let domNode = mountOptions.domNode;\n        if (!domNode) {\n            if (has('dojo-debug') && domNode === null) {\n                console.warn('Unable to find node to mount the application, defaulting to the document body.');\n            }\n            domNode = global.document.body;\n        }\n        _mountOptions = Object.assign({}, _mountOptions, mountOptions, { domNode });\n        const renderResult = wrapNodes(renderer)({}, []);\n        _appWrapperId = `${wrapperId++}`;\n        const nextWrapper = {\n            id: _appWrapperId,\n            node: renderResult,\n            order: 0,\n            depth: 1,\n            owningId: '-1',\n            parentId: '-1',\n            siblingId: '-1',\n            properties: {}\n        };\n        _idToWrapperMap.set('-1', {\n            id: `-1`,\n            depth: 0,\n            order: 0,\n            owningId: '',\n            domNode,\n            node: v('fake'),\n            parentId: '-1'\n        });\n        _processQueue.push({\n            current: [],\n            next: [nextWrapper],\n            meta: { mergeNodes: arrayFrom(domNode.childNodes) }\n        });\n        _runProcessQueue();\n        _runDomInstructionQueue();\n        _cleanUpMergedNodes();\n        _insertBeforeMap = undefined;\n        _scheduleDeferredRenderCallbacks();\n        if (!_renderScheduled) {\n            setRendering(false);\n        }\n    }\n    function invalidate() {\n        parentInvalidate && parentInvalidate();\n    }\n    function _schedule() {\n        const { sync } = _mountOptions;\n        if (sync) {\n            _runInvalidationQueue();\n        }\n        else if (!_renderScheduled) {\n            setRendering(true);\n            _renderScheduled = global.requestAnimationFrame(() => {\n                _runInvalidationQueue();\n            });\n        }\n    }\n    function getWNodeWrapper(id) {\n        const wrapper = _idToWrapperMap.get(id);\n        if (wrapper && isWNodeWrapper(wrapper)) {\n            return wrapper;\n        }\n    }\n    function _runInvalidationQueue() {\n        _renderScheduled = undefined;\n        let invalidationQueue = [..._invalidationQueue];\n        const previouslyRendered = [];\n        _invalidationQueue = [];\n        invalidationQueue.sort((a, b) => {\n            let result = b.depth - a.depth;\n            if (result === 0) {\n                result = b.order - a.order;\n            }\n            return result;\n        });\n        if (_deferredProcessQueue.length) {\n            _processQueue = [..._deferredProcessQueue];\n            _deferredProcessQueue = [];\n            _runProcessQueue();\n            if (_deferredProcessQueue.length) {\n                _invalidationQueue = [...invalidationQueue];\n                invalidationQueue = [];\n            }\n        }\n        let item;\n        while ((item = invalidationQueue.pop())) {\n            let { id } = item;\n            const current = getWNodeWrapper(id);\n            if (!current || previouslyRendered.indexOf(id) !== -1 || !_idToWrapperMap.has(current.parentId)) {\n                continue;\n            }\n            previouslyRendered.push(id);\n            const sibling = _wrapperSiblingMap.get(current);\n            const next = {\n                node: {\n                    type: WNODE,\n                    widgetConstructor: current.node.widgetConstructor,\n                    properties: current.properties || {},\n                    children: current.node.children || []\n                },\n                instance: current.instance,\n                id: current.id,\n                properties: current.properties,\n                depth: current.depth,\n                order: current.order,\n                owningId: current.owningId,\n                parentId: current.parentId,\n                registryItem: current.registryItem\n            };\n            sibling && _wrapperSiblingMap.set(next, sibling);\n            const result = _updateWidget({ current, next });\n            if (result && result.item) {\n                _processQueue.push(result.item);\n                _idToWrapperMap.set(id, next);\n                _runProcessQueue();\n            }\n        }\n        _runDomInstructionQueue();\n        _cleanUpMergedNodes();\n        _scheduleDeferredRenderCallbacks();\n        if (!_renderScheduled) {\n            setRendering(false);\n        }\n    }\n    function _cleanUpMergedNodes() {\n        if (_deferredProcessQueue.length === 0) {\n            let mergedNode;\n            while ((mergedNode = _allMergedNodes.pop())) {\n                mergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n            }\n            _mountOptions.merge = false;\n        }\n    }\n    function _runProcessQueue() {\n        let item;\n        while ((item = _processQueue.pop())) {\n            if (isAttachApplication(item)) {\n                item.instance && _applicationQueue.push(item);\n            }\n            else {\n                const { current, next, meta } = item;\n                _process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n            }\n        }\n    }\n    function _runDomInstructionQueue() {\n        _applicationQueue.reverse();\n        let item;\n        while ((item = _applicationQueue.pop())) {\n            if (item.type === 'create') {\n                const { parentDomNode, next, next: { domNode, merged, requiresInsertBefore, node } } = item;\n                processProperties(next, { properties: {} });\n                runDeferredProperties(next);\n                if (!merged) {\n                    let insertBefore;\n                    if (requiresInsertBefore) {\n                        insertBefore = findInsertBefore(next);\n                    }\n                    else if (_insertBeforeMap) {\n                        insertBefore = _insertBeforeMap.get(next);\n                    }\n                    parentDomNode.insertBefore(domNode, insertBefore);\n                    if (isDomVNode(next.node) && next.node.onAttach) {\n                        next.node.onAttach();\n                    }\n                }\n                if (domNode.tagName === 'OPTION' && domNode.parentElement) {\n                    setValue(domNode.parentElement);\n                }\n                const { enterAnimation, enterAnimationActive } = node.properties;\n                if (_mountOptions.transition && enterAnimation && enterAnimation !== true) {\n                    _mountOptions.transition.enter(domNode, enterAnimation, enterAnimationActive);\n                }\n                const owningWrapper = _nodeToWrapperMap.get(next.node);\n                if (owningWrapper && node.properties.key != null) {\n                    if (owningWrapper.instance) {\n                        const instanceData = widgetInstanceMap.get(owningWrapper.instance);\n                        instanceData && instanceData.nodeHandler.add(domNode, `${node.properties.key}`);\n                    }\n                    else {\n                        addNodeToMap(owningWrapper.id, node.properties.key, domNode);\n                    }\n                }\n                item.next.inserted = true;\n            }\n            else if (item.type === 'update') {\n                const { next, next: { domNode }, current, current: { domNode: currentDomNode } } = item;\n                if (isTextNode(domNode) && isTextNode(currentDomNode) && domNode !== currentDomNode) {\n                    currentDomNode.parentNode && currentDomNode.parentNode.replaceChild(domNode, currentDomNode);\n                }\n                else {\n                    const previousProperties = buildPreviousProperties(domNode, current);\n                    processProperties(next, previousProperties);\n                    runDeferredProperties(next);\n                }\n            }\n            else if (item.type === 'delete') {\n                const { current } = item;\n                const { exitAnimation, exitAnimationActive } = current.node.properties;\n                if (_mountOptions.transition && exitAnimation && exitAnimation !== true) {\n                    _mountOptions.transition.exit(current.domNode, exitAnimation, exitAnimationActive);\n                }\n                else {\n                    current.domNode.parentNode.removeChild(current.domNode);\n                }\n            }\n            else if (item.type === 'attach') {\n                const { instance, attached } = item;\n                const instanceData = widgetInstanceMap.get(instance);\n                if (instanceData) {\n                    instanceData.nodeHandler.addRoot();\n                    attached && instanceData.onAttach();\n                }\n            }\n            else if (item.type === 'detach') {\n                if (item.current.instance) {\n                    const instanceData = widgetInstanceMap.get(item.current.instance);\n                    instanceData && instanceData.onDetach();\n                }\n                item.current.instance = undefined;\n            }\n        }\n        if (_deferredProcessQueue.length === 0) {\n            _nodeToWrapperMap = new WeakMap();\n        }\n    }\n    function _processMergeNodes(next, mergeNodes) {\n        const { merge } = _mountOptions;\n        if (merge && mergeNodes.length) {\n            if (isVNodeWrapper(next)) {\n                let { node: { tag } } = next;\n                for (let i = 0; i < mergeNodes.length; i++) {\n                    const domElement = mergeNodes[i];\n                    const tagName = domElement.tagName || '';\n                    if (tag.toUpperCase() === tagName.toUpperCase()) {\n                        const mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n                        if (mergeNodeIndex !== -1) {\n                            _allMergedNodes.splice(mergeNodeIndex, 1);\n                        }\n                        mergeNodes.splice(i, 1);\n                        next.domNode = domElement;\n                        break;\n                    }\n                }\n            }\n            else {\n                next.mergeNodes = mergeNodes;\n            }\n        }\n    }\n    function distinguishableCheck(childNodes, index) {\n        const parentWNodeWrapper = getWNodeWrapper(childNodes[index].owningId);\n        checkDistinguishable(childNodes, index, parentWNodeWrapper);\n    }\n    function createKeyMap(wrappers) {\n        const keys = [];\n        for (let i = 0; i < wrappers.length; i++) {\n            const wrapper = wrappers[i];\n            if (wrapper.node.properties.key != null) {\n                keys.push(wrapper.node.properties.key);\n            }\n            else {\n                return false;\n            }\n        }\n        return keys;\n    }\n    function _process(current, next, meta = {}) {\n        let { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n        const currentLength = current.length;\n        const nextLength = next.length;\n        const hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n        let instructions = [];\n        let replace = false;\n        if (oldIndex === 0 && newIndex === 0 && currentLength) {\n            const currentKeys = createKeyMap(current);\n            if (currentKeys) {\n                const nextKeys = createKeyMap(next);\n                if (nextKeys) {\n                    for (let i = 0; i < currentKeys.length; i++) {\n                        if (nextKeys.indexOf(currentKeys[i]) !== -1) {\n                            instructions = [];\n                            replace = false;\n                            break;\n                        }\n                        replace = true;\n                        instructions.push({ current: current[i], next: undefined });\n                    }\n                }\n            }\n        }\n        if (replace || (currentLength === 0 && !_mountOptions.merge)) {\n            for (let i = 0; i < next.length; i++) {\n                instructions.push({ current: undefined, next: next[i] });\n            }\n        }\n        else {\n            if (newIndex < nextLength) {\n                let currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n                const nextWrapper = next[newIndex];\n                nextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n                _processMergeNodes(nextWrapper, mergeNodes);\n                if (currentWrapper && same(currentWrapper, nextWrapper)) {\n                    oldIndex++;\n                    newIndex++;\n                    if (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n                        nextWrapper.inserted = currentWrapper.inserted;\n                    }\n                    instructions.push({ current: currentWrapper, next: nextWrapper });\n                }\n                else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n                    has('dojo-debug') && current.length && distinguishableCheck(next, newIndex);\n                    instructions.push({ current: undefined, next: nextWrapper });\n                    newIndex++;\n                }\n                else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n                    has('dojo-debug') && distinguishableCheck(current, oldIndex);\n                    instructions.push({ current: currentWrapper, next: undefined });\n                    oldIndex++;\n                }\n                else {\n                    has('dojo-debug') && distinguishableCheck(next, newIndex);\n                    has('dojo-debug') && distinguishableCheck(current, oldIndex);\n                    instructions.push({ current: currentWrapper, next: undefined });\n                    instructions.push({ current: undefined, next: nextWrapper });\n                    oldIndex++;\n                    newIndex++;\n                }\n            }\n            if (newIndex < nextLength) {\n                _processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n            }\n            if (currentLength > oldIndex && newIndex >= nextLength) {\n                for (let i = oldIndex; i < currentLength; i++) {\n                    has('dojo-debug') && distinguishableCheck(current, i);\n                    instructions.push({ current: current[i], next: undefined });\n                }\n            }\n        }\n        for (let i = 0; i < instructions.length; i++) {\n            const result = _processOne(instructions[i]);\n            if (result === false) {\n                if (_mountOptions.merge && mergeNodes.length) {\n                    if (newIndex < nextLength) {\n                        _processQueue.pop();\n                    }\n                    _processQueue.push({ next, current, meta });\n                    _deferredProcessQueue = _processQueue;\n                    _processQueue = [];\n                    break;\n                }\n                continue;\n            }\n            const { widget, item, dom } = result;\n            widget && _processQueue.push(widget);\n            item && _processQueue.push(item);\n            dom && _applicationQueue.push(dom);\n        }\n    }\n    function _processOne({ current, next }) {\n        if (current !== next) {\n            if (!current && next) {\n                if (isVNodeWrapper(next)) {\n                    return _createDom({ next });\n                }\n                else {\n                    return _createWidget({ next });\n                }\n            }\n            else if (current && next) {\n                if (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n                    return _updateDom({ current, next });\n                }\n                else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n                    return _updateWidget({ current, next });\n                }\n            }\n            else if (current && !next) {\n                if (isVNodeWrapper(current)) {\n                    return _removeDom({ current });\n                }\n                else if (isWNodeWrapper(current)) {\n                    return _removeWidget({ current });\n                }\n            }\n        }\n        return {};\n    }\n    function createWidgetOptions(id, widgetId, middleware) {\n        return {\n            id,\n            properties: () => {\n                const widgetMeta = widgetMetaMap.get(widgetId);\n                if (widgetMeta) {\n                    widgetMeta.propertiesCalled = true;\n                    return Object.assign({}, widgetMeta.properties);\n                }\n                return {};\n            },\n            children: () => {\n                const widgetMeta = widgetMetaMap.get(widgetId);\n                if (widgetMeta) {\n                    return widgetMeta.children;\n                }\n                return [];\n            },\n            middleware\n        };\n    }\n    function resolveMiddleware(middlewares, id, middlewareIds = []) {\n        const keys = Object.keys(middlewares);\n        const results = {};\n        const uniqueId = `${id}-${metaId++}`;\n        for (let i = 0; i < keys.length; i++) {\n            const middleware = middlewares[keys[i]]();\n            const payload = createWidgetOptions(uniqueId, id);\n            if (middleware.middlewares) {\n                const { middlewares: resolvedMiddleware } = resolveMiddleware(middleware.middlewares, id, middlewareIds);\n                payload.middleware = resolvedMiddleware;\n                results[keys[i]] = middleware.callback(payload);\n            }\n            else {\n                results[keys[i]] = middleware.callback(payload);\n            }\n        }\n        middlewareIds.push(uniqueId);\n        return { middlewares: results, ids: middlewareIds };\n    }\n    function _createWidget({ next }) {\n        let { node: { widgetConstructor } } = next;\n        let { registry } = _mountOptions;\n        let Constructor = next.registryItem || widgetConstructor;\n        if (!isWidget(Constructor)) {\n            resolveRegistryItem(next);\n            if (!next.registryItem) {\n                return false;\n            }\n            Constructor = next.registryItem;\n        }\n        let rendered;\n        let invalidate;\n        next.properties = Object.assign({}, next.node.properties);\n        next.id = next.id || `${wrapperId++}`;\n        _idToWrapperMap.set(next.id, next);\n        const { id, depth, order } = next;\n        if (!isWidgetBaseConstructor(Constructor)) {\n            let widgetMeta = widgetMetaMap.get(id);\n            if (!widgetMeta) {\n                invalidate = () => {\n                    const widgetMeta = widgetMetaMap.get(id);\n                    if (widgetMeta) {\n                        widgetMeta.dirty = true;\n                        if (!widgetMeta.rendering && _idToWrapperMap.has(id)) {\n                            _invalidationQueue.push({ id, depth, order });\n                            _schedule();\n                        }\n                    }\n                };\n                widgetMeta = {\n                    widgetName: Constructor.name || 'unknown',\n                    mountNode: _mountOptions.domNode,\n                    dirty: false,\n                    invalidator: invalidate,\n                    properties: wrapFunctionProperties(id, next.node.properties),\n                    originalProperties: Object.assign({}, next.node.properties),\n                    children: next.node.children,\n                    deferRefs: 0,\n                    rendering: true,\n                    middleware: {},\n                    middlewareIds: [],\n                    registry: _mountOptions.registry,\n                    propertiesCalled: false\n                };\n                widgetMetaMap.set(next.id, widgetMeta);\n                if (Constructor.middlewares && Object.keys(Constructor.middlewares).length) {\n                    const { middlewares, ids } = resolveMiddleware(Constructor.middlewares, id);\n                    widgetMeta.middleware = middlewares;\n                    widgetMeta.middlewareIds = ids;\n                }\n            }\n            else {\n                invalidate = widgetMeta.invalidator;\n            }\n            rendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n            widgetMeta.rendering = false;\n            widgetMeta.propertiesCalled = false;\n            if (widgetMeta.deferRefs > 0) {\n                return false;\n            }\n        }\n        else {\n            let instance = new Constructor();\n            instance.registry.base = registry;\n            const instanceData = widgetInstanceMap.get(instance);\n            invalidate = () => {\n                instanceData.dirty = true;\n                if (!instanceData.rendering && _idToWrapperMap.has(id)) {\n                    _invalidationQueue.push({ id, depth, order });\n                    _schedule();\n                }\n            };\n            instanceData.invalidate = invalidate;\n            instanceData.rendering = true;\n            instance.__setProperties__(next.node.properties);\n            instance.__setChildren__(next.node.children);\n            next.instance = instance;\n            rendered = instance.__render__();\n            instanceData.rendering = false;\n        }\n        let children;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            children = renderedToWrapper(rendered, next, null);\n            _idToChildrenWrappers.set(id, children);\n        }\n        if (!parentInvalidate && !Constructor.isWNodeWrapper) {\n            parentInvalidate = invalidate;\n        }\n        return {\n            item: {\n                next: children,\n                meta: { mergeNodes: next.mergeNodes }\n            },\n            widget: { type: 'attach', instance: next.instance, id, attached: true }\n        };\n    }\n    function _updateWidget({ current, next }) {\n        current = getWNodeWrapper(current.id) || current;\n        const { instance, domNode, hasAnimations, id } = current;\n        let { node: { widgetConstructor } } = next;\n        const Constructor = next.registryItem || widgetConstructor;\n        if (!isWidget(Constructor)) {\n            return {};\n        }\n        let rendered;\n        let processResult = {};\n        let didRender = false;\n        let currentChildren = _idToChildrenWrappers.get(current.id);\n        next.hasAnimations = hasAnimations;\n        next.id = id;\n        next.properties = Object.assign({}, next.node.properties);\n        _wrapperSiblingMap.delete(current);\n        if (domNode && domNode.parentNode) {\n            next.domNode = domNode;\n        }\n        if (!isWidgetBaseConstructor(Constructor)) {\n            const widgetMeta = widgetMetaMap.get(id);\n            if (widgetMeta) {\n                widgetMeta.originalProperties = Object.assign({}, next.properties);\n                widgetMeta.properties = wrapFunctionProperties(id, widgetMeta.originalProperties);\n                widgetMeta.children = next.node.children;\n                widgetMeta.rendering = true;\n                const customProperties = runDiffs(widgetMeta, current.properties, widgetMeta.originalProperties);\n                widgetMeta.properties = Object.assign({}, widgetMeta.properties, customProperties);\n                if (current.node.children.length > 0 || next.node.children.length > 0) {\n                    widgetMeta.dirty = true;\n                }\n                if (!widgetMeta.dirty) {\n                    propertiesDiff(current.properties, next.properties, () => {\n                        widgetMeta.dirty = true;\n                    }, widgetMeta.customDiffProperties ? [...widgetMeta.customDiffProperties.values()] : []);\n                }\n                if (widgetMeta.dirty) {\n                    _idToChildrenWrappers.delete(id);\n                    didRender = true;\n                    rendered = Constructor(createWidgetOptions(id, id, widgetMeta.middleware));\n                    widgetMeta.dirty = false;\n                    if (widgetMeta.deferRefs > 0) {\n                        rendered = null;\n                    }\n                }\n                widgetMeta.rendering = false;\n                widgetMeta.propertiesCalled = false;\n            }\n        }\n        else {\n            const instanceData = widgetInstanceMap.get(instance);\n            next.instance = instance;\n            instanceData.rendering = true;\n            instance.__setProperties__(next.node.properties);\n            instance.__setChildren__(next.node.children);\n            if (instanceData.dirty) {\n                didRender = true;\n                _idToChildrenWrappers.delete(id);\n                rendered = instance.__render__();\n            }\n            instanceData.rendering = false;\n        }\n        _idToWrapperMap.set(next.id, next);\n        processResult.widget = { type: 'attach', instance, id, attached: false };\n        let children;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            children = renderedToWrapper(rendered, next, current);\n            _idToChildrenWrappers.set(id, children);\n        }\n        if (didRender) {\n            processResult.item = {\n                current: currentChildren,\n                next: children,\n                meta: {}\n            };\n        }\n        return processResult;\n    }\n    function _removeWidget({ current }) {\n        current = getWNodeWrapper(current.id) || current;\n        _idToWrapperMap.delete(current.id);\n        const meta = widgetMetaMap.get(current.id);\n        let currentChildren = _idToChildrenWrappers.get(current.id);\n        _idToChildrenWrappers.delete(current.id);\n        _wrapperSiblingMap.delete(current);\n        let processResult = {\n            item: {\n                current: currentChildren,\n                meta: {}\n            }\n        };\n        if (meta) {\n            meta.registryHandler && meta.registryHandler.destroy();\n            destroyHandles(meta);\n            widgetMetaMap.delete(current.id);\n        }\n        else {\n            processResult.widget = { type: 'detach', current, instance: current.instance };\n        }\n        return processResult;\n    }\n    function findDomNodeOnParentWrapper(id) {\n        const children = _idToChildrenWrappers.get(id) || [];\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child.domNode) {\n                return child.id;\n            }\n            const childId = findDomNodeOnParentWrapper(child.id);\n            if (childId) {\n                return childId;\n            }\n        }\n    }\n    function _createDom({ next }) {\n        const parentDomNode = findParentDomNode(next);\n        const isVirtual = isVirtualWrapper(next);\n        const isBody = isBodyWrapper(next);\n        let mergeNodes = [];\n        next.id = `${wrapperId++}`;\n        _idToWrapperMap.set(next.id, next);\n        if (!next.domNode) {\n            if (next.node.domNode) {\n                next.domNode = next.node.domNode;\n            }\n            else {\n                if (next.node.tag === 'svg') {\n                    next.namespace = NAMESPACE_SVG;\n                }\n                if (isBody) {\n                    next.domNode = global.document.body;\n                }\n                else if (next.node.tag && !isVirtual) {\n                    if (next.namespace) {\n                        next.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n                    }\n                    else {\n                        next.domNode = global.document.createElement(next.node.tag);\n                    }\n                }\n                else if (next.node.text != null) {\n                    next.domNode = global.document.createTextNode(next.node.text);\n                }\n            }\n            if (_insertBeforeMap && _allMergedNodes.length) {\n                if (parentDomNode === _allMergedNodes[0].parentNode) {\n                    _insertBeforeMap.set(next, _allMergedNodes[0]);\n                }\n            }\n        }\n        else if (_mountOptions.merge) {\n            next.merged = true;\n            if (isTextNode(next.domNode)) {\n                if (next.domNode.data !== next.node.text) {\n                    _allMergedNodes = [next.domNode, ..._allMergedNodes];\n                    next.domNode = global.document.createTextNode(next.node.text);\n                    next.merged = false;\n                }\n            }\n            else {\n                mergeNodes = arrayFrom(next.domNode.childNodes);\n                _allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n            }\n        }\n        let children;\n        if (next.domNode || isVirtual) {\n            if (next.node.children && next.node.children.length) {\n                children = renderedToWrapper(next.node.children, next, null);\n                _idToChildrenWrappers.set(next.id, children);\n            }\n        }\n        const dom = isVirtual || isBody\n            ? undefined\n            : {\n                next: next,\n                parentDomNode: parentDomNode,\n                type: 'create'\n            };\n        if (children) {\n            return {\n                item: {\n                    current: [],\n                    next: children,\n                    meta: { mergeNodes }\n                },\n                dom,\n                widget: isVirtual ? { type: 'attach', id: next.id, attached: false } : undefined\n            };\n        }\n        return { dom };\n    }\n    function _updateDom({ current, next }) {\n        next.domNode = current.domNode;\n        next.namespace = current.namespace;\n        next.id = current.id;\n        next.childDomWrapperId = current.childDomWrapperId;\n        let children;\n        let currentChildren = _idToChildrenWrappers.get(next.id);\n        if (next.node.text != null && next.node.text !== current.node.text) {\n            next.domNode = global.document.createTextNode(next.node.text);\n        }\n        else if (next.node.children) {\n            children = renderedToWrapper(next.node.children, next, current);\n            _idToChildrenWrappers.set(next.id, children);\n        }\n        _wrapperSiblingMap.delete(current);\n        _idToWrapperMap.set(next.id, next);\n        return {\n            item: {\n                current: currentChildren,\n                next: children,\n                meta: {}\n            },\n            dom: { type: 'update', next, current }\n        };\n    }\n    function _removeDom({ current }) {\n        const isVirtual = isVirtualWrapper(current);\n        const isBody = isBodyWrapper(current);\n        const children = _idToChildrenWrappers.get(current.id);\n        _idToChildrenWrappers.delete(current.id);\n        _idToWrapperMap.delete(current.id);\n        _wrapperSiblingMap.delete(current);\n        if (current.node.properties.key) {\n            const widgetMeta = widgetMetaMap.get(current.owningId);\n            const parentWrapper = getWNodeWrapper(current.owningId);\n            if (widgetMeta) {\n                widgetMeta.nodeMap && widgetMeta.nodeMap.delete(current.node.properties.key);\n            }\n            else if (parentWrapper && parentWrapper.instance) {\n                const instanceData = widgetInstanceMap.get(parentWrapper.instance);\n                instanceData && instanceData.nodeHandler.remove(current.node.properties.key);\n            }\n        }\n        if (current.hasAnimations || isVirtual || isBody) {\n            return {\n                item: { current: children, meta: {} },\n                dom: isVirtual || isBody ? undefined : { type: 'delete', current }\n            };\n        }\n        if (children) {\n            _deferredRenderCallbacks.push(() => {\n                let wrappers = children || [];\n                let wrapper;\n                let bodyIds = [];\n                while ((wrapper = wrappers.pop())) {\n                    if (isWNodeWrapper(wrapper)) {\n                        wrapper = getWNodeWrapper(wrapper.id) || wrapper;\n                        if (wrapper.instance) {\n                            const instanceData = widgetInstanceMap.get(wrapper.instance);\n                            instanceData && instanceData.onDetach();\n                            wrapper.instance = undefined;\n                        }\n                        else {\n                            const meta = widgetMetaMap.get(wrapper.id);\n                            if (meta) {\n                                meta.registryHandler && meta.registryHandler.destroy();\n                                destroyHandles(meta);\n                                widgetMetaMap.delete(wrapper.id);\n                            }\n                        }\n                    }\n                    let wrapperChildren = _idToChildrenWrappers.get(wrapper.id);\n                    if (wrapperChildren) {\n                        wrappers.push(...wrapperChildren);\n                    }\n                    if (isBodyWrapper(wrapper)) {\n                        bodyIds.push(wrapper.id);\n                    }\n                    else if (bodyIds.indexOf(wrapper.parentId) !== -1) {\n                        if (isWNodeWrapper(wrapper) || isVirtualWrapper(wrapper)) {\n                            bodyIds.push(wrapper.id);\n                        }\n                        else if (wrapper.domNode && wrapper.domNode.parentNode) {\n                            wrapper.domNode.parentNode.removeChild(wrapper.domNode);\n                        }\n                    }\n                    _idToChildrenWrappers.delete(wrapper.id);\n                    _idToWrapperMap.delete(wrapper.id);\n                }\n            });\n        }\n        return {\n            dom: { type: 'delete', current }\n        };\n    }\n    return {\n        mount,\n        unmount,\n        invalidate\n    };\n}\nexport default renderer;\n//# sourceMappingURL=vdom.mjs.map","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map","var _a;\nimport global from './global';\nvar queueMicroTask = undefined;\n// !has('microtasks')\n// elided: import './support/queue'\n// !has('es6-symbol')\n// elided: import './Symbol'\nimport has from '../core/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n    // this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n    // is not duplicated and always added in the conditional below\n}\nif (!has('es2018-promise-finally')) {\n    global.Promise.prototype.finally = function (onFinally) {\n        return this.then(onFinally && ((value) => Promise.resolve(onFinally()).then(() => value)), onFinally &&\n            ((reason) => Promise.resolve(onFinally()).then(() => {\n                throw reason;\n            })));\n    };\n}\nexport default ShimPromise;","var isArrayLike = undefined, isIterable = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\nexport let from;\nexport let of;\nexport let copyWithin;\nexport let fill;\nexport let find;\nexport let findIndex;\nexport let includes;\nexport let flat;\nexport let flatMap;\nlet toLength;\nlet toInteger;\nlet normalizeOffset;\nif (!true || !true || !true) {\n    const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n}\nif (!true) {\n    Array.from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    Array.of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    Array.prototype.copyWithin = function copyWithin(offset, start, end) {\n        if (this == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(this.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in this) {\n                this[offset] = this[start];\n            }\n            else {\n                delete this[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return this;\n    };\n    Array.prototype.find = function find(callback, thisArg) {\n        const index = this.findIndex(callback, thisArg);\n        return index !== -1 ? this[index] : undefined;\n    };\n    Array.prototype.findIndex = function findIndex(callback, thisArg) {\n        const length = toLength(this.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(this[i], i, this)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (!true) {\n    Array.prototype.fill = function fill(value, start, end) {\n        const length = toLength(this.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < (end || 0)) {\n            this[i++] = value;\n        }\n        return this;\n    };\n}\nif (!true) {\n    Array.prototype.includes = function includes(searchElement, fromIndex = 0) {\n        let len = toLength(this.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = this[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nif (!true) {\n    Array.prototype.flat = function flat(depth = 1) {\n        return depth > 0\n            ? this.reduce((acc, val) => acc.concat(Array.isArray(val) ? val.flat(depth - 1) : val), [])\n            : this.slice();\n    };\n    Array.prototype.flatMap = function flatMap(callback) {\n        return this.map(callback).flat();\n    };\n}\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nflat = wrapNative(Array.prototype.flat);\nflatMap = wrapNative(Array.prototype.flatMap);\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\nexport default Array;","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    get base() {\n        return this.baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map","/*!\n * css-vars-ponyfill\n * v2.3.0\n * https://jhildenbiddle.github.io/css-vars-ponyfill/\n * (c) 2018-2020 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\n(function(global, factory) {\n    typeof exports === \"object\" && typeof module !== \"undefined\" ? module.exports = factory() : typeof define === \"function\" && define.amd ? define(factory) : (global = global || self, \n    global.cssVars = factory());\n})(this, (function() {\n    \"use strict\";\n    function _extends() {\n        _extends = Object.assign || function(target) {\n            for (var i = 1; i < arguments.length; i++) {\n                var source = arguments[i];\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n            return target;\n        };\n        return _extends.apply(this, arguments);\n    }\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n    function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n    }\n    function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(n);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n    function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n        return arr2;\n    }\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    /*!\n   * get-css-data\n   * v1.8.0\n   * https://github.com/jhildenbiddle/get-css-data\n   * (c) 2018-2020 John Hildenbiddle <http://hildenbiddle.com>\n   * MIT license\n   */    function getUrls(urls) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var settings = {\n            mimeType: options.mimeType || null,\n            onBeforeSend: options.onBeforeSend || Function.prototype,\n            onSuccess: options.onSuccess || Function.prototype,\n            onError: options.onError || Function.prototype,\n            onComplete: options.onComplete || Function.prototype\n        };\n        var urlArray = Array.isArray(urls) ? urls : [ urls ];\n        var urlQueue = Array.apply(null, Array(urlArray.length)).map((function(x) {\n            return null;\n        }));\n        function isValidCss() {\n            var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n            var isHTML = cssText.trim().charAt(0) === \"<\";\n            return !isHTML;\n        }\n        function onError(xhr, urlIndex) {\n            settings.onError(xhr, urlArray[urlIndex], urlIndex);\n        }\n        function onSuccess(responseText, urlIndex) {\n            var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n            responseText = returnVal === false ? \"\" : returnVal || responseText;\n            urlQueue[urlIndex] = responseText;\n            if (urlQueue.indexOf(null) === -1) {\n                settings.onComplete(urlQueue);\n            }\n        }\n        var parser = document.createElement(\"a\");\n        urlArray.forEach((function(url, i) {\n            parser.setAttribute(\"href\", url);\n            parser.href = String(parser.href);\n            var isIElte9 = Boolean(document.all && !window.atob);\n            var isIElte9CORS = isIElte9 && parser.host.split(\":\")[0] !== location.host.split(\":\")[0];\n            if (isIElte9CORS) {\n                var isSameProtocol = parser.protocol === location.protocol;\n                if (isSameProtocol) {\n                    var xdr = new XDomainRequest;\n                    xdr.open(\"GET\", url);\n                    xdr.timeout = 0;\n                    xdr.onprogress = Function.prototype;\n                    xdr.ontimeout = Function.prototype;\n                    xdr.onload = function() {\n                        if (isValidCss(xdr.responseText)) {\n                            onSuccess(xdr.responseText, i);\n                        } else {\n                            onError(xdr, i);\n                        }\n                    };\n                    xdr.onerror = function(err) {\n                        onError(xdr, i);\n                    };\n                    setTimeout((function() {\n                        xdr.send();\n                    }), 0);\n                } else {\n                    console.warn(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (\".concat(url, \")\"));\n                    onError(null, i);\n                }\n            } else {\n                var xhr = new XMLHttpRequest;\n                xhr.open(\"GET\", url);\n                if (settings.mimeType && xhr.overrideMimeType) {\n                    xhr.overrideMimeType(settings.mimeType);\n                }\n                settings.onBeforeSend(xhr, url, i);\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n                            onSuccess(xhr.responseText, i);\n                        } else {\n                            onError(xhr, i);\n                        }\n                    }\n                };\n                xhr.send();\n            }\n        }));\n    }\n    /**\n   * Gets CSS data from <style> and <link> nodes (including @imports), then\n   * returns data in order processed by DOM. Allows specifying nodes to\n   * include/exclude and filtering CSS data using RegEx.\n   *\n   * @preserve\n   * @param {object}   [options] The options object\n   * @param {object}   [options.rootElement=document] Root element to traverse for\n   *                   <link> and <style> nodes.\n   * @param {string}   [options.include] CSS selector matching <link> and <style>\n   *                   nodes to include\n   * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n   *                   nodes to exclude\n   * @param {object}   [options.filter] Regular expression used to filter node CSS\n   *                   data. Each block of CSS data is tested against the filter,\n   *                   and only matching data is included.\n   * @param {boolean}  [options.skipDisabled=true] Determines if disabled\n   *                   stylesheets will be skipped while collecting CSS data.\n   * @param {boolean}  [options.useCSSOM=false] Determines if CSS data will be\n   *                   collected from a stylesheet's runtime values instead of its\n   *                   text content. This is required to get accurate CSS data\n   *                   when a stylesheet has been modified using the deleteRule()\n   *                   or insertRule() methods because these modifications will\n   *                   not be reflected in the stylesheet's text content.\n   * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n   *                   1) the XHR object, 2) source node reference, and 3) the\n   *                   source URL as arguments.\n   * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n   *                   1) CSS text, 2) source node reference, and 3) the source\n   *                   URL as arguments.\n   * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n   *                   object for inspection, 2) soure node reference, and 3) the\n   *                   source URL that failed (either a <link> href or an @import)\n   *                   as arguments\n   * @param {function} [options.onComplete] Callback after all nodes have been\n   *                   processed. Passes 1) concatenated CSS text, 2) an array of\n   *                   CSS text in DOM order, and 3) an array of nodes in DOM\n   *                   order as arguments.\n   *\n   * @example\n   *\n   *   getCssData({\n   *     rootElement : document,\n   *     include     : 'style,link[rel=\"stylesheet\"]',\n   *     exclude     : '[href=\"skip.css\"]',\n   *     filter      : /red/,\n   *     skipDisabled: true,\n   *     useCSSOM    : false,\n   *     onBeforeSend(xhr, node, url) {\n   *       // ...\n   *     }\n   *     onSuccess(cssText, node, url) {\n   *       // ...\n   *     }\n   *     onError(xhr, node, url) {\n   *       // ...\n   *     },\n   *     onComplete(cssText, cssArray, nodeArray) {\n   *       // ...\n   *     }\n   *   });\n   */    function getCssData(options) {\n        var regex = {\n            cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n            cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n        };\n        var settings = {\n            rootElement: options.rootElement || document,\n            include: options.include || 'style,link[rel=\"stylesheet\"]',\n            exclude: options.exclude || null,\n            filter: options.filter || null,\n            skipDisabled: options.skipDisabled !== false,\n            useCSSOM: options.useCSSOM || false,\n            onBeforeSend: options.onBeforeSend || Function.prototype,\n            onSuccess: options.onSuccess || Function.prototype,\n            onError: options.onError || Function.prototype,\n            onComplete: options.onComplete || Function.prototype\n        };\n        var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter((function(node) {\n            return !matchesSelector(node, settings.exclude);\n        }));\n        var cssArray = Array.apply(null, Array(sourceNodes.length)).map((function(x) {\n            return null;\n        }));\n        function handleComplete() {\n            var isComplete = cssArray.indexOf(null) === -1;\n            if (isComplete) {\n                var cssText = cssArray.join(\"\");\n                settings.onComplete(cssText, cssArray, sourceNodes);\n            }\n        }\n        function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n            var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n            cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n            resolveImports(cssText, node, sourceUrl, (function(resolvedCssText, errorData) {\n                if (cssArray[cssIndex] === null) {\n                    errorData.forEach((function(data) {\n                        return settings.onError(data.xhr, node, data.url);\n                    }));\n                    if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                        cssArray[cssIndex] = resolvedCssText;\n                    } else {\n                        cssArray[cssIndex] = \"\";\n                    }\n                    handleComplete();\n                }\n            }));\n        }\n        function parseImportData(cssText, baseUrl) {\n            var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n            var importData = {};\n            importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter((function(rule) {\n                return ignoreRules.indexOf(rule) === -1;\n            }));\n            importData.urls = importData.rules.map((function(rule) {\n                return rule.replace(regex.cssImports, \"$1\");\n            }));\n            importData.absoluteUrls = importData.urls.map((function(url) {\n                return getFullUrl(url, baseUrl);\n            }));\n            importData.absoluteRules = importData.rules.map((function(rule, i) {\n                var oldUrl = importData.urls[i];\n                var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n                return rule.replace(oldUrl, newUrl);\n            }));\n            return importData;\n        }\n        function resolveImports(cssText, node, baseUrl, callbackFn) {\n            var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n            var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n            var importData = parseImportData(cssText, baseUrl, __errorRules);\n            if (importData.rules.length) {\n                getUrls(importData.absoluteUrls, {\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var returnVal = settings.onSuccess(cssText, node, url);\n                        cssText = returnVal === false ? \"\" : returnVal || cssText;\n                        var responseImportData = parseImportData(cssText, url, __errorRules);\n                        responseImportData.rules.forEach((function(rule, i) {\n                            cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                        }));\n                        return cssText;\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        __errorData.push({\n                            xhr: xhr,\n                            url: url\n                        });\n                        __errorRules.push(importData.rules[urlIndex]);\n                        resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                    },\n                    onComplete: function onComplete(responseArray) {\n                        responseArray.forEach((function(importText, i) {\n                            cssText = cssText.replace(importData.rules[i], importText);\n                        }));\n                        resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                    }\n                });\n            } else {\n                callbackFn(cssText, __errorData);\n            }\n        }\n        if (sourceNodes.length) {\n            sourceNodes.forEach((function(node, i) {\n                var linkHref = node.getAttribute(\"href\");\n                var linkRel = node.getAttribute(\"rel\");\n                var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase().indexOf(\"stylesheet\") !== -1;\n                var isSkip = settings.skipDisabled === false ? false : node.disabled;\n                var isStyle = node.nodeName === \"STYLE\";\n                if (isLink && !isSkip) {\n                    getUrls(linkHref, {\n                        mimeType: \"text/css\",\n                        onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                            settings.onBeforeSend(xhr, node, url);\n                        },\n                        onSuccess: function onSuccess(cssText, url, urlIndex) {\n                            var sourceUrl = getFullUrl(linkHref);\n                            handleSuccess(cssText, i, node, sourceUrl);\n                        },\n                        onError: function onError(xhr, url, urlIndex) {\n                            cssArray[i] = \"\";\n                            settings.onError(xhr, node, url);\n                            handleComplete();\n                        }\n                    });\n                } else if (isStyle && !isSkip) {\n                    var cssText = node.textContent;\n                    if (settings.useCSSOM) {\n                        cssText = Array.apply(null, node.sheet.cssRules).map((function(rule) {\n                            return rule.cssText;\n                        })).join(\"\");\n                    }\n                    handleSuccess(cssText, i, node, location.href);\n                } else {\n                    cssArray[i] = \"\";\n                    handleComplete();\n                }\n            }));\n        } else {\n            settings.onComplete(\"\", []);\n        }\n    }\n    function getFullUrl(url, base) {\n        var d = document.implementation.createHTMLDocument(\"\");\n        var b = d.createElement(\"base\");\n        var a = d.createElement(\"a\");\n        d.head.appendChild(b);\n        d.body.appendChild(a);\n        b.href = base || document.baseURI || (document.querySelector(\"base\") || {}).href || location.href;\n        a.href = url;\n        return a.href;\n    }\n    function matchesSelector(elm, selector) {\n        var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n        return matches.call(elm, selector);\n    }\n    var balancedMatch = balanced;\n    function balanced(a, b, str) {\n        if (a instanceof RegExp) a = maybeMatch(a, str);\n        if (b instanceof RegExp) b = maybeMatch(b, str);\n        var r = range(a, b, str);\n        return r && {\n            start: r[0],\n            end: r[1],\n            pre: str.slice(0, r[0]),\n            body: str.slice(r[0] + a.length, r[1]),\n            post: str.slice(r[1] + b.length)\n        };\n    }\n    function maybeMatch(reg, str) {\n        var m = str.match(reg);\n        return m ? m[0] : null;\n    }\n    balanced.range = range;\n    function range(a, b, str) {\n        var begs, beg, left, right, result;\n        var ai = str.indexOf(a);\n        var bi = str.indexOf(b, ai + 1);\n        var i = ai;\n        if (ai >= 0 && bi > 0) {\n            begs = [];\n            left = str.length;\n            while (i >= 0 && !result) {\n                if (i == ai) {\n                    begs.push(i);\n                    ai = str.indexOf(a, i + 1);\n                } else if (begs.length == 1) {\n                    result = [ begs.pop(), bi ];\n                } else {\n                    beg = begs.pop();\n                    if (beg < left) {\n                        left = beg;\n                        right = bi;\n                    }\n                    bi = str.indexOf(b, i + 1);\n                }\n                i = ai < bi && ai >= 0 ? ai : bi;\n            }\n            if (begs.length) {\n                result = [ left, right ];\n            }\n        }\n        return result;\n    }\n    function parseCss(css) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var defaults = {\n            preserveStatic: true,\n            removeComments: false\n        };\n        var settings = _extends({}, defaults, options);\n        var errors = [];\n        function error(msg) {\n            throw new Error(\"CSS parse error: \".concat(msg));\n        }\n        function match(re) {\n            var m = re.exec(css);\n            if (m) {\n                css = css.slice(m[0].length);\n                return m;\n            }\n        }\n        function open() {\n            return match(/^{\\s*/);\n        }\n        function close() {\n            return match(/^}/);\n        }\n        function whitespace() {\n            match(/^\\s*/);\n        }\n        function comment() {\n            whitespace();\n            if (css[0] !== \"/\" || css[1] !== \"*\") {\n                return;\n            }\n            var i = 2;\n            while (css[i] && (css[i] !== \"*\" || css[i + 1] !== \"/\")) {\n                i++;\n            }\n            if (!css[i]) {\n                return error(\"end of comment is missing\");\n            }\n            var str = css.slice(2, i);\n            css = css.slice(i + 2);\n            return {\n                type: \"comment\",\n                comment: str\n            };\n        }\n        function comments() {\n            var cmnts = [];\n            var c;\n            while (c = comment()) {\n                cmnts.push(c);\n            }\n            return settings.removeComments ? [] : cmnts;\n        }\n        function selector() {\n            whitespace();\n            while (css[0] === \"}\") {\n                error(\"extra closing bracket\");\n            }\n            var m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n            if (m) {\n                return m[0].trim().replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, \"\").replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (function(m) {\n                    return m.replace(/,/g, \"‌\");\n                })).split(/\\s*(?![^(]*\\)),\\s*/).map((function(s) {\n                    return s.replace(/\\u200C/g, \",\");\n                }));\n            }\n        }\n        function declaration() {\n            if (css[0] === \"@\") {\n                return at_rule();\n            }\n            match(/^([;\\s]*)+/);\n            var comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n            var prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n            if (!prop) {\n                return;\n            }\n            prop = prop[0].trim();\n            if (!match(/^:\\s*/)) {\n                return error(\"property missing ':'\");\n            }\n            var val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n            var ret = {\n                type: \"declaration\",\n                property: prop.replace(comment_regexp, \"\"),\n                value: val ? val[0].replace(comment_regexp, \"\").trim() : \"\"\n            };\n            match(/^[;\\s]*/);\n            return ret;\n        }\n        function declarations() {\n            if (!open()) {\n                return error(\"missing '{'\");\n            }\n            var d;\n            var decls = comments();\n            while (d = declaration()) {\n                decls.push(d);\n                decls = decls.concat(comments());\n            }\n            if (!close()) {\n                return error(\"missing '}'\");\n            }\n            return decls;\n        }\n        function keyframe() {\n            whitespace();\n            var vals = [];\n            var m;\n            while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n                vals.push(m[1]);\n                match(/^,\\s*/);\n            }\n            if (vals.length) {\n                return {\n                    type: \"keyframe\",\n                    values: vals,\n                    declarations: declarations()\n                };\n            }\n        }\n        function at_keyframes() {\n            var m = match(/^@([-\\w]+)?keyframes\\s*/);\n            if (!m) {\n                return;\n            }\n            var vendor = m[1];\n            m = match(/^([-\\w]+)\\s*/);\n            if (!m) {\n                return error(\"@keyframes missing name\");\n            }\n            var name = m[1];\n            if (!open()) {\n                return error(\"@keyframes missing '{'\");\n            }\n            var frame;\n            var frames = comments();\n            while (frame = keyframe()) {\n                frames.push(frame);\n                frames = frames.concat(comments());\n            }\n            if (!close()) {\n                return error(\"@keyframes missing '}'\");\n            }\n            return {\n                type: \"keyframes\",\n                name: name,\n                vendor: vendor,\n                keyframes: frames\n            };\n        }\n        function at_page() {\n            var m = match(/^@page */);\n            if (m) {\n                var sel = selector() || [];\n                return {\n                    type: \"page\",\n                    selectors: sel,\n                    declarations: declarations()\n                };\n            }\n        }\n        function at_page_margin_box() {\n            var m = match(/@(top|bottom|left|right)-(left|center|right|top|middle|bottom)-?(corner)?\\s*/);\n            if (m) {\n                var name = \"\".concat(m[1], \"-\").concat(m[2]) + (m[3] ? \"-\".concat(m[3]) : \"\");\n                return {\n                    type: \"page-margin-box\",\n                    name: name,\n                    declarations: declarations()\n                };\n            }\n        }\n        function at_fontface() {\n            var m = match(/^@font-face\\s*/);\n            if (m) {\n                return {\n                    type: \"font-face\",\n                    declarations: declarations()\n                };\n            }\n        }\n        function at_supports() {\n            var m = match(/^@supports *([^{]+)/);\n            if (m) {\n                return {\n                    type: \"supports\",\n                    supports: m[1].trim(),\n                    rules: rules()\n                };\n            }\n        }\n        function at_host() {\n            var m = match(/^@host\\s*/);\n            if (m) {\n                return {\n                    type: \"host\",\n                    rules: rules()\n                };\n            }\n        }\n        function at_media() {\n            var m = match(/^@media([^{]+)*/);\n            if (m) {\n                return {\n                    type: \"media\",\n                    media: (m[1] || \"\").trim(),\n                    rules: rules()\n                };\n            }\n        }\n        function at_custom_m() {\n            var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n            if (m) {\n                return {\n                    type: \"custom-media\",\n                    name: m[1].trim(),\n                    media: m[2].trim()\n                };\n            }\n        }\n        function at_document() {\n            var m = match(/^@([-\\w]+)?document *([^{]+)/);\n            if (m) {\n                return {\n                    type: \"document\",\n                    document: m[2].trim(),\n                    vendor: m[1] ? m[1].trim() : null,\n                    rules: rules()\n                };\n            }\n        }\n        function at_x() {\n            var m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n            if (m) {\n                return {\n                    type: m[1],\n                    name: m[2].trim()\n                };\n            }\n        }\n        function at_rule() {\n            whitespace();\n            if (css[0] === \"@\") {\n                var ret = at_x() || at_fontface() || at_media() || at_keyframes() || at_supports() || at_document() || at_custom_m() || at_host() || at_page() || at_page_margin_box();\n                if (ret && !settings.preserveStatic) {\n                    var hasVarFunc = false;\n                    if (ret.declarations) {\n                        hasVarFunc = ret.declarations.some((function(decl) {\n                            return /var\\(/.test(decl.value);\n                        }));\n                    } else {\n                        var arr = ret.keyframes || ret.rules || [];\n                        hasVarFunc = arr.some((function(obj) {\n                            return (obj.declarations || []).some((function(decl) {\n                                return /var\\(/.test(decl.value);\n                            }));\n                        }));\n                    }\n                    return hasVarFunc ? ret : {};\n                }\n                return ret;\n            }\n        }\n        function rule() {\n            if (!settings.preserveStatic) {\n                var balancedMatch$1 = balancedMatch(\"{\", \"}\", css);\n                if (balancedMatch$1) {\n                    var hasVarDecl = /:(?:root|host)(?![.:#(])/.test(balancedMatch$1.pre) && /--\\S*\\s*:/.test(balancedMatch$1.body);\n                    var hasVarFunc = /var\\(/.test(balancedMatch$1.body);\n                    if (!hasVarDecl && !hasVarFunc) {\n                        css = css.slice(balancedMatch$1.end + 1);\n                        return {};\n                    }\n                }\n            }\n            var sel = selector() || [];\n            var decls = settings.preserveStatic ? declarations() : declarations().filter((function(decl) {\n                var hasVarDecl = sel.some((function(s) {\n                    return /:(?:root|host)(?![.:#(])/.test(s);\n                })) && /^--\\S/.test(decl.property);\n                var hasVarFunc = /var\\(/.test(decl.value);\n                return hasVarDecl || hasVarFunc;\n            }));\n            if (!sel.length) {\n                error(\"selector missing\");\n            }\n            return {\n                type: \"rule\",\n                selectors: sel,\n                declarations: decls\n            };\n        }\n        function rules(core) {\n            if (!core && !open()) {\n                return error(\"missing '{'\");\n            }\n            var node;\n            var rules = comments();\n            while (css.length && (core || css[0] !== \"}\") && (node = at_rule() || rule())) {\n                if (node.type) {\n                    rules.push(node);\n                }\n                rules = rules.concat(comments());\n            }\n            if (!core && !close()) {\n                return error(\"missing '}'\");\n            }\n            return rules;\n        }\n        return {\n            type: \"stylesheet\",\n            stylesheet: {\n                rules: rules(true),\n                errors: errors\n            }\n        };\n    }\n    function parseVars(cssData) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var defaults = {\n            parseHost: false,\n            store: {},\n            onWarning: function onWarning() {}\n        };\n        var settings = _extends({}, defaults, options);\n        var reVarDeclSelectors = new RegExp(\":\".concat(settings.parseHost ? \"host\" : \"root\", \"$\"));\n        if (typeof cssData === \"string\") {\n            cssData = parseCss(cssData, settings);\n        }\n        cssData.stylesheet.rules.forEach((function(rule) {\n            if (rule.type !== \"rule\" || !rule.selectors.some((function(s) {\n                return reVarDeclSelectors.test(s);\n            }))) {\n                return;\n            }\n            rule.declarations.forEach((function(decl, i) {\n                var prop = decl.property;\n                var value = decl.value;\n                if (prop && prop.indexOf(\"--\") === 0) {\n                    settings.store[prop] = value;\n                }\n            }));\n        }));\n        return settings.store;\n    }\n    function stringifyCss(tree) {\n        var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n        var cb = arguments.length > 2 ? arguments[2] : undefined;\n        var renderMethods = {\n            charset: function charset(node) {\n                return \"@charset \" + node.name + \";\";\n            },\n            comment: function comment(node) {\n                return node.comment.indexOf(\"__CSSVARSPONYFILL\") === 0 ? \"/*\" + node.comment + \"*/\" : \"\";\n            },\n            \"custom-media\": function customMedia(node) {\n                return \"@custom-media \" + node.name + \" \" + node.media + \";\";\n            },\n            declaration: function declaration(node) {\n                return node.property + \":\" + node.value + \";\";\n            },\n            document: function document(node) {\n                return \"@\" + (node.vendor || \"\") + \"document \" + node.document + \"{\" + visit(node.rules) + \"}\";\n            },\n            \"font-face\": function fontFace(node) {\n                return \"@font-face\" + \"{\" + visit(node.declarations) + \"}\";\n            },\n            host: function host(node) {\n                return \"@host\" + \"{\" + visit(node.rules) + \"}\";\n            },\n            import: function _import(node) {\n                return \"@import \" + node.name + \";\";\n            },\n            keyframe: function keyframe(node) {\n                return node.values.join(\",\") + \"{\" + visit(node.declarations) + \"}\";\n            },\n            keyframes: function keyframes(node) {\n                return \"@\" + (node.vendor || \"\") + \"keyframes \" + node.name + \"{\" + visit(node.keyframes) + \"}\";\n            },\n            media: function media(node) {\n                return \"@media \" + node.media + \"{\" + visit(node.rules) + \"}\";\n            },\n            namespace: function namespace(node) {\n                return \"@namespace \" + node.name + \";\";\n            },\n            page: function page(node) {\n                return \"@page \" + (node.selectors.length ? node.selectors.join(\", \") : \"\") + \"{\" + visit(node.declarations) + \"}\";\n            },\n            \"page-margin-box\": function pageMarginBox(node) {\n                return \"@\" + node.name + \"{\" + visit(node.declarations) + \"}\";\n            },\n            rule: function rule(node) {\n                var decls = node.declarations;\n                if (decls.length) {\n                    return node.selectors.join(\",\") + \"{\" + visit(decls) + \"}\";\n                }\n            },\n            supports: function supports(node) {\n                return \"@supports \" + node.supports + \"{\" + visit(node.rules) + \"}\";\n            }\n        };\n        function visit(nodes) {\n            var buf = \"\";\n            for (var i = 0; i < nodes.length; i++) {\n                var n = nodes[i];\n                if (cb) {\n                    cb(n);\n                }\n                var txt = renderMethods[n.type](n);\n                if (txt) {\n                    buf += txt;\n                    if (txt.length && n.selectors) {\n                        buf += delim;\n                    }\n                }\n            }\n            return buf;\n        }\n        return visit(tree.stylesheet.rules);\n    }\n    function walkCss(node, fn) {\n        node.rules.forEach((function(rule) {\n            if (rule.rules) {\n                walkCss(rule, fn);\n                return;\n            }\n            if (rule.keyframes) {\n                rule.keyframes.forEach((function(keyframe) {\n                    if (keyframe.type === \"keyframe\") {\n                        fn(keyframe.declarations, rule);\n                    }\n                }));\n                return;\n            }\n            if (!rule.declarations) {\n                return;\n            }\n            fn(rule.declarations, node);\n        }));\n    }\n    var VAR_PROP_IDENTIFIER = \"--\";\n    var VAR_FUNC_IDENTIFIER = \"var\";\n    function transformCss(cssData) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var defaults = {\n            preserveStatic: true,\n            preserveVars: false,\n            variables: {},\n            onWarning: function onWarning() {}\n        };\n        var settings = _extends({}, defaults, options);\n        if (typeof cssData === \"string\") {\n            cssData = parseCss(cssData, settings);\n        }\n        walkCss(cssData.stylesheet, (function(declarations, node) {\n            for (var i = 0; i < declarations.length; i++) {\n                var decl = declarations[i];\n                var type = decl.type;\n                var prop = decl.property;\n                var value = decl.value;\n                if (type !== \"declaration\") {\n                    continue;\n                }\n                if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                    declarations.splice(i, 1);\n                    i--;\n                    continue;\n                }\n                if (value.indexOf(VAR_FUNC_IDENTIFIER + \"(\") !== -1) {\n                    var resolvedValue = resolveValue(value, settings);\n                    if (resolvedValue !== decl.value) {\n                        resolvedValue = fixNestedCalc(resolvedValue);\n                        if (!settings.preserveVars) {\n                            decl.value = resolvedValue;\n                        } else {\n                            declarations.splice(i, 0, {\n                                type: type,\n                                property: prop,\n                                value: resolvedValue\n                            });\n                            i++;\n                        }\n                    }\n                }\n            }\n        }));\n        return stringifyCss(cssData);\n    }\n    function fixNestedCalc(value) {\n        var reCalcVal = /calc\\(([^)]+)\\)/g;\n        (value.match(reCalcVal) || []).forEach((function(match) {\n            var newVal = \"calc\".concat(match.split(\"calc\").join(\"\"));\n            value = value.replace(match, newVal);\n        }));\n        return value;\n    }\n    function resolveValue(value) {\n        var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var __recursiveFallback = arguments.length > 2 ? arguments[2] : undefined;\n        if (value.indexOf(\"var(\") === -1) {\n            return value;\n        }\n        var valueData = balancedMatch(\"(\", \")\", value);\n        function resolveFunc(value) {\n            var name = value.split(\",\")[0].replace(/[\\s\\n\\t]/g, \"\");\n            var fallback = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n            var match = Object.prototype.hasOwnProperty.call(settings.variables, name) ? String(settings.variables[name]) : undefined;\n            var replacement = match || (fallback ? String(fallback) : undefined);\n            var unresolvedFallback = __recursiveFallback || value;\n            if (!match) {\n                settings.onWarning('variable \"'.concat(name, '\" is undefined'));\n            }\n            if (replacement && replacement !== \"undefined\" && replacement.length > 0) {\n                return resolveValue(replacement, settings, unresolvedFallback);\n            } else {\n                return \"var(\".concat(unresolvedFallback, \")\");\n            }\n        }\n        if (!valueData) {\n            if (value.indexOf(\"var(\") !== -1) {\n                settings.onWarning('missing closing \")\" in the value \"'.concat(value, '\"'));\n            }\n            return value;\n        } else if (valueData.pre.slice(-3) === \"var\") {\n            var isEmptyVarFunc = valueData.body.trim().length === 0;\n            if (isEmptyVarFunc) {\n                settings.onWarning(\"var() must contain a non-whitespace string\");\n                return value;\n            } else {\n                return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);\n            }\n        } else {\n            return valueData.pre + \"(\".concat(resolveValue(valueData.body, settings), \")\") + resolveValue(valueData.post, settings);\n        }\n    }\n    var isBrowser = typeof window !== \"undefined\";\n    var isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports(\"(--a: 0)\");\n    var counters = {\n        group: 0,\n        job: 0\n    };\n    var defaults = {\n        rootElement: isBrowser ? document : null,\n        shadowDOM: false,\n        include: \"style,link[rel=stylesheet]\",\n        exclude: \"\",\n        variables: {},\n        onlyLegacy: true,\n        preserveStatic: true,\n        preserveVars: false,\n        silent: false,\n        updateDOM: true,\n        updateURLs: true,\n        watch: null,\n        onBeforeSend: function onBeforeSend() {},\n        onError: function onError() {},\n        onWarning: function onWarning() {},\n        onSuccess: function onSuccess() {},\n        onComplete: function onComplete() {},\n        onFinally: function onFinally() {}\n    };\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssKeyframes: /@(?:-\\w*-)?keyframes/,\n        cssMediaQueries: /@media[^{]+\\{([\\s\\S]+?})\\s*}/g,\n        cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n        cssVarDeclRules: /(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^}]*})/g,\n        cssVarDecls: /(?:[\\s;]*)(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*);/g,\n        cssVarFunc: /var\\(\\s*--[\\w-]/,\n        cssVars: /(?:(?::(?:root|host)(?![.:#(])[\\s,]*[^{]*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n    };\n    var variableStore = {\n        dom: {},\n        job: {},\n        user: {}\n    };\n    var cssVarsIsRunning = false;\n    var cssVarsObserver = null;\n    var cssVarsSrcNodeCount = 0;\n    var debounceTimer = null;\n    var isShadowDOMReady = false;\n    /**\n   * Fetches, parses, and transforms CSS custom properties from specified\n   * <style> and <link> elements into static values, then appends a new <style>\n   * element with static values to the DOM to provide CSS custom property\n   * compatibility for legacy browsers. Also provides a single interface for\n   * live updates of runtime values in both modern and legacy browsers.\n   *\n   * @preserve\n   * @param {object}   [options] Options object\n   * @param {object}   [options.rootElement=document] Root element to traverse for\n   *                   <link> and <style> nodes\n   * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n   *                   and <style> nodes will be processed.\n   * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n   *                   matching <link re=\"stylesheet\"> and <style> nodes to\n   *                   process\n   * @param {string}   [options.exclude] CSS selector matching <link\n   *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n   *                   matches by options.include\n   * @param {object}   [options.variables] A map of custom property name/value\n   *                   pairs. Property names can omit or include the leading\n   *                   double-hyphen (—), and values specified will override\n   *                   previous values\n   * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n   *                   only generate legacy-compatible CSS in browsers that lack\n   *                   native support (i.e., legacy browsers)\n   * @param {boolean}  [options.preserveStatic=true] Determines if CSS\n   *                   declarations that do not reference a custom property will\n   *                   be preserved in the transformed CSS\n   * @param {boolean}  [options.preserveVars=false] Determines if CSS custom\n   *                   property declarations will be preserved in the transformed\n   *                   CSS\n   * @param {boolean}  [options.silent=false] Determines if warning and error\n   *                   messages will be displayed on the console\n   * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n   *                   update the DOM after processing CSS custom properties\n   * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n   *                   convert relative url() paths to absolute urls\n   * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n   *                   be created that will execute the ponyfill when a <link> or\n   *                   <style> DOM mutation is observed\n   * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n   *                   1) the XHR object, 2) source node reference, and 3) the\n   *                   source URL as arguments\n   * @param {function} [options.onError] Callback after a CSS parsing error has\n   *                   occurred or an XHR request has failed. Passes 1) an error\n   *                   message, and 2) source node reference, 3) xhr, and 4 url as\n   *                   arguments.\n   * @param {function} [options.onWarning] Callback after each CSS parsing warning\n   *                   has occurred. Passes 1) a warning message as an argument.\n   * @param {function} [options.onSuccess] Callback after CSS data has been\n   *                   collected from each node and before CSS custom properties\n   *                   have been transformed. Allows modifying the CSS data before\n   *                   it is transformed by returning any string value (or false\n   *                   to skip). Passes 1) CSS text, 2) source node reference, and\n   *                   3) the source URL as arguments.\n   * @param {function} [options.onComplete] Callback after all CSS has been\n   *                   processed, legacy-compatible CSS has been generated, and\n   *                   (optionally) the DOM has been updated. Passes 1) a CSS\n   *                   string with CSS variable values resolved, 2) an array of\n   *                   output <style> node references that have been appended to\n   *                   the DOM, 3) an object containing all custom properies names\n   *                   and values, and 4) the ponyfill execution time in\n   *                   milliseconds.\n   * @param {function} [options.onFinally] Callback in modern and legacy browsers\n   *                   after the ponyfill has finished all tasks. Passes 1) a\n   *                   boolean indicating if the last ponyfill call resulted in a\n   *                   style change, 2) a boolean indicating if the current\n   *                   browser provides native support for CSS custom properties,\n   *                   and 3) the ponyfill execution time in milliseconds.\n   * @example\n   *\n   *   cssVars({\n   *     rootElement   : document,\n   *     shadowDOM     : false,\n   *     include       : 'style,link[rel=\"stylesheet\"]',\n   *     exclude       : '',\n   *     variables     : {},\n   *     onlyLegacy    : true,\n   *     preserveStatic: true,\n   *     preserveVars  : false,\n   *     silent        : false,\n   *     updateDOM     : true,\n   *     updateURLs    : true,\n   *     watch         : false,\n   *     onBeforeSend(xhr, node, url) {},\n   *     onError(message, node, xhr, url) {},\n   *     onWarning(message) {},\n   *     onSuccess(cssText, node, url) {},\n   *     onComplete(cssText, styleNode, cssVariables, benchmark) {},\n   *     onFinally(hasChanged, hasNativeSupport, benchmark)\n   *   });\n   */    function cssVars() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var msgPrefix = \"cssVars(): \";\n        var settings = _extends({}, defaults, options);\n        function handleError(message, sourceNode, xhr, url) {\n            if (!settings.silent && window.console) {\n                console.error(\"\".concat(msgPrefix).concat(message, \"\\n\"), sourceNode);\n            }\n            settings.onError(message, sourceNode, xhr, url);\n        }\n        function handleWarning(message) {\n            if (!settings.silent && window.console) {\n                console.warn(\"\".concat(msgPrefix).concat(message));\n            }\n            settings.onWarning(message);\n        }\n        function handleFinally(hasChanged) {\n            settings.onFinally(Boolean(hasChanged), isNativeSupport, getTimeStamp() - settings.__benchmark);\n        }\n        if (!isBrowser) {\n            return;\n        }\n        if (settings.watch) {\n            settings.watch = defaults.watch;\n            addMutationObserver(settings);\n            cssVars(settings);\n            return;\n        } else if (settings.watch === false && cssVarsObserver) {\n            cssVarsObserver.disconnect();\n            cssVarsObserver = null;\n        }\n        if (!settings.__benchmark) {\n            if (cssVarsIsRunning === settings.rootElement) {\n                cssVarsDebounced(options);\n                return;\n            }\n            settings.__benchmark = getTimeStamp();\n            settings.exclude = [ cssVarsObserver ? '[data-cssvars]:not([data-cssvars=\"\"])' : '[data-cssvars=\"out\"]', settings.exclude ].filter((function(selector) {\n                return selector;\n            })).join(\",\");\n            settings.variables = fixVarNames(settings.variables);\n            if (!cssVarsObserver) {\n                var outNodes = Array.apply(null, settings.rootElement.querySelectorAll('[data-cssvars=\"out\"]'));\n                outNodes.forEach((function(outNode) {\n                    var dataGroup = outNode.getAttribute(\"data-cssvars-group\");\n                    var srcNode = dataGroup ? settings.rootElement.querySelector('[data-cssvars=\"src\"][data-cssvars-group=\"'.concat(dataGroup, '\"]')) : null;\n                    if (!srcNode) {\n                        outNode.parentNode.removeChild(outNode);\n                    }\n                }));\n                if (cssVarsSrcNodeCount) {\n                    var srcNodes = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])');\n                    if (srcNodes.length < cssVarsSrcNodeCount) {\n                        cssVarsSrcNodeCount = srcNodes.length;\n                        variableStore.dom = {};\n                    }\n                }\n            }\n        }\n        if (document.readyState !== \"loading\") {\n            if (isNativeSupport && settings.onlyLegacy) {\n                var hasVarChange = false;\n                if (settings.updateDOM) {\n                    var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n                    Object.keys(settings.variables).forEach((function(key) {\n                        var varValue = settings.variables[key];\n                        hasVarChange = hasVarChange || varValue !== getComputedStyle(targetElm).getPropertyValue(key);\n                        targetElm.style.setProperty(key, varValue);\n                    }));\n                }\n                handleFinally(hasVarChange);\n            } else if (!isShadowDOMReady && (settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host)) {\n                getCssData({\n                    rootElement: defaults.rootElement,\n                    include: defaults.include,\n                    exclude: settings.exclude,\n                    skipDisabled: false,\n                    onSuccess: function onSuccess(cssText, node, url) {\n                        cssText = cssText.replace(regex.cssComments, \"\").replace(regex.cssMediaQueries, \"\");\n                        cssText = (cssText.match(regex.cssVarDeclRules) || []).join(\"\");\n                        return cssText || false;\n                    },\n                    onComplete: function onComplete(cssText, cssArray, nodeArray) {\n                        parseVars(cssText, {\n                            store: variableStore.dom,\n                            onWarning: handleWarning\n                        });\n                        isShadowDOMReady = true;\n                        cssVars(settings);\n                    }\n                });\n            } else {\n                cssVarsIsRunning = settings.rootElement;\n                getCssData({\n                    rootElement: settings.rootElement,\n                    include: settings.include,\n                    exclude: settings.exclude,\n                    skipDisabled: false,\n                    onBeforeSend: settings.onBeforeSend,\n                    onError: function onError(xhr, node, url) {\n                        var responseUrl = xhr.responseURL || getFullUrl$1(url, location.href);\n                        var statusText = xhr.statusText ? \"(\".concat(xhr.statusText, \")\") : \"Unspecified Error\" + (xhr.status === 0 ? \" (possibly CORS related)\" : \"\");\n                        var errorMsg = \"CSS XHR Error: \".concat(responseUrl, \" \").concat(xhr.status, \" \").concat(statusText);\n                        handleError(errorMsg, node, xhr, responseUrl);\n                    },\n                    onSuccess: function onSuccess(cssText, node, url) {\n                        var returnVal = settings.onSuccess(cssText, node, url);\n                        cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n                        if (settings.updateURLs) {\n                            cssText = fixRelativeCssUrls(cssText, url);\n                        }\n                        return cssText;\n                    },\n                    onComplete: function onComplete(cssText, cssArray) {\n                        var nodeArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n                        var currentVars = _extends({}, variableStore.dom, variableStore.user);\n                        var hasVarChange = false;\n                        variableStore.job = {};\n                        nodeArray.forEach((function(node, i) {\n                            var nodeCSS = cssArray[i];\n                            if (regex.cssVars.test(nodeCSS)) {\n                                try {\n                                    var cssTree = parseCss(nodeCSS, {\n                                        preserveStatic: settings.preserveStatic,\n                                        removeComments: true\n                                    });\n                                    parseVars(cssTree, {\n                                        parseHost: Boolean(settings.rootElement.host),\n                                        store: variableStore.dom,\n                                        onWarning: handleWarning\n                                    });\n                                    node.__cssVars = {\n                                        tree: cssTree\n                                    };\n                                } catch (err) {\n                                    handleError(err.message, node);\n                                }\n                            }\n                        }));\n                        _extends(variableStore.job, variableStore.dom);\n                        if (settings.updateDOM) {\n                            _extends(variableStore.user, settings.variables);\n                            _extends(variableStore.job, variableStore.user);\n                        } else {\n                            _extends(variableStore.job, variableStore.user, settings.variables);\n                            _extends(currentVars, settings.variables);\n                        }\n                        hasVarChange = counters.job > 0 && Boolean(Object.keys(variableStore.job).length > Object.keys(currentVars).length || Boolean(Object.keys(currentVars).length && Object.keys(variableStore.job).some((function(key) {\n                            return variableStore.job[key] !== currentVars[key];\n                        }))));\n                        if (hasVarChange) {\n                            resetCssNodes(settings.rootElement);\n                            cssVars(settings);\n                        } else {\n                            var outCssArray = [];\n                            var outNodeArray = [];\n                            var hasKeyframesWithVars = false;\n                            if (settings.updateDOM) {\n                                counters.job++;\n                            }\n                            nodeArray.forEach((function(node, i) {\n                                var isSkip = !node.__cssVars;\n                                if (node.__cssVars) {\n                                    try {\n                                        transformCss(node.__cssVars.tree, _extends({}, settings, {\n                                            variables: variableStore.job,\n                                            onWarning: handleWarning\n                                        }));\n                                        var outCss = stringifyCss(node.__cssVars.tree);\n                                        if (settings.updateDOM) {\n                                            var nodeCSS = cssArray[i];\n                                            var hasCSSVarFunc = regex.cssVarFunc.test(nodeCSS);\n                                            if (!node.getAttribute(\"data-cssvars\")) {\n                                                node.setAttribute(\"data-cssvars\", \"src\");\n                                            }\n                                            if (outCss.length && hasCSSVarFunc) {\n                                                var dataGroup = node.getAttribute(\"data-cssvars-group\") || ++counters.group;\n                                                var outCssNoSpaces = outCss.replace(/\\s/g, \"\");\n                                                var outNode = settings.rootElement.querySelector('[data-cssvars=\"out\"][data-cssvars-group=\"'.concat(dataGroup, '\"]')) || document.createElement(\"style\");\n                                                hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);\n                                                if (settings.preserveStatic) {\n                                                    node.sheet.disabled = true;\n                                                }\n                                                if (!outNode.hasAttribute(\"data-cssvars\")) {\n                                                    outNode.setAttribute(\"data-cssvars\", \"out\");\n                                                }\n                                                if (outCssNoSpaces === node.textContent.replace(/\\s/g, \"\")) {\n                                                    isSkip = true;\n                                                    if (outNode && outNode.parentNode) {\n                                                        node.removeAttribute(\"data-cssvars-group\");\n                                                        outNode.parentNode.removeChild(outNode);\n                                                    }\n                                                } else if (outCssNoSpaces !== outNode.textContent.replace(/\\s/g, \"\")) {\n                                                    [ node, outNode ].forEach((function(n) {\n                                                        n.setAttribute(\"data-cssvars-job\", counters.job);\n                                                        n.setAttribute(\"data-cssvars-group\", dataGroup);\n                                                    }));\n                                                    outNode.textContent = outCss;\n                                                    outCssArray.push(outCss);\n                                                    outNodeArray.push(outNode);\n                                                    if (!outNode.parentNode) {\n                                                        node.parentNode.insertBefore(outNode, node.nextSibling);\n                                                    }\n                                                }\n                                            }\n                                        } else {\n                                            if (node.textContent.replace(/\\s/g, \"\") !== outCss) {\n                                                outCssArray.push(outCss);\n                                            }\n                                        }\n                                    } catch (err) {\n                                        handleError(err.message, node);\n                                    }\n                                }\n                                if (isSkip) {\n                                    node.setAttribute(\"data-cssvars\", \"skip\");\n                                }\n                                if (!node.hasAttribute(\"data-cssvars-job\")) {\n                                    node.setAttribute(\"data-cssvars-job\", counters.job);\n                                }\n                            }));\n                            cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars=\"out\"])').length;\n                            if (settings.shadowDOM) {\n                                var elms = [ settings.rootElement ].concat(_toConsumableArray(settings.rootElement.querySelectorAll(\"*\")));\n                                for (var i = 0, elm; elm = elms[i]; ++i) {\n                                    if (elm.shadowRoot && elm.shadowRoot.querySelector(\"style\")) {\n                                        var shadowSettings = _extends({}, settings, {\n                                            rootElement: elm.shadowRoot\n                                        });\n                                        cssVars(shadowSettings);\n                                    }\n                                }\n                            }\n                            if (settings.updateDOM && hasKeyframesWithVars) {\n                                fixKeyframes(settings.rootElement);\n                            }\n                            cssVarsIsRunning = false;\n                            settings.onComplete(outCssArray.join(\"\"), outNodeArray, JSON.parse(JSON.stringify(variableStore.job)), getTimeStamp() - settings.__benchmark);\n                            handleFinally(outNodeArray.length);\n                        }\n                    }\n                });\n            }\n        } else {\n            document.addEventListener(\"DOMContentLoaded\", (function init(evt) {\n                cssVars(options);\n                document.removeEventListener(\"DOMContentLoaded\", init);\n            }));\n        }\n    }\n    cssVars.reset = function() {\n        counters.job = 0;\n        counters.group = 0;\n        cssVarsIsRunning = false;\n        if (cssVarsObserver) {\n            cssVarsObserver.disconnect();\n            cssVarsObserver = null;\n        }\n        cssVarsSrcNodeCount = 0;\n        debounceTimer = null;\n        isShadowDOMReady = false;\n        for (var prop in variableStore) {\n            variableStore[prop] = {};\n        }\n    };\n    function addMutationObserver(settings) {\n        function isLink(node) {\n            var isStylesheet = node.tagName === \"LINK\" && (node.getAttribute(\"rel\") || \"\").indexOf(\"stylesheet\") !== -1;\n            return isStylesheet && !node.sheet.disabled;\n        }\n        function isStyle(node) {\n            return node.tagName === \"STYLE\" && !node.sheet.disabled;\n        }\n        function isValidAddMutation(mutationNodes) {\n            return Array.apply(null, mutationNodes).some((function(node) {\n                var isElm = node.nodeType === 1;\n                var hasAttr = isElm && node.hasAttribute(\"data-cssvars\");\n                var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);\n                var isValid = !hasAttr && (isLink(node) || isStyleWithVars);\n                return isValid;\n            }));\n        }\n        function isValidRemoveMutation(mutationNodes) {\n            return Array.apply(null, mutationNodes).some((function(node) {\n                var isElm = node.nodeType === 1;\n                var isOutNode = isElm && node.getAttribute(\"data-cssvars\") === \"out\";\n                var isSrcNode = isElm && node.getAttribute(\"data-cssvars\") === \"src\";\n                var isValid = isSrcNode;\n                if (isSrcNode || isOutNode) {\n                    var dataGroup = node.getAttribute(\"data-cssvars-group\");\n                    var orphanNode = settings.rootElement.querySelector('[data-cssvars-group=\"'.concat(dataGroup, '\"]'));\n                    if (isSrcNode) {\n                        resetCssNodes(settings.rootElement);\n                        variableStore.dom = {};\n                    }\n                    if (orphanNode) {\n                        orphanNode.parentNode.removeChild(orphanNode);\n                    }\n                }\n                return isValid;\n            }));\n        }\n        if (!window.MutationObserver) {\n            return;\n        }\n        if (cssVarsObserver) {\n            cssVarsObserver.disconnect();\n            cssVarsObserver = null;\n        }\n        cssVarsObserver = new MutationObserver((function(mutations) {\n            var hasValidMutation = mutations.some((function(mutation) {\n                var isValid = false;\n                if (mutation.type === \"attributes\") {\n                    isValid = isLink(mutation.target);\n                } else if (mutation.type === \"childList\") {\n                    isValid = isValidAddMutation(mutation.addedNodes) || isValidRemoveMutation(mutation.removedNodes);\n                }\n                return isValid;\n            }));\n            if (hasValidMutation) {\n                cssVars(settings);\n            }\n        }));\n        cssVarsObserver.observe(document.documentElement, {\n            attributes: true,\n            attributeFilter: [ \"disabled\", \"href\" ],\n            childList: true,\n            subtree: true\n        });\n    }\n    function cssVarsDebounced(settings) {\n        var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n        clearTimeout(debounceTimer);\n        debounceTimer = setTimeout((function() {\n            settings.__benchmark = null;\n            cssVars(settings);\n        }), delay);\n    }\n    function fixKeyframes(rootElement) {\n        var animationNameProp = [ \"animation-name\", \"-moz-animation-name\", \"-webkit-animation-name\" ].filter((function(prop) {\n            return getComputedStyle(document.body)[prop];\n        }))[0];\n        if (animationNameProp) {\n            var allNodes = rootElement.getElementsByTagName(\"*\");\n            var keyframeNodes = [];\n            var nameMarker = \"__CSSVARSPONYFILL-KEYFRAMES__\";\n            for (var i = 0, len = allNodes.length; i < len; i++) {\n                var node = allNodes[i];\n                var animationName = getComputedStyle(node)[animationNameProp];\n                if (animationName !== \"none\") {\n                    node.style[animationNameProp] += nameMarker;\n                    keyframeNodes.push(node);\n                }\n            }\n            void document.body.offsetHeight;\n            for (var _i = 0, _len = keyframeNodes.length; _i < _len; _i++) {\n                var nodeStyle = keyframeNodes[_i].style;\n                nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, \"\");\n            }\n        }\n    }\n    function fixRelativeCssUrls(cssText, baseUrl) {\n        var cssUrls = cssText.replace(regex.cssComments, \"\").match(regex.cssUrls) || [];\n        cssUrls.forEach((function(cssUrl) {\n            var oldUrl = cssUrl.replace(regex.cssUrls, \"$1\");\n            var newUrl = getFullUrl$1(oldUrl, baseUrl);\n            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n        }));\n        return cssText;\n    }\n    function fixVarNames() {\n        var varObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var reLeadingHyphens = /^-{2}/;\n        return Object.keys(varObj).reduce((function(obj, value) {\n            var key = reLeadingHyphens.test(value) ? value : \"--\".concat(value.replace(/^-+/, \"\"));\n            obj[key] = varObj[value];\n            return obj;\n        }), {});\n    }\n    function getFullUrl$1(url) {\n        var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n        var d = document.implementation.createHTMLDocument(\"\");\n        var b = d.createElement(\"base\");\n        var a = d.createElement(\"a\");\n        d.head.appendChild(b);\n        d.body.appendChild(a);\n        b.href = base;\n        a.href = url;\n        return a.href;\n    }\n    function getTimeStamp() {\n        return isBrowser && (window.performance || {}).now ? window.performance.now() : (new Date).getTime();\n    }\n    function resetCssNodes(rootElement) {\n        var resetNodes = Array.apply(null, rootElement.querySelectorAll('[data-cssvars=\"skip\"],[data-cssvars=\"src\"]'));\n        resetNodes.forEach((function(node) {\n            return node.setAttribute(\"data-cssvars\", \"\");\n        }));\n    }\n    return cssVars;\n}));\n//# sourceMappingURL=css-vars-ponyfill.js.map\n","var _a;\nimport global from './global';\nvar isArrayLike = undefined, ShimIterator = undefined;\n// !has('es6-iterator')\n// elided: import './iterator'\nimport has from '../core/has';\n// !has('es6-symbol')\n// elided: import './Symbol'\nexport let Set = global.Set;\nif (!true) {\n    Set = global.Set = (_a = class Set {\n            constructor(iterable) {\n                this._setData = [];\n                this[Symbol.toStringTag] = 'Set';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            this.add(iterable[i]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.add(value);\n                        }\n                    }\n                }\n            }\n            add(value) {\n                if (this.has(value)) {\n                    return this;\n                }\n                this._setData.push(value);\n                return this;\n            }\n            clear() {\n                this._setData.length = 0;\n            }\n            delete(value) {\n                const idx = this._setData.indexOf(value);\n                if (idx === -1) {\n                    return false;\n                }\n                this._setData.splice(idx, 1);\n                return true;\n            }\n            entries() {\n                return new ShimIterator(this._setData.map((value) => [value, value]));\n            }\n            forEach(callbackfn, thisArg) {\n                const iterator = this.values();\n                let result = iterator.next();\n                while (!result.done) {\n                    callbackfn.call(thisArg, result.value, result.value, this);\n                    result = iterator.next();\n                }\n            }\n            has(value) {\n                return this._setData.indexOf(value) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._setData);\n            }\n            get size() {\n                return this._setData.length;\n            }\n            values() {\n                return new ShimIterator(this._setData);\n            }\n            [Symbol.iterator]() {\n                return new ShimIterator(this._setData);\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Set;","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty, depth = 0) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            if (depth > 0) {\n                return shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n            }\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map","// !has('dom-css-variables')\nimport * as cssVars from 'css-vars-ponyfill';\nexport default (typeof cssVars !== 'undefined' && typeof cssVars.default === 'function'\n    ? cssVars.default\n    : (() => { }));","import global from '../shim/global';\nimport Injector from './Injector';\nimport cssVars from '../shim/cssVariables';\nimport Map from '../shim/Map';\nimport has from './has';\nexport function isVariantModule(variant) {\n    return typeof variant !== 'string';\n}\nexport function isThemeWithVariant(theme) {\n    return theme && theme.hasOwnProperty('variant');\n}\nexport function isThemeWithVariants(theme) {\n    return theme && theme.hasOwnProperty('variants');\n}\nexport function isThemeInjectorPayloadWithVariant(theme) {\n    return !!theme && theme.hasOwnProperty('variant');\n}\nlet processCssVariant = function (_) { };\nif (!has('dom-css-variables')) {\n    const setUpCssVariantSupport = () => {\n        const styleId = '__dojo_processed_styles';\n        const processedCssMap = new Map();\n        let variantStyleElement;\n        function applyStyles(css) {\n            const style = document.createElement('style');\n            style.textContent = css;\n            style.setAttribute('id', styleId);\n            if (variantStyleElement && variantStyleElement.parentNode) {\n                variantStyleElement.parentNode.replaceChild(style, variantStyleElement);\n            }\n            else {\n                global.document.head.appendChild(style);\n            }\n            variantStyleElement = style;\n        }\n        return function processCssVariant(variantName) {\n            const processedCss = processedCssMap.get(variantName);\n            if (processedCss) {\n                applyStyles(processedCss);\n            }\n            else {\n                cssVars({\n                    exclude: `style[id=${styleId}]`,\n                    onSuccess: (css) => {\n                        let temp = css;\n                        let index = temp.indexOf(variantName);\n                        let variantCss = '';\n                        while (index !== -1) {\n                            temp = temp.substring(index + variantName.length);\n                            const match = temp.match(/\\{([^}]+)\\}/);\n                            if (match) {\n                                if (variantCss) {\n                                    variantCss = `${variantCss.substring(0, variantCss.length - 1)}${match[0].substring(1)}`;\n                                }\n                                else {\n                                    variantCss = match[0];\n                                }\n                            }\n                            index = temp.indexOf(variantName);\n                        }\n                        if (variantCss) {\n                            css = `:root ${variantCss}${css}`;\n                        }\n                        return css;\n                    },\n                    onComplete: (css) => {\n                        processedCssMap.set(variantName, css);\n                        applyStyles(css);\n                    },\n                    updateDOM: false,\n                    silent: true\n                });\n            }\n        };\n    };\n    processCssVariant = setUpCssVariantSupport();\n}\nfunction createThemeInjectorPayload(theme, variant) {\n    if (isThemeWithVariant(theme)) {\n        if (typeof theme.variant === 'string') {\n            return {\n                theme: theme.theme,\n                variant: { name: theme.variant, value: theme.theme.variants[theme.variant] }\n            };\n        }\n        return { theme: theme.theme, variant: theme.variant };\n    }\n    else if (isThemeWithVariants(theme)) {\n        variant = variant || 'default';\n        if (isVariantModule(variant)) {\n            if (!has('dom-css-variables')) {\n                processCssVariant(variant.value.root);\n            }\n            return { theme, variant };\n        }\n        if (!has('dom-css-variables')) {\n            processCssVariant(theme.variants[variant].root);\n        }\n        return { theme: theme, variant: { name: variant, value: theme.variants[variant] } };\n    }\n    return { theme };\n}\nexport class ThemeInjector extends Injector {\n    constructor(theme) {\n        super(theme ? createThemeInjectorPayload(theme) : theme);\n    }\n    set(theme, variant) {\n        super.set(createThemeInjectorPayload(theme, variant));\n    }\n    get() {\n        return super.get();\n    }\n}\nexport default ThemeInjector;\n//# sourceMappingURL=ThemeInjector.mjs.map","import Promise from '../shim/Promise';\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n     *                   removed from the instance, and its `destroy` method is invoked.\n     */\n    own(handle) {\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destroys all handlers registered for the instance\n     *\n     * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import has from '../core/has';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (!true) {\n    const keys = Object.keys.bind(Object);\n    Object.keys = function symbolAwareKeys(o) {\n        return keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    Object.assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    const getOwnPropertyNames = Object.getOwnPropertyNames.bind(Object);\n    Object.getOwnPropertyNames = function symbolAwareGetOwnPropertyNames(o) {\n        return getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    Object.getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    Object.is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (!true) {\n    Object.getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return Object.getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = Object.getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    Object.entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    Object.values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\nassign = Object.assign;\ngetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\ngetOwnPropertyNames = Object.getOwnPropertyNames;\ngetOwnPropertySymbols = Object.getOwnPropertySymbols;\nis = Object.is;\nkeys = Object.keys;\ngetOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\nentries = Object.entries;\nvalues = Object.values;\nexport default Object;\n//# sourceMappingURL=object.mjs.map","var registerCustomElement = require('@dojo/framework/core/registerCustomElement').default;\n\nfunction useDefault(p) {\n\treturn p.then(function (r) {\n\t\treturn r.default;\n\t});\n}\n\n\nregisterCustomElement(() => useDefault(import('src/accordion')), {\"tagName\":\"dojo-accordion\",\"attributes\":[\"key\"],\"properties\":[\"exclusive\",\"panes\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/avatar')), {\"tagName\":\"dojo-avatar\",\"attributes\":[\"key\",\"variant\",\"src\",\"size\",\"alt\"],\"properties\":[\"secondary\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/breadcrumb-group')), {\"tagName\":\"dojo-breadcrumb-group\",\"attributes\":[\"key\",\"label\"],\"properties\":[\"items\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/button')), {\"tagName\":\"dojo-button\",\"attributes\":[\"key\",\"name\",\"type\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"pressed\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onClick\",\"onDown\",\"onFocus\",\"onOut\",\"onOver\",\"onUp\"]});registerCustomElement(() => useDefault(import('src/calendar')), {\"tagName\":\"dojo-calendar\",\"attributes\":[\"key\",\"locale\"],\"properties\":[\"aria\",\"labels\",\"maxDate\",\"minDate\",\"monthNames\",\"weekdayNames\",\"firstDayOfWeek\",\"initialValue\",\"value\",\"initialMonth\",\"month\",\"initialYear\",\"year\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\"],\"events\":[\"onValue\",\"onMonth\",\"onYear\"]});registerCustomElement(() => useDefault(import('src/card')), {\"tagName\":\"dojo-card\",\"attributes\":[\"key\",\"mediaSrc\",\"mediaTitle\",\"title\",\"subtitle\"],\"properties\":[\"square\",\"theme\",\"classes\"],\"events\":[\"onAction\"]});registerCustomElement(() => useDefault(import('src/checkbox')), {\"tagName\":\"dojo-checkbox\",\"attributes\":[\"key\",\"name\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"checked\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"valid\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onOut\",\"onOver\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/checkbox-group')), {\"tagName\":\"dojo-checkbox-group\",\"attributes\":[\"key\",\"name\"],\"properties\":[\"options\",\"initialValue\",\"value\",\"theme\",\"classes\"],\"events\":[\"onValue\"]});registerCustomElement(() => useDefault(import('src/chip')), {\"tagName\":\"dojo-chip\",\"attributes\":[\"key\"],\"properties\":[\"disabled\",\"checked\",\"theme\",\"classes\"],\"events\":[\"onClose\",\"onClick\"]});registerCustomElement(() => useDefault(import('src/constrained-input')), {\"tagName\":\"dojo-constrained-input\",\"attributes\":[\"key\",\"type\",\"autocomplete\",\"helperText\",\"name\",\"placeholder\",\"initialValue\",\"value\",\"widgetId\",\"locale\"],\"properties\":[\"rules\",\"aria\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"theme\",\"classes\",\"i18nBundle\",\"rtl\"],\"events\":[\"onValidate\",\"onBlur\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onValue\",\"onClick\",\"onOver\",\"onOut\"]});registerCustomElement(() => useDefault(import('src/context-menu')), {\"tagName\":\"dojo-context-menu\",\"attributes\":[\"key\"],\"properties\":[\"theme\",\"classes\",\"transform\",\"resource\"],\"events\":[\"onSelect\"]});registerCustomElement(() => useDefault(import('src/context-popup')), {\"tagName\":\"dojo-context-popup\",\"attributes\":[\"key\"],\"properties\":[\"focus\"],\"events\":[\"onClose\",\"onOpen\"]});registerCustomElement(() => useDefault(import('src/date-input')), {\"tagName\":\"dojo-index\",\"attributes\":[\"key\",\"initialValue\",\"value\",\"max\",\"min\",\"name\",\"locale\"],\"properties\":[\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\"],\"events\":[\"onValue\",\"onValidate\"]});registerCustomElement(() => useDefault(import('src/dialog')), {\"tagName\":\"dojo-dialog\",\"attributes\":[\"key\",\"role\",\"closeText\",\"locale\"],\"properties\":[\"aria\",\"closeable\",\"open\",\"underlay\",\"theme\",\"classes\",\"i18nBundle\",\"rtl\"],\"events\":[\"onOpen\",\"onRequestClose\"]});registerCustomElement(() => useDefault(import('src/email-input')), {\"tagName\":\"dojo-email-input\",\"attributes\":[\"key\",\"autocomplete\",\"helperText\",\"name\",\"placeholder\",\"initialValue\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"theme\",\"classes\"],\"events\":[\"onBlur\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onValidate\",\"onValue\",\"onClick\",\"onOver\",\"onOut\"]});registerCustomElement(() => useDefault(import('src/floating-action-button')), {\"tagName\":\"dojo-floating-action-button\",\"attributes\":[\"key\",\"name\",\"type\",\"value\",\"widgetId\"],\"properties\":[\"extended\",\"aria\",\"disabled\",\"pressed\",\"theme\",\"classes\"],\"events\":[\"onBlur\",\"onClick\",\"onDown\",\"onFocus\",\"onOut\",\"onOver\",\"onUp\"]});registerCustomElement(() => useDefault(import('src/form')), {\"tagName\":\"dojo-form\",\"attributes\":[\"key\",\"name\",\"action\"],\"properties\":[\"initialValue\",\"value\",\"theme\",\"classes\"],\"events\":[\"onValue\",\"onSubmit\"]});registerCustomElement(() => useDefault(import('src/grid')), {\"tagName\":\"dojo-grid\",\"attributes\":[\"storeId\",\"locale\"],\"properties\":[\"columnConfig\",\"fetcher\",\"height\",\"updater\",\"store\",\"customRenderers\",\"pagination\",\"i18nBundle\",\"rtl\",\"theme\",\"classes\",\"extraClasses\"],\"events\":[\"onRowSelect\"]});registerCustomElement(() => useDefault(import('src/header')), {\"tagName\":\"dojo-header\",\"attributes\":[\"key\"],\"properties\":[\"sticky\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/header-card')), {\"tagName\":\"dojo-header-card\",\"attributes\":[\"key\",\"title\",\"mediaSrc\",\"mediaTitle\",\"subtitle\"],\"properties\":[\"square\",\"theme\",\"classes\"],\"events\":[\"onAction\"]});registerCustomElement(() => useDefault(import('src/helper-text')), {\"tagName\":\"dojo-helper-text\",\"attributes\":[\"key\",\"text\"],\"properties\":[\"valid\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/icon')), {\"tagName\":\"dojo-icon\",\"attributes\":[\"key\",\"altText\",\"type\"],\"properties\":[\"aria\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/label')), {\"tagName\":\"dojo-label\",\"attributes\":[\"key\",\"forId\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"focused\",\"hidden\",\"readOnly\",\"required\",\"secondary\",\"valid\",\"active\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/list')), {\"tagName\":\"dojo-list\",\"attributes\":[\"key\",\"initialValue\",\"value\",\"widgetId\"],\"properties\":[\"activeIndex\",\"focusable\",\"itemsInView\",\"menu\",\"disabled\",\"theme\",\"classes\",\"focus\",\"transform\",\"resource\"],\"events\":[\"onValue\",\"onRequestClose\",\"onActiveIndexChange\",\"onFocus\",\"onBlur\"]});registerCustomElement(() => useDefault(import('src/loading-indicator')), {\"tagName\":\"dojo-loading-indicator\",\"attributes\":[\"key\"],\"properties\":[\"theme\",\"classes\",\"extraClasses\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/chip-typeahead')), {\"tagName\":\"dojo-chip-typeahead\",\"attributes\":[\"key\",\"name\",\"placement\"],\"properties\":[\"initialValue\",\"value\",\"disabled\",\"itemsInView\",\"position\",\"duplicates\",\"strict\",\"theme\",\"classes\",\"focus\",\"transform\",\"resource\"],\"events\":[\"onValue\"]});registerCustomElement(() => useDefault(import('src/native-select')), {\"tagName\":\"dojo-native-select\",\"attributes\":[\"key\",\"initialValue\",\"value\",\"helperText\",\"name\",\"locale\"],\"properties\":[\"options\",\"disabled\",\"required\",\"size\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\"],\"events\":[\"onValue\",\"onBlur\",\"onFocus\"]});registerCustomElement(() => useDefault(import('src/number-input')), {\"tagName\":\"dojo-number-input\",\"attributes\":[\"key\",\"autocomplete\",\"helperText\",\"name\",\"placeholder\",\"widgetId\"],\"properties\":[\"min\",\"max\",\"step\",\"valid\",\"aria\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"initialValue\",\"value\",\"theme\",\"classes\"],\"events\":[\"onBlur\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onValidate\",\"onValue\",\"onClick\",\"onOver\",\"onOut\"]});registerCustomElement(() => useDefault(import('src/outlined-button')), {\"tagName\":\"dojo-outlined-button\",\"attributes\":[\"key\",\"name\",\"type\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"pressed\",\"theme\",\"classes\"],\"events\":[\"onBlur\",\"onClick\",\"onDown\",\"onFocus\",\"onOut\",\"onOver\",\"onUp\"]});registerCustomElement(() => useDefault(import('src/pagination')), {\"tagName\":\"dojo-pagination\",\"attributes\":[\"key\",\"locale\"],\"properties\":[\"initialPage\",\"page\",\"initialPageSize\",\"pageSize\",\"pageSizes\",\"siblingCount\",\"total\",\"theme\",\"classes\",\"i18nBundle\",\"rtl\"],\"events\":[\"onPage\",\"onPageSize\"]});registerCustomElement(() => useDefault(import('src/password-input')), {\"tagName\":\"dojo-password-input\",\"attributes\":[\"key\",\"value\",\"initialValue\",\"name\",\"autocomplete\",\"helperText\",\"placeholder\",\"widgetId\"],\"properties\":[\"rules\",\"disabled\",\"aria\",\"labelHidden\",\"readOnly\",\"required\",\"theme\",\"classes\"],\"events\":[\"onValue\",\"onValidate\",\"onBlur\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onClick\",\"onOver\",\"onOut\"]});registerCustomElement(() => useDefault(import('src/popup')), {\"tagName\":\"dojo-popup\",\"attributes\":[\"key\",\"position\"],\"properties\":[\"x\",\"yBottom\",\"yTop\",\"open\",\"underlayVisible\",\"theme\",\"classes\"],\"events\":[\"onClose\"]});registerCustomElement(() => useDefault(import('src/progress')), {\"tagName\":\"dojo-progress\",\"attributes\":[\"key\",\"widgetId\"],\"properties\":[\"aria\",\"max\",\"min\",\"showOutput\",\"value\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/radio')), {\"tagName\":\"dojo-radio\",\"attributes\":[\"key\",\"name\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"checked\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"valid\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onOut\",\"onOver\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/radio-group')), {\"tagName\":\"dojo-radio-group\",\"attributes\":[\"key\",\"initialValue\",\"value\",\"name\"],\"properties\":[\"options\",\"theme\",\"classes\"],\"events\":[\"onValue\"]});registerCustomElement(() => useDefault(import('src/raised-button')), {\"tagName\":\"dojo-raised-button\",\"attributes\":[\"key\",\"name\",\"type\",\"value\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"pressed\",\"theme\",\"classes\"],\"events\":[\"onBlur\",\"onClick\",\"onDown\",\"onFocus\",\"onOut\",\"onOver\",\"onUp\"]});registerCustomElement(() => useDefault(import('src/range-slider')), {\"tagName\":\"dojo-range-slider\",\"attributes\":[\"key\",\"maximumLabel\",\"maxName\",\"minimumLabel\",\"minName\",\"name\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"labelHidden\",\"max\",\"min\",\"outputIsTooltip\",\"readOnly\",\"required\",\"showOutput\",\"step\",\"valid\",\"initialValue\",\"value\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onOut\",\"onOver\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/select')), {\"tagName\":\"dojo-select\",\"attributes\":[\"key\",\"initialValue\",\"value\",\"position\",\"placeholder\",\"helperText\",\"name\",\"locale\"],\"properties\":[\"itemsInView\",\"disabled\",\"required\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\",\"transform\",\"resource\"],\"events\":[\"onValue\",\"onValidate\"]});registerCustomElement(() => useDefault(import('src/slide-pane')), {\"tagName\":\"dojo-slide-pane\",\"attributes\":[\"key\",\"align\",\"closeText\",\"title\",\"locale\"],\"properties\":[\"aria\",\"open\",\"underlay\",\"width\",\"theme\",\"classes\",\"i18nBundle\",\"rtl\"],\"events\":[\"onRequestClose\"]});registerCustomElement(() => useDefault(import('src/slider')), {\"tagName\":\"dojo-slider\",\"attributes\":[\"key\",\"name\",\"verticalHeight\",\"widgetId\"],\"properties\":[\"aria\",\"disabled\",\"labelAfter\",\"labelHidden\",\"max\",\"min\",\"outputIsTooltip\",\"readOnly\",\"required\",\"showOutput\",\"step\",\"valid\",\"initialValue\",\"value\",\"vertical\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onOut\",\"onOver\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/snackbar')), {\"tagName\":\"dojo-snackbar\",\"attributes\":[\"key\",\"type\"],\"properties\":[\"open\",\"leading\",\"stacked\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/switch')), {\"tagName\":\"dojo-switch\",\"attributes\":[\"key\",\"name\"],\"properties\":[\"aria\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"valid\",\"value\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onOut\",\"onOver\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/tab-container')), {\"tagName\":\"dojo-tab-container\",\"attributes\":[\"key\",\"alignButtons\",\"locale\"],\"properties\":[\"aria\",\"initialActiveIndex\",\"activeIndex\",\"tabs\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\"],\"events\":[\"onClose\",\"onActiveIndex\"]});registerCustomElement(() => useDefault(import('src/text-area')), {\"tagName\":\"dojo-text-area\",\"attributes\":[\"key\",\"helperText\",\"maxLength\",\"minLength\",\"name\",\"placeholder\",\"initialValue\",\"value\",\"widgetId\",\"wrapText\"],\"properties\":[\"aria\",\"columns\",\"customValidator\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"rows\",\"valid\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onClick\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onOut\",\"onOver\",\"onValidate\",\"onValue\"]});registerCustomElement(() => useDefault(import('src/text-input')), {\"tagName\":\"dojo-text-input\",\"attributes\":[\"key\",\"min\",\"max\",\"step\",\"maxLength\",\"minLength\",\"pattern\",\"type\",\"autocomplete\",\"helperText\",\"name\",\"placeholder\",\"initialValue\",\"value\",\"widgetId\"],\"properties\":[\"customValidator\",\"valid\",\"aria\",\"disabled\",\"labelHidden\",\"readOnly\",\"required\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onBlur\",\"onFocus\",\"onKeyDown\",\"onKeyUp\",\"onValidate\",\"onValue\",\"onClick\",\"onOver\",\"onOut\"]});registerCustomElement(() => useDefault(import('src/three-column-layout')), {\"tagName\":\"dojo-three-column-layout\",\"attributes\":[\"key\",\"bias\"],\"properties\":[\"twoColumnBreakpoint\",\"oneColumnBreakpoint\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/time-picker')), {\"tagName\":\"dojo-time-picker\",\"attributes\":[\"key\",\"name\",\"initialValue\",\"value\",\"max\",\"min\",\"format\",\"locale\"],\"properties\":[\"disabled\",\"timeDisabled\",\"required\",\"step\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\"],\"events\":[\"onValue\",\"onValidate\"]});registerCustomElement(() => useDefault(import('src/title-pane')), {\"tagName\":\"dojo-title-pane\",\"attributes\":[\"key\",\"name\"],\"properties\":[\"closeable\",\"headingLevel\",\"initialOpen\",\"open\",\"theme\",\"classes\",\"focus\"],\"events\":[\"onClose\",\"onOpen\"]});registerCustomElement(() => useDefault(import('src/tooltip')), {\"tagName\":\"dojo-tooltip\",\"attributes\":[\"key\",\"orientation\"],\"properties\":[\"aria\",\"open\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/trigger-popup')), {\"tagName\":\"dojo-trigger-popup\",\"attributes\":[\"key\",\"position\"],\"properties\":[\"matchWidth\",\"underlayVisible\"],\"events\":[\"onOpen\",\"onClose\"]});registerCustomElement(() => useDefault(import('src/two-column-layout')), {\"tagName\":\"dojo-two-column-layout\",\"attributes\":[\"key\",\"bias\"],\"properties\":[\"breakpoint\",\"theme\",\"classes\"],\"events\":[]});registerCustomElement(() => useDefault(import('src/typeahead')), {\"tagName\":\"dojo-typeahead\",\"attributes\":[\"key\",\"initialValue\",\"helperText\",\"name\",\"value\",\"locale\"],\"properties\":[\"itemsInView\",\"position\",\"disabled\",\"required\",\"itemDisabled\",\"strict\",\"theme\",\"classes\",\"focus\",\"i18nBundle\",\"rtl\",\"transform\",\"resource\"],\"events\":[\"onValue\",\"onValidate\",\"onBlur\",\"onFocus\"]});","import Registry from './Registry';\nimport { create as vdomCreate, diffProperty, dom as vdomDom, invalidator, isTextNode, renderer, w as vdomW } from './vdom';\nimport { from } from '../shim/array';\nimport global from '../shim/global';\nimport ThemeInjector from './ThemeInjector';\nconst RESERVED_PROPS = ['focus'];\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nfunction isElement(item) {\n    return item && item.nodeType === 1;\n}\nfunction isDojoChild(item) {\n    return isElement(item) && item.tagName.indexOf('-') > -1;\n}\nfunction w(node, properties, children) {\n    const wrappedWNode = vdomW(node, properties, children);\n    function wrapper(...args) {\n        const { domNode } = node;\n        if (args.length && domNode) {\n            setTimeout(() => {\n                domNode.dispatchEvent(new CustomEvent('render', {\n                    bubbles: false,\n                    detail: args\n                }));\n            });\n        }\n        return wrappedWNode;\n    }\n    Object.keys(wrappedWNode).forEach((key) => (wrapper[key] = wrappedWNode[key]));\n    return wrapper;\n}\nfunction dom(options, children) {\n    const wrappedDomNode = vdomDom(options, children);\n    function wrapper(...args) {\n        const { domNode } = wrappedDomNode;\n        if (args.length && domNode) {\n            setTimeout(() => {\n                domNode.dispatchEvent(new CustomEvent('render', {\n                    bubbles: false,\n                    detail: args\n                }));\n            });\n        }\n        return wrappedDomNode;\n    }\n    Object.keys(wrappedDomNode).forEach((key) => (wrapper[key] = wrappedDomNode[key]));\n    return wrapper;\n}\nconst factory = vdomCreate({ diffProperty, invalidator }).properties();\nexport function DomToWidgetWrapper(domNode) {\n    const wrapper = factory(function DomToWidgetWrapper({ properties, middleware: { invalidator, diffProperty } }) {\n        diffProperty('', invalidator);\n        const props = Object.keys(properties()).reduce((props, key) => {\n            const value = properties()[key];\n            if (key.indexOf('on') === 0 || RESERVED_PROPS.indexOf(key) !== -1) {\n                key = `__${key}`;\n            }\n            props[key] = value;\n            return props;\n        }, {});\n        return dom({ node: domNode, props, diffType: 'dom' });\n    });\n    wrapper.domNode = domNode;\n    return wrapper;\n}\nfunction registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new ThemeInjector(theme);\n    themeRegistry.defineInjector('__theme_injector', (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector;\n    });\n    return themeInjector;\n}\nexport function create(descriptor, widgetFactory) {\n    const { attributes = [], properties = [], registryFactory = () => new Registry() } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    properties.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._propertiesMap = {};\n            this._initialised = false;\n            this._childType = descriptor.childType;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            this._waitTillReady();\n        }\n        _hasBeenParsed() {\n            if (document.readyState !== 'loading') {\n                return true;\n            }\n            let element = this;\n            while (element) {\n                if (element.nextSibling) {\n                    return true;\n                }\n                element = element.parentNode;\n            }\n            return false;\n        }\n        _waitTillReady() {\n            this._initialised = true;\n            if (this._hasBeenParsed()) {\n                this._readyCallback();\n            }\n            else {\n                setTimeout(() => {\n                    this._waitTillReady();\n                }, 100);\n            }\n        }\n        async _readyCallback() {\n            const domProperties = {};\n            const { properties = [], events = [] } = descriptor;\n            const WidgetConstructor = await widgetFactory();\n            this._properties = Object.assign({}, this._propertiesWithAttributes(properties), this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const isReservedProp = RESERVED_PROPS.indexOf(propertyName) !== -1;\n                const value = this._propertiesMap[propertyName] || !isReservedProp ? this[propertyName] : undefined;\n                let filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (isReservedProp) {\n                    filteredPropertyName = `__${propertyName}`;\n                }\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                if (!isReservedProp) {\n                    domProperties[propertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = from(this.childNodes).filter((childNode) => !isTextNode(childNode) || childNode.data.replace(/^\\s+|\\s+$/g, ''));\n            if (!this._childType) {\n                if (children.some((child) => isDojoChild(child))) {\n                    this._childType = CustomElementChildType.DOJO;\n                }\n                else {\n                    this._childType = CustomElementChildType.NODE;\n                }\n            }\n            from(children).forEach((childNode) => {\n                if (this._childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = factory(() => w(WidgetConstructor, widgetProperties, renderChildren()));\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getVariant() ? { theme: this._getTheme(), variant: this._getVariant() } : this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => {\n                const variant = this._getVariant();\n                if (variant !== 'noVariant') {\n                    themeContext.set(this._getTheme(), variant);\n                }\n                else {\n                    themeContext.set(this._getTheme());\n                }\n            });\n            const r = renderer(() => w(Wrapper, {}));\n            this._renderer = r;\n            r.mount({ domNode: this, merge: false, registry });\n            const root = this.children[0];\n            if (root) {\n                const { display = 'block' } = global.getComputedStyle(root);\n                this.style.display = display;\n            }\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _getVariant() {\n            if (global && global.dojoce && global.dojoce.variant) {\n                return global.dojoce.variant;\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._renderer) {\n                this._renderer.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (this._children.some((child) => child.domNode.getAttribute && child.domNode.getAttribute('slot'))) {\n                const slots = this._children.reduce((slots, child) => {\n                    const { domNode } = child;\n                    const slotName = domNode.getAttribute && domNode.getAttribute('slot');\n                    if (!slotName) {\n                        return slots;\n                    }\n                    let slotResult = child.isFactory\n                        ? w(child, domNode.__properties__ ? Object.assign({}, domNode.__properties__()) : {}, domNode.__children__ ? [...domNode.__children__()] : [])\n                        : child;\n                    const existingSlotValue = slots[slotName];\n                    return Object.assign({}, slots, { [slotName]: existingSlotValue ? [...existingSlotValue, slotResult] : [slotResult] });\n                }, {});\n                return [\n                    Object.keys(slots).reduce((result, key) => {\n                        const value = slots[key];\n                        return Object.assign({}, result, { [key]: value.length === 1 ? value[0] : value });\n                    }, {})\n                ];\n            }\n            if (this._childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            if (attributes.indexOf(propertyName) >= 0) {\n                this._setProperty(propertyName, value);\n            }\n            else {\n                try {\n                    const parsedValue = value ? JSON.parse(value) : null;\n                    this._setProperty(propertyName, parsedValue);\n                }\n                catch (e) {\n                    // if json parsing error, we do not set the property\n                }\n            }\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _propertiesWithAttributes(properties) {\n            return properties.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    try {\n                        properties[propertyName] = JSON.parse(value);\n                    }\n                    catch (e) {\n                        // invalid json values do not get set\n                    }\n                }\n                return properties;\n            }, {});\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n        set(key, value) {\n            this._propertiesMap[key] = value;\n            if (this._renderer) {\n                this._setProperty(key, value);\n            }\n        }\n    };\n}\nexport function register(WidgetConstructor, descriptor = WidgetConstructor.__customElementDescriptor) {\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map"],"sourceRoot":""}